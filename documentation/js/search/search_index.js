var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,0.909,1,2.685]],["body/injectables/AccessTokenGuard.html",[0,1.545,1,4.561,2,2.193,3,0.154,4,0.154,5,0.137,6,5.096,7,0.363,8,0.011,9,0.934,10,5.096,11,3.982,12,2.517,13,2.517,14,2.517,15,2.517,16,2.517,17,0.154,18,0.2,19,2.612,20,5.096,21,0.009,22,0.009]],["title/injectables/AccessTokenStrategy.html",[0,0.909,23,2.854]],["body/injectables/AccessTokenStrategy.html",[0,1.308,2,1.69,3,0.119,4,0.119,5,0.106,7,0.37,8,0.011,9,0.72,11,3.069,17,0.119,18,0.154,19,2.013,21,0.008,22,0.008,23,4.105,24,3.562,25,0.698,26,1.658,27,5.254,28,2.887,29,3.928,30,5.298,31,1.058,32,4.485,33,1.76,34,1.16,35,1.12,36,1.708,37,5.999,38,6.589,39,4.485,40,5.254,41,1.239,42,2.887,43,3.928,44,3.928,45,3.928,46,3.562,47,3.862,48,3.928,49,1.269,50,2.474,51,4.485,52,1.872,53,1.94,54,3.928,55,3.928,56,3.928,57,3.928,58,4.485,59,1.356]],["title/entities/Address.html",[60,1.261,61,2.413]],["body/entities/Address.html",[3,0.068,4,0.068,5,0.06,7,0.205,8,0.011,17,0.068,18,0.088,21,0.005,22,0.005,25,0.622,31,1.275,34,1.536,35,1.221,49,1.655,60,0.776,61,2.843,62,1.071,63,2.248,64,1.412,65,6.014,66,6.014,67,6.014,68,6.014,69,4.304,70,1.518,71,4.304,72,4.914,73,4.914,74,4.838,75,2.058,76,4.762,77,4.525,78,4.762,79,5.249,80,2.566,81,3.359,82,3.514,83,2.777,84,2.566,85,2.566,86,2.566,87,3.999,88,2.566,89,1.459,90,1.485,91,2.206,92,2.566,93,3.999,94,2.566,95,3.999,96,3.999,97,2.566,98,3.999,99,2.566,100,1.756,101,3.999,102,2.566,103,1.244,104,2.737,105,2.109,106,1,107,1,108,1.881,109,2.566,110,1.244,111,2.566,112,1.353,113,1.152]],["title/controllers/AddressController.html",[114,1.152,115,3.058]],["body/controllers/AddressController.html",[3,0.093,4,0.093,5,0.082,7,0.332,8,0.011,9,0.562,17,0.093,18,0.12,21,0.007,22,0.007,25,0.544,26,1.394,31,1.213,33,1.901,34,1.253,35,1.074,36,1.845,41,1.899,49,1.629,52,1.46,53,1.513,59,2.078,61,2.024,70,1.706,75,1.956,114,0.966,115,3.7,116,0.966,117,3.064,118,1.631,119,1.276,120,2.364,121,2.107,122,1.841,123,1.726,124,3.064,125,4.609,126,2.871,127,3.498,128,3.498,129,1.46,130,2.92,131,3.498,132,1.276,133,2.92,134,3.498,135,1.276,136,5.17,137,2.92,138,3.498,139,2.549,140,1.844,141,1.844,142,1.844,143,3.811,144,2.564,145,1.276,146,4.008,147,1.276,148,3.498,149,1.844,150,3.498,151,3.498,152,2.024,153,3.498,154,2.024,155,3.498,156,1.844,157,3.498]],["title/modules/AddressModule.html",[158,1.187,159,2.854]],["body/modules/AddressModule.html",[3,0.141,4,0.141,5,0.125,7,0.376,8,0.011,9,0.853,17,0.141,18,0.183,21,0.009,22,0.009,115,5.374,116,1.849,143,5.216,144,3.892,158,1.906,159,5.545,160,2.14,161,2.699,162,4.65,163,4.65,164,2.896,165,2.297,166,2.297,167,5.308,168,3.004,169,4.65]],["title/injectables/AddressService.html",[0,0.909,143,2.685]],["body/injectables/AddressService.html",[0,1.15,2,1.403,3,0.099,4,0.099,5,0.088,7,0.314,8,0.011,9,0.598,17,0.099,18,0.128,21,0.007,22,0.007,25,0.579,26,1.458,31,1.242,33,1.956,34,1.29,35,1.105,36,1.898,41,2.077,49,1.49,59,2.128,61,4.073,70,1.742,89,2.85,119,1.334,120,2.432,121,2.203,122,1.925,123,1.805,124,4.622,125,4.532,129,2.203,132,1.925,135,1.925,136,5.145,143,3.397,145,1.358,146,4.191,147,1.358,170,3.261,171,3.723,172,3.723,173,3.723,174,3.723,175,3.723,176,4.073,177,2.154,178,1.501,179,1.963,180,2.154]],["title/controllers/AppController.html",[114,1.152,181,3.058]],["body/controllers/AppController.html",[3,0.106,4,0.106,5,0.094,7,0.383,8,0.012,9,0.89,12,1.727,13,1.727,14,1.727,15,1.727,16,1.727,17,0.106,18,0.137,21,0.007,22,0.007,25,0.621,26,1.531,31,0.704,41,1.103,49,1.173,52,2.657,53,2.975,59,1.924,75,1.136,114,1.759,116,1.103,126,1.936,181,4.062,182,3.497,183,6.022,184,3.992,185,3.17,186,2.927,187,2.927,188,1.727,189,4.936,190,3.497,191,3.876,192,3.992,193,3.992,194,3.992,195,3.992,196,3.992,197,2.927,198,3.17,199,3.992,200,3.992,201,3.497,202,3.992,203,3.17,204,3.992,205,3.992,206,3.497,207,3.992,208,3.992,209,3.992,210,3.497,211,3.992]],["title/modules/AppModule.html",[158,1.187,212,3.058]],["body/modules/AppModule.html",[3,0.072,4,0.072,5,0.064,7,0.413,8,0.012,9,0.435,12,1.172,13,1.172,14,1.172,15,1.172,16,1.172,17,0.072,18,0.093,21,0.006,22,0.006,30,3.479,42,1.743,83,1.131,107,1.625,116,1.152,158,1.187,159,4.457,160,1.092,161,1.681,164,1.804,165,1.172,166,1.172,168,1.871,181,3.727,189,4.192,190,2.372,212,6.186,213,2.372,214,2.372,215,2.372,216,4.457,217,4.457,218,4.457,219,4.457,220,4.457,221,4.457,222,4.457,223,4.457,224,4.457,225,4.457,226,4.457,227,4.457,228,2.151,229,3.057,230,2.708,231,2.151,232,1.743,233,2.708,234,2.708,235,2.372,236,2.708,237,2.708,238,1.263,239,1.853,240,2.708,241,2.708,242,2.708,243,2.708,244,1.263,245,1.853,246,2.708,247,1.313,248,1.853,249,2.708,250,2.708,251,1.853,252,2.708,253,1.853,254,2.708,255,4.169,256,2.708,257,1.567,258,4.037,259,2.372,260,2.708,261,2.708,262,2.708,263,2.372,264,2.708,265,2.708,266,2.372,267,2.708,268,2.708,269,2.708]],["title/injectables/AppService.html",[0,0.909,189,2.685]],["body/injectables/AppService.html",[0,1.349,2,1.771,3,0.124,4,0.124,5,0.111,7,0.317,8,0.011,9,0.755,17,0.124,18,0.162,21,0.008,22,0.008,25,0.731,26,1.71,28,4.454,30,4.735,31,1.297,35,1.026,41,1.299,42,3.026,49,1.31,59,1.421,64,2.186,75,1.338,113,3.106,178,1.895,183,6.44,189,3.984,266,4.117,270,4.117,271,6.919,272,6.351,273,6.188,274,4.7,275,6.188,276,4.7,277,3.733,278,4.7,279,4.7,280,4.7,281,4.7]],["title/controllers/AuthController.html",[114,1.152,282,3.058]],["body/controllers/AuthController.html",[1,2.112,3,0.087,4,0.087,5,0.077,7,0.38,8,0.012,9,0.527,12,1.42,13,1.42,14,1.42,15,1.42,16,1.42,17,0.087,18,0.113,21,0.006,22,0.006,25,0.51,26,1.331,31,1.11,33,1.845,34,1.216,35,1.042,36,1.79,41,1.738,47,2.112,52,1.37,59,1.726,75,1.79,114,0.907,116,0.907,118,1.53,126,1.591,139,1.658,185,5.747,186,2.405,187,2.405,188,1.42,191,3.476,198,2.606,201,4.219,203,5.319,257,2.787,282,3.531,283,2.874,284,4.219,285,4.219,286,4.219,287,4.219,288,2.874,289,4.304,290,3.281,291,4.219,292,3.281,293,3.281,294,3.281,295,3.281,296,3.281,297,3.281,298,3.281,299,2.874,300,4.051,301,4.817,302,3.281,303,2.606,304,2.606,305,2.405,306,3.281,307,2.874,308,2.246,309,2.874,310,2.874,311,2.606,312,2.405,313,2.246,314,2.606,315,3.281,316,3.281,317,3.281,318,3.281,319,3.281,320,3.281,321,3.281,322,3.281,323,3.281,324,3.281,325,3.281,326,2.112,327,3.281,328,3.101,329,3.281,330,3.281,331,2.606,332,3.281,333,3.281,334,3.281]],["title/classes/AuthDto.html",[18,0.143,289,2.854]],["body/classes/AuthDto.html",[3,0.142,4,0.142,5,0.126,7,0.274,8,0.011,17,0.142,18,0.231,21,0.009,22,0.009,25,0.833,31,1.187,35,1.115,49,1.634,50,4.059,64,2.376,75,1.916,289,4.605,335,1.669,336,4.689,337,4.738,338,5.894,339,5.353,340,5.353,341,5.395,342,5.395,343,3.446]],["title/modules/AuthModule.html",[158,1.187,216,2.854]],["body/modules/AuthModule.html",[3,0.112,4,0.112,5,0.099,7,0.399,8,0.011,9,0.677,12,1.824,13,1.824,14,1.824,15,1.824,16,1.824,17,0.112,18,0.145,21,0.008,22,0.008,23,5.203,47,3.705,116,1.59,158,1.638,160,1.7,161,2.32,164,2.49,165,1.824,166,1.824,168,2.583,191,4.63,216,5.56,229,3.092,235,3.694,282,4.802,309,3.694,311,4.57,312,4.219,313,3.938,314,4.57,344,3.694,345,3.694,346,5.203,347,4.217,348,4.217,349,3.349,350,4.217,351,4.217,352,4.217,353,5.754,354,3.694,355,5.754,356,3.349]],["title/injectables/AuthService.html",[0,0.909,191,2.54]],["body/injectables/AuthService.html",[0,0.726,2,0.769,3,0.054,4,0.054,5,0.048,7,0.311,8,0.012,9,0.328,17,0.054,18,0.07,21,0.004,22,0.004,25,0.317,26,0.92,28,2.143,30,4.155,31,1.117,33,1.858,34,1.225,35,1.05,36,1.803,41,1.678,42,1.313,47,1.313,48,2.916,49,1.676,50,2.959,59,1.74,60,0.617,81,1.075,107,2.366,178,2.163,191,2.027,197,3.092,257,3.991,284,2.916,285,2.916,286,2.916,287,2.916,288,2.916,289,3.332,291,2.916,299,2.916,300,3.104,307,1.786,308,1.396,310,1.786,311,1.62,312,1.495,313,1.396,314,1.62,326,3.705,328,4.441,337,1.313,349,1.62,357,1.786,358,4.63,359,3.329,360,3.329,361,3.329,362,2.039,363,3.505,364,6.072,365,2.039,366,3.329,367,2.039,368,3.866,369,3.329,370,2.039,371,2.039,372,3.329,373,2.039,374,3.329,375,2.039,376,2.039,377,2.278,378,3.329,379,2.039,380,2.039,381,2.039,382,2.039,383,2.644,384,3.329,385,4.218,386,3.329,387,4.486,388,2.039,389,2.039,390,5.364,391,3.329,392,2.039,393,1.786,394,1.786,395,2.039,396,5.755,397,2.039,398,2.039,399,2.039,400,4.218,401,2.039,402,2.039,403,3.329,404,2.039,405,2.039,406,2.039,407,2.039,408,3.329,409,3.329,410,3.329,411,3.329,412,2.039,413,3.329,414,2.039,415,3.329,416,2.039,417,3.329,418,3.329,419,2.039,420,3.329,421,2.039,422,2.039,423,2.039,424,2.039,425,3.329,426,3.329,427,3.329,428,3.329,429,2.039]],["title/entities/Cart.html",[60,1.261,238,1.944]],["body/entities/Cart.html",[3,0.088,4,0.088,5,0.078,7,0.294,8,0.012,17,0.088,18,0.114,21,0.006,22,0.006,25,0.753,31,1.239,34,1.545,35,1.202,49,1.336,60,1,62,1.38,64,1.711,70,1.673,75,1.999,76,2.95,77,2.803,78,2.95,81,3.328,82,3.482,83,2.805,89,2.302,90,1.913,91,2.672,100,3.315,103,1.604,104,3.924,105,2.554,106,1.289,110,1.604,112,1.744,113,1.484,238,2.673,326,3.691,430,2.896,431,5.194,432,4.622,433,5.022,434,4.845,435,3.307,436,3.307,437,4.845,438,3.307,439,4.845,440,3.307,441,4.243,442,4.243,443,2.95,444,4.243,445,3.307,446,2.95,447,3.315,448,3.307,449,2.626,450,3.307,451,2.896,452,3.307,453,2.896]],["title/controllers/CartController.html",[114,1.152,454,3.058]],["body/controllers/CartController.html",[3,0.093,4,0.093,5,0.082,7,0.332,8,0.011,9,0.562,17,0.093,18,0.12,21,0.007,22,0.007,25,0.544,26,1.394,31,1.213,33,1.901,34,1.253,35,1.074,36,1.845,41,1.899,49,1.629,52,1.46,53,1.513,59,2.078,70,1.706,75,1.956,114,0.966,116,0.966,118,1.631,119,1.276,120,2.364,121,2.107,122,1.841,123,1.726,126,2.871,129,1.46,130,2.92,132,1.276,133,2.92,135,1.276,137,2.92,139,2.549,140,1.844,141,1.844,142,1.844,145,1.276,147,1.276,149,1.844,152,2.024,154,2.024,156,1.844,238,1.631,454,3.7,455,3.064,456,3.064,457,4.609,458,3.498,459,3.498,460,3.498,461,3.498,462,5.17,463,3.498,464,3.811,465,3.064,466,4.008,467,3.064,468,3.498,469,3.498,470,3.498,471,3.498,472,3.498]],["title/entities/CartItem.html",[60,1.261,431,2.854]],["body/entities/CartItem.html",[3,0.086,4,0.086,5,0.077,7,0.246,8,0.011,17,0.086,18,0.112,21,0.006,22,0.006,25,0.745,31,1.232,34,1.507,35,1.157,49,1.326,60,0.985,62,1.359,64,1.692,70,0.776,75,1.988,83,2.787,89,2.547,103,1.579,106,1.269,110,1.579,112,1.717,113,1.461,238,3.524,431,3.278,446,4.253,449,5.733,453,2.852,473,4.396,474,2.852,475,6.266,476,5.682,477,6.266,478,5.682,479,5.682,480,2.228,481,3.256,482,3.256,483,4.288,484,4.977,485,3.256,486,4.593,487,4.79,488,4.593,489,4.593,490,4.593,491,4.593,492,3.256,493,4.79,494,3.256,495,4.79,496,3.256,497,4.79,498,3.256,499,3.278,500,3.278,501,2.852,502,3.256,503,3.256,504,2.586,505,3.256,506,2.228]],["title/controllers/CartItemController.html",[114,1.152,507,3.058]],["body/controllers/CartItemController.html",[3,0.088,4,0.088,5,0.079,7,0.325,8,0.011,9,0.537,17,0.088,18,0.115,21,0.006,22,0.006,25,0.52,26,1.349,31,1.191,33,1.861,34,1.227,35,1.052,36,1.806,41,1.865,49,1.61,52,1.395,53,1.446,59,2.04,70,1.679,75,1.921,114,0.923,116,0.923,118,1.558,119,1.234,120,2.314,121,2.038,122,1.781,123,1.67,126,2.797,129,1.395,130,2.825,132,1.219,133,2.825,135,1.219,137,2.825,139,2.466,140,1.762,141,1.762,142,1.762,145,1.219,147,1.219,149,1.762,152,1.933,154,1.933,156,1.762,238,2.958,239,4.823,467,2.927,473,4.292,504,3.877,507,3.579,508,2.927,509,2.927,510,4.537,511,3.342,512,3.342,513,3.342,514,3.342,515,5.106,516,3.342,517,3.713,518,2.927,519,3.877,520,3.342,521,3.342,522,3.342,523,3.342,524,3.342]],["title/modules/CartItemModule.html",[158,1.187,217,2.854]],["body/modules/CartItemModule.html",[3,0.138,4,0.138,5,0.123,7,0.373,8,0.011,9,0.839,17,0.138,18,0.18,21,0.009,22,0.009,116,1.83,158,1.886,160,2.105,161,2.67,164,2.866,165,2.259,166,2.259,168,2.973,217,5.522,238,3.088,239,3.573,473,3.18,507,5.333,517,5.194,518,4.573,525,4.573,526,4.573,527,5.221,528,5.221]],["title/injectables/CartItemService.html",[0,0.909,517,2.685]],["body/injectables/CartItemService.html",[0,1.118,2,1.348,3,0.095,4,0.095,5,0.084,7,0.307,8,0.011,9,0.574,17,0.095,18,0.123,21,0.007,22,0.007,25,0.556,26,1.417,31,1.223,33,1.921,34,1.266,35,1.085,36,1.864,41,2.053,49,1.467,59,2.096,70,1.719,89,2.823,119,1.296,120,2.388,121,2.141,122,1.87,123,1.754,129,2.141,132,1.87,135,1.87,145,1.304,147,1.304,176,4.011,177,2.069,178,1.442,179,1.886,180,2.069,238,2.391,239,4.937,431,4.744,473,4.393,509,4.491,510,4.463,515,5.085,517,3.301,519,4.072,529,3.133,530,3.576,531,3.576,532,3.576,533,3.576,534,3.576]],["title/modules/CartModule.html",[158,1.187,218,2.854]],["body/modules/CartModule.html",[3,0.141,4,0.141,5,0.125,7,0.376,8,0.011,9,0.853,17,0.141,18,0.183,21,0.009,22,0.009,116,1.849,158,1.906,160,2.14,161,2.699,164,2.896,165,2.297,166,2.297,168,3.004,218,5.545,454,5.374,464,5.216,465,4.65,535,4.65,536,4.65,537,5.308,538,5.308]],["title/injectables/CartService.html",[0,0.909,464,2.685]],["body/injectables/CartService.html",[0,1.15,2,1.403,3,0.099,4,0.099,5,0.088,7,0.314,8,0.011,9,0.598,17,0.099,18,0.128,21,0.007,22,0.007,25,0.579,26,1.458,31,1.242,33,1.956,34,1.29,35,1.105,36,1.898,41,2.077,49,1.49,59,2.128,70,1.742,89,2.85,119,1.334,120,2.432,121,2.203,122,1.925,123,1.805,129,2.203,132,1.925,135,1.925,145,1.358,147,1.358,176,4.073,177,2.154,178,1.501,179,1.963,180,2.154,238,3.282,456,4.622,457,4.532,462,5.145,464,3.397,466,4.191,539,3.261,540,3.723,541,3.723,542,3.723,543,3.723,544,3.723]],["title/classes/CreateAddressDto.html",[18,0.143,125,2.685]],["body/classes/CreateAddressDto.html",[3,0.169,4,0.169,5,0.15,8,0.011,17,0.169,18,0.219,21,0.01,22,0.01,125,4.816,335,1.986,545,5.582,546,5.061]],["title/classes/CreateCartDto.html",[18,0.143,457,2.685]],["body/classes/CreateCartDto.html",[3,0.169,4,0.169,5,0.15,8,0.011,17,0.169,18,0.219,21,0.01,22,0.01,335,1.986,457,4.816,547,5.582,548,5.061]],["title/classes/CreateCartItemDto.html",[18,0.143,510,2.685]],["body/classes/CreateCartItemDto.html",[3,0.167,4,0.167,5,0.149,8,0.01,17,0.167,18,0.217,21,0.01,22,0.01,238,2.942,335,1.967,473,3.842,510,4.788,549,5.526,550,5.011]],["title/classes/CreateExampleDto.html",[18,0.143,551,2.685]],["body/classes/CreateExampleDto.html",[3,0.104,4,0.104,5,0.092,7,0.201,8,0.011,17,0.104,18,0.188,21,0.007,22,0.007,25,0.609,31,1.346,34,1.219,35,1.264,36,2.324,49,1.647,64,1.932,70,1.502,75,2.171,89,1.995,335,1.221,341,4.01,342,5.592,343,2.522,551,3.521,552,6.815,553,3.112,554,3.646,555,5.004,556,6.302,557,5.004,558,5.004,559,3.918,560,3.432,561,3.918,562,5.416,563,7.174,564,3.918,565,3.918,566,3.918,567,6.302,568,3.918,569,3.918,570,4.01]],["title/classes/CreateOrderDto.html",[18,0.143,571,2.685]],["body/classes/CreateOrderDto.html",[3,0.169,4,0.169,5,0.15,8,0.011,17,0.169,18,0.219,21,0.01,22,0.01,335,1.986,571,4.816,572,5.582,573,5.061]],["title/classes/CreatePaymentDto.html",[18,0.143,574,2.685]],["body/classes/CreatePaymentDto.html",[3,0.169,4,0.169,5,0.15,8,0.011,17,0.169,18,0.219,21,0.01,22,0.01,335,1.986,574,4.816,575,5.582,576,5.061]],["title/classes/CreatePaymentTypeDto.html",[18,0.143,577,2.685]],["body/classes/CreatePaymentTypeDto.html",[3,0.167,4,0.167,5,0.149,8,0.01,17,0.167,18,0.217,21,0.01,22,0.01,244,2.942,335,1.967,577,4.788,578,3.842,579,5.526,580,5.011]],["title/classes/CreateProductCategoryDto.html",[18,0.143,581,2.685]],["body/classes/CreateProductCategoryDto.html",[3,0.167,4,0.167,5,0.149,8,0.01,17,0.167,18,0.217,21,0.01,22,0.01,247,3.059,335,1.967,581,4.788,582,3.842,583,5.526,584,5.011]],["title/classes/CreateProductDto.html",[18,0.143,585,2.685]],["body/classes/CreateProductDto.html",[3,0.169,4,0.169,5,0.15,8,0.011,17,0.169,18,0.219,21,0.01,22,0.01,335,1.986,585,4.816,586,5.582,587,5.061]],["title/classes/CreateUserDto.html",[18,0.143,300,2.413]],["body/classes/CreateUserDto.html",[3,0.112,4,0.112,5,0.1,7,0.217,8,0.011,17,0.112,18,0.198,21,0.008,22,0.008,25,0.658,31,1.343,34,1.269,35,1.261,49,1.75,50,3.619,64,2.037,70,1.564,75,2.166,300,3.337,328,4.224,335,1.319,337,4.224,338,5.747,341,5.406,342,5.579,343,2.724,560,3.706,570,4.228,588,6.821,589,3.36,590,5.211,591,6.562,592,4.231,593,4.231,594,4.231,595,4.231,596,4.231,597,4.231]],["title/entities/Example.html",[60,1.261,598,2.413]],["body/entities/Example.html",[3,0.106,4,0.106,5,0.094,7,0.284,8,0.011,17,0.106,18,0.191,21,0.007,22,0.007,25,0.621,31,1.353,35,1.271,49,1.582,60,1.675,62,1.666,64,1.957,70,1.517,75,2.183,82,2.202,83,2.87,89,2.021,103,3.718,105,2.105,106,1.556,343,2.57,443,2.431,554,3.683,555,5.055,557,5.055,558,5.055,562,4.401,570,4.062,598,3.206,599,3.497,600,5.055,601,5.055,602,6.022,603,5.575,604,3.992,605,3.992,606,3.992,607,3.992,608,3.992,609,3.992,610,3.992,611,3.497,612,3.992,613,5.575,614,3.992,615,3.497]],["title/controllers/ExampleController.html",[114,1.152,616,3.058]],["body/controllers/ExampleController.html",[1,1.937,3,0.08,4,0.08,5,0.071,7,0.348,8,0.012,9,0.483,12,1.302,13,1.302,14,1.302,15,1.302,16,1.302,17,0.08,18,0.103,21,0.006,22,0.006,25,0.468,26,1.248,31,1.197,33,1.768,34,1.166,35,0.999,36,1.716,41,1.875,49,1.62,52,1.256,53,1.302,59,2.051,70,1.617,75,1.931,114,0.832,116,0.832,118,1.403,119,1.142,120,2.199,122,1.648,123,1.856,126,2.63,132,1.098,135,1.098,139,2.282,140,1.587,141,1.587,142,1.587,145,1.098,147,1.098,149,1.587,156,1.587,178,2.43,186,2.206,187,2.206,188,1.302,206,2.636,304,2.39,331,2.39,551,4.367,554,1.741,598,2.614,616,3.312,617,2.636,618,3.957,619,5.28,620,2.636,621,3.009,622,3.009,623,2.636,624,3.957,625,3.009,626,3.009,627,3.009,628,3.957,629,3.009,630,6.028,631,4.125,632,3.957,633,3.009,634,5.28,635,3.492,636,2.636,637,3.588,638,3.009,639,3.009,640,3.009,641,3.957,642,3.009,643,3.009,644,3.009,645,3.009,646,3.009,647,3.009,648,3.009,649,3.009,650,2.636,651,3.009,652,3.009]],["title/modules/ExampleModule.html",[158,1.187,219,2.854]],["body/modules/ExampleModule.html",[3,0.134,4,0.134,5,0.119,7,0.401,8,0.011,9,0.812,17,0.134,18,0.174,21,0.009,22,0.009,116,1.793,158,1.847,160,2.038,161,2.616,164,2.807,165,2.187,166,2.187,168,2.912,219,5.475,229,3.706,231,4.015,232,3.254,598,2.925,616,5.253,635,5.151,636,4.428,653,4.428,654,4.428,655,5.055,656,5.055,657,4.428,658,5.055]],["title/classes/ExampleSeeder.html",[18,0.143,659,3.312]],["body/classes/ExampleSeeder.html",[3,0.121,4,0.121,5,0.108,7,0.35,8,0.011,17,0.121,18,0.158,21,0.008,22,0.008,25,0.713,26,1.681,31,0.808,33,1.344,34,0.886,35,0.759,36,1.304,41,1.266,62,1.913,106,2.371,113,3.067,257,3.521,335,1.428,358,4.161,377,4.164,387,3.706,443,2.79,598,2.651,659,4.832,660,4.013,661,4.832,662,5.984,663,5.984,664,4.013,665,6.822,666,5.984,667,6.376,668,4.582,669,3.639,670,4.582,671,4.582,672,4.582,673,5.33,674,4.582,675,4.013,676,4.013,677,4.013,678,3.639,679,4.582]],["title/injectables/ExampleService.html",[0,0.909,635,2.685]],["body/injectables/ExampleService.html",[0,0.954,2,1.088,3,0.076,4,0.076,5,0.068,7,0.342,8,0.012,9,0.464,17,0.076,18,0.099,21,0.006,22,0.006,25,0.449,26,1.21,28,2.818,31,1.261,33,1.861,34,1.227,35,1.107,36,1.806,41,1.845,49,1.605,59,2.019,64,1.546,70,1.512,106,1.125,119,1.107,120,2.153,122,1.597,123,1.498,132,1.597,135,1.597,145,1.053,147,1.053,178,1.765,179,1.522,197,2.116,210,2.528,232,1.858,257,3.06,272,5.51,277,2.292,312,2.116,358,4.067,368,3.477,387,2.666,551,4.084,598,3.671,618,3.834,619,5.17,620,3.834,623,3.834,631,4.748,635,3.404,637,3.477,657,2.528,680,2.528,681,2.886,682,4.687,683,4.378,684,4.378,685,2.886,686,2.886,687,2.886,688,2.886,689,2.886,690,2.886,691,2.528,692,2.886,693,2.886,694,2.886,695,2.886,696,2.886,697,2.886,698,2.886,699,2.292,700,2.886,701,2.886,702,2.886,703,2.886,704,4.378,705,2.886,706,2.886,707,2.886,708,2.886,709,2.886,710,2.886,711,2.886,712,2.886,713,3.834,714,2.886,715,2.528,716,2.528,717,2.886]],["title/entities/Order.html",[60,1.261,432,2.54]],["body/entities/Order.html",[3,0.083,4,0.083,5,0.074,7,0.285,8,0.012,17,0.083,18,0.108,21,0.006,22,0.006,25,0.725,31,1.215,34,1.473,35,1.182,49,1.302,60,0.948,62,1.309,64,1.645,70,1.746,75,1.961,81,3.632,82,3.799,83,2.977,89,2.244,90,1.814,91,2.569,103,1.52,105,2.456,106,1.222,107,2.917,110,1.52,112,1.653,113,1.407,238,3.49,432,2.837,433,4.868,441,4.08,442,4.08,443,2.837,444,4.08,446,2.837,447,2.146,480,3.188,484,2.746,486,3.415,488,3.415,489,3.415,490,3.415,491,3.415,499,3.804,500,3.804,501,2.746,506,3.188,718,2.746,719,4.868,720,5.558,721,3.136,722,3.136,723,3.136,724,3.136,725,4.08,726,3.136,727,4.658,728,3.136,729,3.136,730,3.136,731,2.299,732,3.136,733,3.136,734,3.136,735,3.136]],["title/controllers/OrderController.html",[114,1.152,736,3.058]],["body/controllers/OrderController.html",[3,0.093,4,0.093,5,0.082,7,0.332,8,0.011,9,0.562,17,0.093,18,0.12,21,0.007,22,0.007,25,0.544,26,1.394,31,1.213,33,1.901,34,1.253,35,1.074,36,1.845,41,1.899,49,1.629,52,1.46,53,1.513,59,2.078,70,1.706,75,1.956,114,0.966,116,0.966,118,1.631,119,1.276,120,2.364,121,2.107,122,1.841,123,1.726,126,2.871,129,1.46,130,2.92,132,1.276,133,2.92,135,1.276,137,2.92,139,2.549,140,1.844,141,1.844,142,1.844,145,1.276,147,1.276,149,1.844,152,2.024,154,2.024,156,1.844,432,2.13,571,4.609,736,3.7,737,3.064,738,3.064,739,3.498,740,3.498,741,3.498,742,3.498,743,5.17,744,3.498,745,3.811,746,3.064,747,4.008,748,3.498,749,3.498,750,3.498,751,3.498,752,3.498,753,3.498]],["title/modules/OrderModule.html",[158,1.187,220,2.854]],["body/modules/OrderModule.html",[3,0.141,4,0.141,5,0.125,7,0.376,8,0.011,9,0.853,17,0.141,18,0.183,21,0.009,22,0.009,116,1.849,158,1.906,160,2.14,161,2.699,164,2.896,165,2.297,166,2.297,168,3.004,220,5.545,736,5.374,745,5.216,746,4.65,754,4.65,755,4.65,756,5.308,757,5.308]],["title/injectables/OrderService.html",[0,0.909,745,2.685]],["body/injectables/OrderService.html",[0,1.15,2,1.403,3,0.099,4,0.099,5,0.088,7,0.314,8,0.011,9,0.598,17,0.099,18,0.128,21,0.007,22,0.007,25,0.579,26,1.458,31,1.242,33,1.956,34,1.29,35,1.105,36,1.898,41,2.077,49,1.49,59,2.128,70,1.742,89,2.85,119,1.334,120,2.432,121,2.203,122,1.925,123,1.805,129,2.203,132,1.925,135,1.925,145,1.358,147,1.358,176,4.073,177,2.154,178,1.501,179,1.963,180,2.154,432,4.287,571,4.532,738,4.622,743,5.145,745,3.397,747,4.191,758,3.261,759,3.723,760,3.723,761,3.723,762,3.723,763,3.723]],["title/entities/Payment.html",[60,1.261,244,1.944]],["body/entities/Payment.html",[3,0.071,4,0.071,5,0.063,7,0.211,8,0.012,17,0.071,18,0.092,21,0.005,22,0.005,25,0.641,31,1.262,34,1.523,35,1.211,49,1.546,60,0.807,62,1.114,64,1.456,70,1.542,75,2.036,76,4.245,77,4.033,78,4.245,79,3.877,81,3.853,82,4.03,83,3.105,89,2.361,90,1.544,91,2.274,100,1.826,103,1.294,104,2.821,105,2.173,106,1.04,107,1.04,110,1.294,112,1.407,113,1.198,244,1.922,326,3.243,446,3.45,447,2.821,486,3.022,488,3.022,489,3.022,490,3.022,491,3.022,699,4.863,764,2.337,765,6.124,766,5.037,767,5.037,768,5.037,769,5.037,770,4.895,771,2.668,772,2.668,773,2.668,774,4.122,775,2.668,776,4.122,777,3.611,778,2.668,779,4.122,780,2.668,781,4.122,782,4.122,783,2.668,784,2.668,785,4.122,786,2.668,787,1.956,788,2.337,789,2.668,790,2.668]],["title/controllers/PaymentController.html",[114,1.152,791,3.058]],["body/controllers/PaymentController.html",[3,0.093,4,0.093,5,0.082,7,0.332,8,0.011,9,0.562,17,0.093,18,0.12,21,0.007,22,0.007,25,0.544,26,1.394,31,1.213,33,1.901,34,1.253,35,1.074,36,1.845,41,1.899,49,1.629,52,1.46,53,1.513,59,2.078,70,1.706,75,1.956,114,0.966,116,0.966,118,1.631,119,1.276,120,2.364,121,2.107,122,1.841,123,1.726,126,2.871,129,1.46,130,2.92,132,1.276,133,2.92,135,1.276,137,2.92,139,2.549,140,1.844,141,1.844,142,1.844,145,1.276,147,1.276,149,1.844,152,2.024,154,2.024,156,1.844,244,1.631,574,4.609,791,3.7,792,3.064,793,3.064,794,3.498,795,3.498,796,3.498,797,3.498,798,5.17,799,3.498,800,3.811,801,2.564,802,4.008,803,3.064,804,3.498,805,3.498,806,3.498,807,3.498,808,3.498]],["title/modules/PaymentModule.html",[158,1.187,221,2.854]],["body/modules/PaymentModule.html",[3,0.141,4,0.141,5,0.125,7,0.376,8,0.011,9,0.853,17,0.141,18,0.183,21,0.009,22,0.009,116,1.849,158,1.906,160,2.14,161,2.699,164,2.896,165,2.297,166,2.297,168,3.004,221,5.545,791,5.374,800,5.216,801,3.892,809,4.65,810,4.65,811,5.308,812,4.65]],["title/injectables/PaymentService.html",[0,0.909,800,2.685]],["body/injectables/PaymentService.html",[0,1.15,2,1.403,3,0.099,4,0.099,5,0.088,7,0.314,8,0.011,9,0.598,17,0.099,18,0.128,21,0.007,22,0.007,25,0.579,26,1.458,31,1.242,33,1.956,34,1.29,35,1.105,36,1.898,41,2.077,49,1.49,59,2.128,70,1.742,89,2.85,119,1.334,120,2.432,121,2.203,122,1.925,123,1.805,129,2.203,132,1.925,135,1.925,145,1.358,147,1.358,176,4.073,177,2.154,178,1.501,179,1.963,180,2.154,244,3.282,574,4.532,793,4.622,798,5.145,800,3.397,802,4.191,813,3.261,814,3.723,815,3.723,816,3.723,817,3.723,818,3.723]],["title/controllers/PaymentTypeController.html",[114,1.152,819,3.058]],["body/controllers/PaymentTypeController.html",[3,0.088,4,0.088,5,0.079,7,0.325,8,0.011,9,0.537,17,0.088,18,0.115,21,0.006,22,0.006,25,0.52,26,1.349,31,1.191,33,1.861,34,1.227,35,1.168,36,1.806,41,1.865,49,1.61,52,1.395,53,1.446,59,2.04,70,1.679,75,1.921,114,0.923,116,0.923,118,1.558,119,1.234,120,2.314,121,2.038,122,1.781,123,1.67,126,2.797,129,1.395,130,2.825,132,1.219,133,2.825,135,1.219,137,2.825,139,2.466,140,1.762,141,1.762,142,1.762,145,1.219,147,1.219,149,1.762,152,1.933,154,1.933,156,1.762,244,2.958,245,4.823,577,4.537,578,4.292,803,2.927,819,3.579,820,2.927,821,2.927,822,3.342,823,3.342,824,3.342,825,3.342,826,5.106,827,3.342,828,3.713,829,2.927,830,3.877,831,3.342,832,3.342,833,3.342,834,3.342,835,3.342]],["title/modules/PaymentTypeModule.html",[158,1.187,222,2.854]],["body/modules/PaymentTypeModule.html",[3,0.138,4,0.138,5,0.123,7,0.373,8,0.011,9,0.839,17,0.138,18,0.18,21,0.009,22,0.009,116,1.83,158,1.886,160,2.105,161,2.67,164,2.866,165,2.259,166,2.259,168,2.973,222,5.522,244,3.088,245,3.573,578,3.18,819,5.333,828,5.194,829,4.573,836,4.573,837,4.573,838,5.221,839,5.221]],["title/injectables/PaymentTypeService.html",[0,0.909,828,2.685]],["body/injectables/PaymentTypeService.html",[0,1.118,2,1.348,3,0.095,4,0.095,5,0.084,7,0.307,8,0.011,9,0.574,17,0.095,18,0.123,21,0.007,22,0.007,25,0.556,26,1.417,31,1.223,33,1.921,34,1.266,35,1.085,36,1.864,41,2.053,49,1.467,59,2.096,70,1.719,89,2.823,119,1.296,120,2.388,121,2.141,122,1.87,123,1.754,129,2.141,132,1.87,135,1.87,145,1.304,147,1.304,176,4.011,177,2.069,178,1.442,179,1.886,180,2.069,244,2.391,245,4.937,577,4.463,578,4.393,821,4.491,826,5.085,828,3.301,830,4.072,840,3.133,841,3.576,842,3.576,843,3.576,844,3.576,845,3.576,846,6.932]],["title/entities/PaymentTypes.html",[60,1.261,847,3.312]],["body/entities/PaymentTypes.html",[3,0.12,4,0.12,5,0.106,7,0.232,8,0.011,17,0.12,18,0.155,21,0.008,22,0.008,25,0.937,31,1.063,34,1.4,35,1.124,49,1.276,60,1.366,62,1.886,64,2.129,70,1.848,75,1.716,76,3.671,77,3.487,78,3.671,79,4.125,81,3.178,82,3.324,83,2.832,89,2.198,90,2.613,91,3.324,103,2.19,105,3.178,106,1.76,110,2.19,112,2.381,113,2.027,554,4.363,578,4.131,847,4.787,848,5.942,849,3.956,850,4.517,851,4.517,852,4.517,853,4.517]],["title/entities/Product.html",[60,1.261,247,2.022]],["body/entities/Product.html",[3,0.085,4,0.085,5,0.075,7,0.242,8,0.011,17,0.085,18,0.11,21,0.006,22,0.006,25,0.735,31,1.224,34,1.572,35,1.19,49,1.56,60,0.967,62,1.335,64,1.67,70,1.653,75,1.975,76,4.226,77,4.015,78,4.226,79,3.235,81,3.275,82,3.426,83,2.767,89,1.724,90,1.851,91,2.608,103,1.551,105,2.493,106,1.246,110,1.551,112,1.687,113,1.436,247,2.727,480,2.189,486,3.466,488,3.466,489,3.466,490,3.466,491,3.466,499,3.235,500,3.235,506,2.189,554,3.835,854,2.802,855,4.926,856,5.623,857,6.628,858,4.748,859,3.199,860,3.199,861,4.727,862,3.199,863,3.199,864,4.727,865,4.141,866,3.199,867,3.199,868,3.199,869,3.199,870,3.199,871,3.199,872,3.199,873,2.802,874,2.802]],["title/entities/ProductCategory.html",[60,1.261,858,2.854]],["body/entities/ProductCategory.html",[3,0.109,4,0.109,5,0.097,7,0.291,8,0.011,17,0.109,18,0.142,21,0.008,22,0.008,25,0.883,31,1.144,34,1.35,35,1.075,49,1.201,60,1.25,62,1.726,64,2.005,75,1.846,76,3.458,77,3.285,78,3.458,81,2.993,82,3.132,83,3.054,89,2.071,100,2.83,103,2.005,104,3.885,106,1.611,110,2.005,112,2.18,113,1.856,247,3.878,446,3.458,483,3.885,554,4.232,582,4.25,777,4.973,858,3.885,873,4.973,874,6.113,875,3.622,876,4.135,877,4.135,878,5.677,879,4.135,880,4.135,881,4.135,882,4.135]],["title/controllers/ProductCategoryController.html",[114,1.152,883,3.058]],["body/controllers/ProductCategoryController.html",[3,0.088,4,0.088,5,0.079,7,0.325,8,0.011,9,0.537,17,0.088,18,0.115,21,0.006,22,0.006,25,0.52,26,1.349,31,1.191,33,1.861,34,1.227,35,1.052,36,1.806,41,1.865,49,1.61,52,1.395,53,1.446,59,2.04,70,1.679,75,1.921,114,0.923,116,0.923,118,1.558,119,1.234,120,2.314,121,2.038,122,1.781,123,1.67,126,2.797,129,1.395,130,2.825,132,1.219,133,2.825,135,1.219,137,2.825,139,2.466,140,1.762,141,1.762,142,1.762,145,1.219,147,1.219,149,1.762,152,1.933,154,1.933,156,1.762,247,3.076,248,4.823,581,4.537,582,4.292,855,4.276,883,3.579,884,2.927,885,2.927,886,3.342,887,3.342,888,3.342,889,3.342,890,5.106,891,3.342,892,3.713,893,2.927,894,3.877,895,2.927,896,3.342,897,3.342,898,3.342,899,3.342,900,3.342]],["title/modules/ProductCategoryModule.html",[158,1.187,223,2.854]],["body/modules/ProductCategoryModule.html",[3,0.138,4,0.138,5,0.123,7,0.373,8,0.011,9,0.839,17,0.138,18,0.18,21,0.009,22,0.009,116,1.83,158,1.886,160,2.105,161,2.67,164,2.866,165,2.259,166,2.259,168,2.973,223,5.522,247,3.212,248,3.573,582,3.18,883,5.333,892,5.194,893,4.573,901,4.573,902,4.573,903,5.221,904,5.221]],["title/injectables/ProductCategoryService.html",[0,0.909,892,2.685]],["body/injectables/ProductCategoryService.html",[0,1.118,2,1.348,3,0.095,4,0.095,5,0.084,7,0.307,8,0.011,9,0.574,17,0.095,18,0.123,21,0.007,22,0.007,25,0.556,26,1.417,31,1.223,33,1.921,34,1.266,35,1.085,36,1.864,41,2.053,49,1.467,59,2.096,70,1.719,89,2.823,119,1.296,120,2.388,121,2.141,122,1.87,123,1.754,129,2.141,132,1.87,135,1.87,145,1.304,147,1.304,176,4.011,177,2.069,178,1.442,179,1.886,180,2.069,247,2.487,248,4.937,581,4.463,582,4.393,858,4.744,885,4.491,890,5.085,892,3.301,894,4.072,905,3.133,906,3.576,907,3.576,908,3.576,909,3.576,910,3.576]],["title/controllers/ProductController.html",[114,1.152,911,3.058]],["body/controllers/ProductController.html",[3,0.093,4,0.093,5,0.082,7,0.332,8,0.011,9,0.562,17,0.093,18,0.12,21,0.007,22,0.007,25,0.544,26,1.394,31,1.213,33,1.901,34,1.253,35,1.074,36,1.845,41,1.899,49,1.629,52,1.46,53,1.513,59,2.078,70,1.706,75,1.956,114,0.966,116,0.966,118,1.631,119,1.276,120,2.364,121,2.107,122,1.841,123,1.726,126,2.871,129,1.46,130,2.92,132,1.276,133,2.92,135,1.276,137,2.92,139,2.549,140,1.844,141,1.844,142,1.844,145,1.276,147,1.276,149,1.844,152,2.024,154,2.024,156,1.844,247,1.696,585,4.609,895,3.064,911,3.7,912,3.064,913,3.064,914,3.498,915,3.498,916,3.498,917,3.498,918,5.17,919,3.498,920,3.811,921,3.064,922,4.008,923,3.498,924,3.498,925,3.498,926,3.498,927,3.498]],["title/modules/ProductModule.html",[158,1.187,224,2.854]],["body/modules/ProductModule.html",[3,0.141,4,0.141,5,0.125,7,0.376,8,0.011,9,0.853,17,0.141,18,0.183,21,0.009,22,0.009,116,1.849,158,1.906,160,2.14,161,2.699,164,2.896,165,2.297,166,2.297,168,3.004,224,5.545,911,5.374,920,5.216,921,4.65,928,4.65,929,4.65,930,5.308,931,5.308]],["title/injectables/ProductService.html",[0,0.909,920,2.685]],["body/injectables/ProductService.html",[0,1.15,2,1.403,3,0.099,4,0.099,5,0.088,7,0.314,8,0.011,9,0.598,17,0.099,18,0.128,21,0.007,22,0.007,25,0.579,26,1.458,31,1.242,33,1.956,34,1.29,35,1.105,36,1.898,41,2.077,49,1.49,59,2.128,70,1.742,89,2.85,119,1.334,120,2.432,121,2.203,122,1.925,123,1.805,129,2.203,132,1.925,135,1.925,145,1.358,147,1.358,176,4.073,177,2.154,178,1.501,179,1.963,180,2.154,247,3.413,585,4.532,913,4.622,918,5.145,920,3.397,922,4.191,932,3.261,933,3.723,934,3.723,935,3.723,936,3.723,937,3.723]],["title/injectables/RefreshTokenGuard.html",[0,0.909,305,3.058]],["body/injectables/RefreshTokenGuard.html",[0,1.54,2,2.183,3,0.153,4,0.153,5,0.136,7,0.362,8,0.011,9,0.93,10,5.073,11,3.964,12,2.506,13,2.506,14,2.506,15,2.506,16,2.506,17,0.153,18,0.199,19,2.6,20,5.073,21,0.009,22,0.009,305,5.18,313,3.964,938,5.073]],["title/injectables/RefreshTokenStrategy.html",[0,0.909,346,2.854]],["body/injectables/RefreshTokenStrategy.html",[0,1.275,2,1.627,3,0.114,4,0.114,5,0.102,7,0.381,8,0.012,9,0.693,11,2.955,17,0.114,18,0.148,19,1.938,21,0.008,22,0.008,25,0.671,26,1.616,27,5.121,28,2.779,29,3.781,30,5.239,31,1.032,33,1.715,34,1.131,35,0.969,36,1.665,40,6.224,41,1.193,42,2.779,43,5.121,44,3.781,45,5.121,46,3.429,47,3.764,52,1.802,53,1.868,54,3.781,55,3.781,56,3.781,57,3.781,59,1.305,83,1.802,185,5.643,203,3.429,257,2.498,303,3.429,313,2.955,328,3.764,346,4.001,939,3.781,940,4.317,941,5.847,942,4.317,943,4.317,944,4.317,945,4.317,946,4.317]],["title/classes/UpdateAddressDto.html",[18,0.143,136,2.854]],["body/classes/UpdateAddressDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,125,3.852,136,4.931,146,4.751,188,2.588,335,1.865,546,4.751,947,5.24,948,3.155,949,5.983]],["title/classes/UpdateCartDto.html",[18,0.143,462,2.854]],["body/classes/UpdateCartDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,188,2.588,335,1.865,457,3.852,462,4.931,466,4.751,548,4.751,948,3.155,950,5.24,951,5.983]],["title/classes/UpdateCartItemDto.html",[18,0.143,515,2.854]],["body/classes/UpdateCartItemDto.html",[3,0.156,4,0.156,5,0.139,7,0.366,8,0.011,17,0.156,18,0.203,19,2.648,21,0.009,22,0.009,119,1.491,188,2.552,238,3.331,335,1.839,473,3.593,510,3.798,515,4.89,519,4.685,550,4.685,948,3.111,952,5.167,953,5.9]],["title/classes/UpdateExampleDto.html",[18,0.143,631,2.854]],["body/classes/UpdateExampleDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,188,2.588,335,1.865,551,3.852,553,4.751,631,4.931,637,4.751,948,3.155,954,5.24,955,5.983]],["title/classes/UpdateOrderDto.html",[18,0.143,743,2.854]],["body/classes/UpdateOrderDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,188,2.588,335,1.865,571,3.852,573,4.751,743,4.931,747,4.751,948,3.155,956,5.24,957,5.983]],["title/classes/UpdatePaymentDto.html",[18,0.143,798,2.854]],["body/classes/UpdatePaymentDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,188,2.588,335,1.865,574,3.852,576,4.751,798,4.931,802,4.751,948,3.155,958,5.24,959,5.983]],["title/classes/UpdatePaymentTypeDto.html",[18,0.143,826,2.854]],["body/classes/UpdatePaymentTypeDto.html",[3,0.156,4,0.156,5,0.139,7,0.366,8,0.011,17,0.156,18,0.203,19,2.648,21,0.009,22,0.009,119,1.491,188,2.552,244,3.331,335,1.839,577,3.798,578,3.593,580,4.685,826,4.89,830,4.685,948,3.111,960,5.167,961,5.9]],["title/classes/UpdateProductCategoryDto.html",[18,0.143,890,2.854]],["body/classes/UpdateProductCategoryDto.html",[3,0.156,4,0.156,5,0.139,7,0.366,8,0.011,17,0.156,18,0.203,19,2.648,21,0.009,22,0.009,119,1.491,188,2.552,247,3.465,335,1.839,581,3.798,582,3.593,584,4.685,890,4.89,894,4.685,948,3.111,962,5.167,963,5.9]],["title/classes/UpdateProductDto.html",[18,0.143,918,2.854]],["body/classes/UpdateProductDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,188,2.588,335,1.865,585,3.852,587,4.751,918,4.931,922,4.751,948,3.155,964,5.24,965,5.983]],["title/classes/UpdateUserDto.html",[18,0.143,966,2.854]],["body/classes/UpdateUserDto.html",[3,0.158,4,0.158,5,0.141,7,0.369,8,0.011,17,0.158,18,0.206,19,2.685,21,0.01,22,0.01,119,1.512,188,2.588,300,3.462,308,4.094,335,1.865,589,4.751,948,3.155,966,4.931,967,5.24,968,5.983]],["title/entities/User.html",[60,1.261,107,1.625]],["body/entities/User.html",[3,0.05,4,0.05,5,0.044,7,0.283,8,0.012,17,0.05,18,0.107,21,0.004,22,0.004,25,0.482,31,1.303,34,1.266,35,1.225,49,1.652,50,2.549,60,0.938,61,1.083,62,0.781,64,1.095,69,3.479,70,1.101,71,3.479,74,4.344,75,2.103,76,3.985,77,3.786,78,3.985,79,4.188,81,3.747,82,4.117,83,3.196,100,2.718,103,2.836,104,3.162,105,0.987,106,0.729,107,1.801,108,1.372,110,2.241,123,0.64,328,2.557,337,2.975,341,4.048,342,4.048,343,1.205,354,1.639,358,1.14,383,1.486,387,1.14,393,2.717,432,3.866,451,1.639,570,2.274,590,3.155,600,3.155,601,3.155,602,4.047,603,3.479,611,4.047,613,3.479,615,1.639,770,4.344,787,1.372,788,1.639,865,2.717,969,1.639,970,3.972,971,3.972,972,3.972,973,3.972,974,3.972,975,1.871,976,3.102,977,3.972,978,1.871,979,1.871,980,3.102,981,1.871,982,3.102,983,1.871,984,3.102,985,1.871,986,3.102,987,1.871,988,3.102,989,1.871,990,1.871,991,1.871,992,1.871,993,3.102,994,1.871,995,3.102,996,1.871,997,1.871,998,1.871,999,3.102,1000,1.871,1001,1.871,1002,3.102,1003,1.871,1004,3.102,1005,3.102,1006,1.871,1007,1.871,1008,1.871,1009,1.871,1010,1.871,1011,1.871,1012,1.871,1013,1.871,1014,1.871,1015,2.717]],["title/entities/UserAddress.html",[60,1.261,74,2.854]],["body/entities/UserAddress.html",[3,0.092,4,0.092,5,0.081,7,0.302,8,0.011,17,0.092,18,0.119,21,0.007,22,0.007,25,0.779,31,1.207,34,1.457,35,1.182,60,1.046,61,4.442,62,1.444,64,1.768,70,1.753,74,3.426,75,1.948,83,2.856,89,2.602,90,2.002,91,2.762,103,1.678,105,2.64,106,1.348,107,2.991,108,5.229,110,1.678,112,1.824,113,1.553,326,4.151,446,3.927,447,4.027,480,3.426,483,4.413,499,4.027,500,4.027,506,3.426,731,2.536,1016,3.934,1017,3.03,1018,6.448,1019,3.46,1020,3.46,1021,5.884,1022,3.46,1023,3.46,1024,3.46,1025,3.46,1026,3.46,1027,3.46,1028,3.46,1029,3.46,1030,3.46,1031,3.46]],["title/controllers/UserAddressController.html",[114,1.152,1032,3.058]],["body/controllers/UserAddressController.html",[3,0.147,4,0.147,5,0.13,7,0.352,8,0.011,9,0.89,12,2.397,13,2.397,14,2.397,15,2.397,16,2.397,17,0.147,18,0.191,21,0.009,22,0.009,52,2.313,53,2.397,61,3.977,107,2.679,114,1.531,116,1.531,118,2.583,144,4.061,251,3.791,1016,3.056,1032,5.04,1033,4.852,1034,4.812,1035,4.852]],["title/modules/UserAddressModule.html",[158,1.187,225,2.854]],["body/modules/UserAddressModule.html",[3,0.134,4,0.134,5,0.12,7,0.368,8,0.011,9,0.815,12,2.196,13,2.196,14,2.196,15,2.196,16,2.196,17,0.134,18,0.175,21,0.009,22,0.009,107,2.535,116,1.797,144,3.721,158,1.852,160,2.046,161,2.623,164,2.814,165,2.196,166,2.196,168,2.92,169,4.446,225,5.481,251,3.473,1016,2.8,1032,5.263,1034,5.156,1036,4.446,1037,4.446,1038,5.075]],["title/injectables/UserAddressService.html",[0,0.909,1034,2.685]],["body/injectables/UserAddressService.html",[0,1.566,2,2.244,3,0.158,4,0.158,5,0.14,7,0.305,8,0.011,9,0.956,12,2.576,13,2.576,14,2.576,15,2.576,16,2.576,17,0.158,18,0.205,21,0.01,22,0.01,251,4.075,1016,3.285,1034,4.626,1039,5.216]],["title/controllers/UserController.html",[114,1.152,1040,3.058]],["body/controllers/UserController.html",[1,1.942,3,0.08,4,0.08,5,0.071,7,0.348,8,0.012,9,0.484,12,1.305,13,1.305,14,1.305,15,1.305,16,1.305,17,0.08,18,0.104,21,0.006,22,0.006,25,0.469,26,1.25,31,1.198,33,1.897,34,1.251,35,1.072,36,1.841,41,1.876,49,1.642,50,2.496,52,1.259,53,1.305,59,2.053,70,1.618,75,1.933,114,0.834,116,0.834,118,1.406,119,1.144,120,2.201,122,1.651,123,1.858,126,2.195,132,1.1,135,1.1,139,2.286,140,1.591,141,1.591,142,1.591,145,1.1,147,1.1,149,1.591,156,1.591,178,2.19,186,2.211,187,2.211,188,1.305,300,3.929,304,2.396,308,3.097,331,3.594,363,2.756,624,3.964,628,2.642,632,2.642,634,5.286,641,3.964,650,2.642,966,4.957,1040,3.318,1041,2.642,1042,3.017,1043,3.964,1044,3.964,1045,2.642,1046,3.017,1047,3.017,1048,3.017,1049,2.642,1050,3.017,1051,2.642,1052,4.526,1053,3.017,1054,3.017,1055,3.017,1056,3.017,1057,3.017,1058,2.642,1059,3.017,1060,3.017,1061,3.017,1062,3.017,1063,3.017,1064,3.017,1065,3.017,1066,3.017,1067,3.017,1068,3.017,1069,3.017]],["title/modules/UserModule.html",[158,1.187,226,2.854]],["body/modules/UserModule.html",[3,0.125,4,0.125,5,0.111,7,0.392,8,0.011,9,0.758,12,2.041,13,2.041,14,2.041,15,2.041,16,2.041,17,0.125,18,0.162,21,0.008,22,0.008,107,1.838,116,1.714,158,1.766,160,1.902,161,2.501,164,2.684,165,2.041,166,2.041,168,2.785,226,5.478,229,3.459,231,3.747,232,3.037,363,5.123,1040,5.081,1058,4.132,1070,4.132,1071,4.132,1072,4.132,1073,4.718,1074,6.204,1075,4.132,1076,4.718,1077,4.718]],["title/entities/UserPayment.html",[60,1.261,770,2.854]],["body/entities/UserPayment.html",[3,0.092,4,0.092,5,0.081,7,0.302,8,0.011,17,0.092,18,0.119,21,0.007,22,0.007,25,0.779,31,1.207,34,1.457,35,1.182,60,1.046,62,1.444,64,1.768,70,1.753,75,1.948,83,2.856,89,2.602,90,2.002,91,2.762,103,1.678,105,2.64,106,1.348,107,2.991,110,1.678,112,1.824,113,1.553,244,3.579,326,4.151,446,3.927,447,4.027,480,3.426,483,4.413,499,4.027,500,4.027,506,3.426,719,5.648,725,5.153,731,2.536,770,3.426,787,5.229,1016,3.934,1078,3.03,1079,3.46,1080,3.46,1081,3.46,1082,3.46,1083,3.46,1084,3.46,1085,3.46,1086,3.46,1087,3.46,1088,3.46,1089,3.46,1090,3.46]],["title/controllers/UserPaymentController.html",[114,1.152,1091,3.058]],["body/controllers/UserPaymentController.html",[3,0.147,4,0.147,5,0.13,7,0.352,8,0.011,9,0.89,12,2.397,13,2.397,14,2.397,15,2.397,16,2.397,17,0.147,18,0.191,21,0.009,22,0.009,52,2.313,53,2.397,107,2.679,114,1.531,116,1.531,118,2.583,244,3.205,253,3.791,801,4.061,1016,3.056,1035,4.852,1091,5.04,1092,4.852,1093,4.425,1094,5.54]],["title/modules/UserPaymentModule.html",[158,1.187,227,2.854]],["body/modules/UserPaymentModule.html",[3,0.134,4,0.134,5,0.12,7,0.368,8,0.011,9,0.815,12,2.196,13,2.196,14,2.196,15,2.196,16,2.196,17,0.134,18,0.175,21,0.009,22,0.009,107,2.535,116,1.797,158,1.852,160,2.046,161,2.623,164,2.814,165,2.196,166,2.196,168,2.92,227,5.481,253,3.473,801,3.721,812,4.446,1016,2.8,1091,5.263,1093,5.156,1095,4.446,1096,4.446,1097,5.075]],["title/injectables/UserPaymentService.html",[0,0.909,1093,2.685]],["body/injectables/UserPaymentService.html",[0,1.566,2,2.244,3,0.158,4,0.158,5,0.14,7,0.305,8,0.011,9,0.956,12,2.576,13,2.576,14,2.576,15,2.576,16,2.576,17,0.158,18,0.205,21,0.01,22,0.01,253,4.075,1016,3.285,1093,4.626,1098,5.216]],["title/classes/UserSeeder.html",[18,0.143,1099,3.312]],["body/classes/UserSeeder.html",[3,0.109,4,0.109,5,0.097,7,0.332,8,0.011,17,0.109,18,0.142,21,0.008,22,0.008,25,0.643,26,1.569,31,0.73,33,1.213,34,0.8,35,0.685,36,1.177,41,1.142,62,1.726,106,2.212,107,2.526,113,2.91,119,1.045,178,1.667,257,4.038,335,1.289,358,3.949,377,3.885,387,3.949,443,2.518,661,4.509,662,5.679,663,5.679,664,3.622,665,6.619,666,5.679,667,6.113,669,3.284,673,4.973,675,3.622,676,3.622,677,3.622,678,3.284,682,3.284,731,3.031,1099,4.509,1100,3.622,1101,4.135,1102,4.135,1103,4.135,1104,4.135,1105,4.135,1106,5.677,1107,4.135,1108,4.135,1109,4.135,1110,4.135,1111,4.135,1112,5.677,1113,4.135,1114,4.135,1115,4.135,1116,4.135,1117,4.135]],["title/injectables/UserService.html",[0,0.909,363,2.54]],["body/injectables/UserService.html",[0,0.894,2,0.999,3,0.07,4,0.07,5,0.062,7,0.331,8,0.012,9,0.426,17,0.07,18,0.091,21,0.005,22,0.005,25,0.412,26,1.133,28,2.641,31,1.227,33,1.894,34,1.249,35,1.116,36,1.838,41,1.784,49,1.595,50,2.767,59,2.036,64,1.449,70,1.604,106,1.033,107,2.2,119,1.037,120,2.227,122,1.496,123,1.716,132,1.496,135,1.496,145,0.967,147,0.967,178,1.654,179,1.398,197,1.944,232,1.707,257,2.903,272,5.347,277,2.106,300,3.533,308,2.807,358,4.863,363,2.498,368,3.258,377,4.76,387,2.498,394,2.323,504,2.106,682,4.484,691,2.323,699,2.106,713,2.323,715,2.323,716,2.323,966,4.76,1043,4.394,1044,4.394,1045,3.593,1049,3.593,1051,3.593,1075,2.323,1118,2.323,1119,2.652,1120,4.102,1121,4.102,1122,2.652,1123,2.652,1124,2.652,1125,2.652,1126,2.652,1127,2.652,1128,2.652,1129,2.652,1130,6.106,1131,2.652,1132,2.652,1133,2.652,1134,4.102,1135,4.102,1136,4.102,1137,2.652,1138,2.652,1139,2.652,1140,4.102,1141,2.652,1142,2.652]],["title/coverage.html",[1143,5.002]],["body/coverage.html",[0,1.565,1,1.02,5,0.037,6,1.388,8,0.011,18,0.274,21,0.004,22,0.004,23,1.084,24,1.258,35,0.263,60,1.966,61,1.561,63,2.362,74,1.846,107,1.051,108,1.977,114,1.872,115,1.162,117,1.388,125,1.02,136,1.084,143,1.02,170,1.388,178,0.639,181,1.162,182,1.388,189,1.02,191,0.965,228,1.258,238,1.938,239,1.846,244,1.938,245,1.846,247,2.015,248,1.846,251,1.846,253,1.846,258,2.796,270,1.388,282,1.162,283,1.388,289,1.084,300,0.917,305,1.162,336,1.388,346,1.084,356,1.258,357,1.388,363,0.965,430,2.362,431,1.846,432,1.643,449,2.142,454,1.162,455,1.388,457,1.02,462,1.084,464,1.02,473,3.088,474,2.362,507,1.162,508,1.388,510,1.02,515,1.084,517,1.02,529,1.388,539,1.388,545,1.388,546,2.142,547,1.388,548,2.142,549,1.388,550,2.142,551,1.02,552,1.388,553,2.142,571,1.02,572,1.388,573,2.142,574,1.02,575,1.388,576,2.142,577,1.02,578,3.088,579,1.388,580,2.142,581,1.02,582,3.088,583,1.388,584,2.142,585,1.02,586,1.388,587,2.142,588,1.388,589,2.142,598,0.917,599,1.388,616,1.162,617,1.388,631,1.084,635,1.02,659,1.258,660,1.388,680,1.388,718,2.362,736,1.162,737,1.388,743,1.084,745,1.02,758,1.388,764,2.362,770,1.846,787,1.977,791,1.162,792,1.388,798,1.084,800,1.02,813,1.388,819,1.162,820,1.388,826,1.084,828,1.02,840,1.388,847,2.142,848,2.362,849,2.362,854,2.362,858,1.846,875,2.362,883,1.162,884,1.388,890,1.084,892,1.02,905,1.388,911,1.162,912,1.388,918,1.084,920,1.02,932,1.388,938,1.388,939,1.388,947,1.388,950,1.388,952,1.388,954,1.388,956,1.388,958,1.388,960,1.388,962,1.388,964,1.388,966,1.084,967,1.388,969,2.362,1016,3.143,1017,2.362,1032,1.162,1033,1.388,1034,1.02,1039,1.388,1040,1.162,1041,1.388,1078,2.362,1091,1.162,1092,1.388,1093,1.02,1098,1.388,1099,1.258,1100,1.388,1118,1.388,1143,1.388,1144,1.388,1145,1.584,1146,1.584,1147,8.6,1148,7.176,1149,8.214,1150,1.584,1151,3.521,1152,5.942,1153,2.697,1154,3.521,1155,4.156,1156,5.411,1157,3.64,1158,1.388,1159,1.388,1160,2.362,1161,3.64,1162,1.388,1163,1.388,1164,1.388,1165,1.258,1166,2.697,1167,1.584,1168,1.388,1169,1.584,1170,1.388,1171,1.584,1172,1.584,1173,1.584,1174,1.388]],["title/dependencies.html",[161,2.024,1175,3.043]],["body/dependencies.html",[8,0.012,9,0.769,11,3.277,18,0.215,21,0.008,22,0.008,42,3.083,46,4.975,47,3.083,106,2.441,161,1.931,188,2.072,198,3.803,232,3.083,303,5.545,343,3.083,349,3.803,383,3.803,669,3.803,1176,6.982,1177,4.789,1178,4.789,1179,4.789,1180,4.789,1181,4.789,1182,4.789,1183,4.789,1184,4.789,1185,4.789,1186,4.789,1187,4.789,1188,4.789,1189,4.789,1190,4.789,1191,4.789,1192,4.789,1193,4.789,1194,4.789,1195,4.789,1196,4.789,1197,4.789,1198,4.789,1199,4.789,1200,4.789,1201,4.789,1202,4.789,1203,4.789,1204,4.789,1205,4.789,1206,4.789,1207,4.789]],["title/miscellaneous/functions.html",[1208,2.236,1209,4.398]],["body/miscellaneous/functions.html",[8,0.01,21,0.01,22,0.01,25,1.006,1168,5.667,1170,7,1208,4.165,1209,5.667,1210,6.47]],["title/classes/generateStarterTables1677818653265.html",[18,0.143,1165,3.312]],["body/classes/generateStarterTables1677818653265.html",[3,0.087,4,0.087,5,0.077,7,0.168,8,0.011,17,0.087,18,0.113,21,0.006,22,0.006,25,0.51,26,1.331,31,1.007,33,1.413,34,1.354,35,0.946,36,1.371,41,1.331,49,0.694,50,2.657,64,1.701,70,1.499,77,4.187,81,4.164,83,1.37,91,1.81,106,1.279,107,1.877,110,2.336,113,3.143,119,1.218,328,2.112,335,1.023,337,2.112,358,4.264,377,4.304,387,3.83,443,4.521,483,3.297,554,1.899,555,2.606,557,2.606,558,2.606,562,2.606,590,3.825,598,2.787,600,3.825,601,3.825,661,3.825,1163,5.508,1164,2.874,1165,4.994,1174,5.508,1211,5.708,1212,4.817,1213,4.817,1214,2.874,1215,3.281,1216,4.817,1217,7.575,1218,3.281,1219,4.817,1220,3.281,1221,4.817,1222,4.817,1223,4.817,1224,7.236,1225,6.289,1226,6.289,1227,6.289,1228,3.281,1229,4.817,1230,3.281,1231,3.281,1232,3.281,1233,4.817]],["title/index.html",[25,0.54,1234,3.474,1235,3.474]],["body/index.html",[8,0.01,21,0.009,22,0.009,1144,5.167,1236,6.258,1237,5.9,1238,6.258,1239,5.9,1240,5.9,1241,5.9,1242,5.9,1243,5.9,1244,5.167,1245,5.9,1246,5.9,1247,5.9,1248,5.9,1249,5.9,1250,5.9,1251,5.9,1252,5.9,1253,5.167,1254,5.167,1255,5.9,1256,5.9,1257,5.9,1258,5.9]],["title/modules.html",[160,2.303]],["body/modules.html",[8,0.008,21,0.008,22,0.008,159,3.353,160,1.975,212,3.592,216,3.353,217,3.353,218,3.353,219,3.353,220,3.353,221,3.353,222,3.353,223,3.353,224,3.353,225,3.353,226,3.353,227,3.353,1259,8.538,1260,8.538,1261,8.538,1262,8.538]],["title/overview.html",[1263,5.002]],["body/overview.html",[2,1.148,8,0.011,21,0.006,22,0.006,23,3.738,62,1.271,116,0.841,143,3.517,159,4.444,160,1.228,161,1.838,162,2.667,163,2.667,164,1.972,165,1.318,166,1.318,189,3.517,191,3.327,212,6.229,213,2.667,214,2.667,215,2.667,216,5.083,217,4.444,218,4.444,219,4.444,220,4.444,221,4.444,222,4.444,223,4.444,224,4.444,225,4.444,226,4.664,227,4.444,335,0.949,344,2.667,345,2.667,346,3.738,363,4.302,464,3.517,517,3.517,525,2.667,526,2.667,535,2.667,536,2.667,635,3.517,653,2.667,654,2.667,745,3.517,754,2.667,755,2.667,800,3.517,809,2.667,810,2.667,828,3.517,836,2.667,837,2.667,892,3.517,901,2.667,902,2.667,920,3.517,928,2.667,929,2.667,1034,3.517,1036,2.667,1037,2.667,1070,2.667,1071,2.667,1072,2.667,1093,3.517,1095,2.667,1096,2.667,1263,2.667,1264,4.558,1265,3.045,1266,3.045,1267,3.045]],["title/properties.html",[64,1.773,1175,3.043]],["body/properties.html",[8,0.011,21,0.01,22,0.01,64,2.174,554,3.562,1236,5.393,1238,5.393,1244,5.393,1268,6.157,1269,6.157,1270,6.157,1271,6.157,1272,6.157,1273,6.157,1274,6.157,1275,6.157,1276,6.157]],["title/miscellaneous/typealiases.html",[1208,2.236,1277,5.021]],["body/miscellaneous/typealiases.html",[8,0.01,21,0.01,22,0.01,24,5.086,25,0.996,35,1.244,38,6.572,1208,4.123,1278,6.405,1279,6.405,1280,6.405]],["title/miscellaneous/variables.html",[1208,2.236,1281,4.398]],["body/miscellaneous/variables.html",[8,0.011,21,0.006,22,0.006,25,0.517,34,0.643,35,0.953,50,2.682,62,2.03,83,2.401,123,1.664,178,1.961,228,2.64,258,6.134,259,5.898,263,4.26,337,3.131,356,3.862,443,4.704,678,5.586,1015,6.161,1157,2.912,1158,4.26,1159,4.26,1160,5.543,1161,2.912,1162,4.26,1208,2.14,1214,6.657,1253,4.26,1254,5.543,1281,2.912,1282,6.328,1283,3.324,1284,6.328,1285,3.324,1286,3.324,1287,6.328,1288,4.863,1289,4.863,1290,4.863,1291,4.863,1292,4.863,1293,4.863,1294,4.863,1295,4.863,1296,4.863,1297,4.863,1298,4.863,1299,4.863,1300,4.863,1301,3.324,1302,4.863,1303,3.324,1304,3.324,1305,4.863,1306,4.863,1307,4.863,1308,6.328,1309,4.863,1310,4.863,1311,4.863,1312,4.863,1313,3.324,1314,3.324,1315,3.324,1316,3.324,1317,3.324,1318,3.324,1319,3.324,1320,3.324,1321,3.324]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/generateStarterTables1677818653265.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1269,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["0.30.3",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["1.17.3",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":79,"title":{},"body":{"entities/Address.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/User.html":{}}}],["1000",{"_index":861,"title":{},"body":{"entities/Product.html":{}}}],["12",{"_index":1265,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1264,"title":{},"body":{"overview.html":{}}}],["150",{"_index":437,"title":{},"body":{"entities/Cart.html":{}}}],["15m",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["18",{"_index":1266,"title":{},"body":{"overview.html":{}}}],["2",{"_index":491,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["2.3.1",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":96,"title":{},"body":{"entities/Address.html":{}}}],["200",{"_index":777,"title":{},"body":{"entities/Payment.html":{},"entities/ProductCategory.html":{}}}],["250",{"_index":865,"title":{},"body":{"entities/Product.html":{},"entities/User.html":{}}}],["3",{"_index":1105,"title":{},"body":{"classes/UserSeeder.html":{}}}],["35",{"_index":1267,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":674,"title":{},"body":{"classes/ExampleSeeder.html":{}}}],["50",{"_index":782,"title":{},"body":{"entities/Payment.html":{}}}],["6",{"_index":489,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["6.0.1",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["8.9.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AuthController.html":{},"controllers/ExampleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":23,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":176,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{}}}],["address",{"_index":61,"title":{"entities/Address.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"coverage.html":{}}}],["address.controller",{"_index":169,"title":{},"body":{"modules/AddressModule.html":{},"modules/UserAddressModule.html":{}}}],["address.controller.ts",{"_index":1033,"title":{},"body":{"controllers/UserAddressController.html":{},"coverage.html":{}}}],["address.dto",{"_index":146,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/UpdateAddressDto.html":{}}}],["address.dto.ts",{"_index":546,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["address.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["address.module.ts",{"_index":1038,"title":{},"body":{"modules/UserAddressModule.html":{}}}],["address.service",{"_index":144,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{}}}],["address.service.ts",{"_index":1039,"title":{},"body":{"injectables/UserAddressService.html":{},"coverage.html":{}}}],["address.ts",{"_index":1017,"title":{},"body":{"entities/UserAddress.html":{},"coverage.html":{}}}],["address.ts:16",{"_index":1023,"title":{},"body":{"entities/UserAddress.html":{}}}],["address.ts:19",{"_index":1026,"title":{},"body":{"entities/UserAddress.html":{}}}],["address.ts:22",{"_index":1022,"title":{},"body":{"entities/UserAddress.html":{}}}],["address.ts:26",{"_index":1020,"title":{},"body":{"entities/UserAddress.html":{}}}],["address.ts:30",{"_index":1025,"title":{},"body":{"entities/UserAddress.html":{}}}],["address.useraddress",{"_index":1030,"title":{},"body":{"entities/UserAddress.html":{}}}],["address.useraddress)@joincolumn(['undefined",{"_index":1019,"title":{},"body":{"entities/UserAddress.html":{}}}],["address/address.module",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["address/entities/address.entity",{"_index":1027,"title":{},"body":{"entities/UserAddress.html":{}}}],["address/entities/user",{"_index":108,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"coverage.html":{}}}],["address/user",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"coverage.html":{}}}],["address_1",{"_index":65,"title":{},"body":{"entities/Address.html":{}}}],["address_2",{"_index":66,"title":{},"body":{"entities/Address.html":{}}}],["address_id",{"_index":1021,"title":{},"body":{"entities/UserAddress.html":{}}}],["addresscontroller",{"_index":115,"title":{"controllers/AddressController.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"coverage.html":{}}}],["addressid",{"_index":1018,"title":{},"body":{"entities/UserAddress.html":{}}}],["addressmodule",{"_index":159,"title":{"modules/AddressModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["addressservice",{"_index":143,"title":{"injectables/AddressService.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"coverage.html":{},"overview.html":{}}}],["adds",{"_index":177,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{}}}],["aliases",{"_index":1278,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["amount",{"_index":765,"title":{},"body":{"entities/Payment.html":{}}}],["api",{"_index":1238,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apibadrequestresponse",{"_index":641,"title":{},"body":{"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["apibadrequestresponse()@post",{"_index":1046,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth",{"_index":638,"title":{},"body":{"controllers/ExampleController.html":{}}}],["apibearerauth('bearerauth",{"_index":645,"title":{},"body":{"controllers/ExampleController.html":{}}}],["apitags",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('example",{"_index":639,"title":{},"body":{"controllers/ExampleController.html":{}}}],["apitags('root",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('users",{"_index":1059,"title":{},"body":{"controllers/UserController.html":{}}}],["app.controller",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":181,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1245,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":212,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":189,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["argon2.hash(data",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.verify",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.verify(user.password",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/User.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["auth",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["auth.controller",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["auth.service",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_prev/auth.service",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["auth_prev/jwr",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":282,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":289,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authentication",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExampleService.html":{}}}],["authguard",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":20,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authmodule",{"_index":216,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1273,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":191,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/User.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["badrequestexception",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('password",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["basic",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["before",{"_index":1008,"title":{},"body":{"entities/User.html":{}}}],["beforeinsert",{"_index":1004,"title":{},"body":{"entities/User.html":{}}}],["beforeupdate",{"_index":1005,"title":{},"body":{"entities/User.html":{}}}],["body",{"_index":139,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":562,"title":{},"body":{"classes/CreateExampleDto.html":{},"entities/Example.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["bootstrap",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1262,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1259,"title":{},"body":{"modules.html":{}}}],["built",{"_index":1240,"title":{},"body":{"index.html":{}}}],["burnett",{"_index":1275,"title":{},"body":{"properties.html":{}}}],["cart",{"_index":238,"title":{"entities/Cart.html":{}},"body":{"modules/AppModule.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateCartItemDto.html":{},"entities/Order.html":{},"classes/UpdateCartItemDto.html":{},"coverage.html":{}}}],["cart.cartitem",{"_index":505,"title":{},"body":{"entities/CartItem.html":{}}}],["cart.cartitem)@joincolumn(['undefined",{"_index":481,"title":{},"body":{"entities/CartItem.html":{}}}],["cart.controller",{"_index":538,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.dto",{"_index":466,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{}}}],["cart.dto.ts",{"_index":548,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["cart.order",{"_index":734,"title":{},"body":{"entities/Order.html":{}}}],["cart.order)@joincolumn(['undefined",{"_index":721,"title":{},"body":{"entities/Order.html":{}}}],["cart.service",{"_index":465,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["cart/entities/cart.entity",{"_index":501,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{}}}],["cart_id",{"_index":484,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{}}}],["cartcontroller",{"_index":454,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartid",{"_index":475,"title":{},"body":{"entities/CartItem.html":{}}}],["cartitem",{"_index":431,"title":{"entities/CartItem.html":{}},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"injectables/CartItemService.html":{},"coverage.html":{}}}],["cartitem.cart",{"_index":434,"title":{},"body":{"entities/Cart.html":{}}}],["cartitemcontroller",{"_index":507,"title":{"controllers/CartItemController.html":{}},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"coverage.html":{}}}],["cartitemmodule",{"_index":217,"title":{"modules/CartItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules.html":{},"overview.html":{}}}],["cartitemservice",{"_index":517,"title":{"injectables/CartItemService.html":{}},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"coverage.html":{},"overview.html":{}}}],["cartmodule",{"_index":218,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartservice",{"_index":464,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":855,"title":{},"body":{"entities/Product.html":{},"controllers/ProductCategoryController.html":{}}}],["category.controller",{"_index":904,"title":{},"body":{"modules/ProductCategoryModule.html":{}}}],["category.controller.ts",{"_index":884,"title":{},"body":{"controllers/ProductCategoryController.html":{},"coverage.html":{}}}],["category.controller.ts:11",{"_index":886,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["category.controller.ts:16",{"_index":887,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["category.controller.ts:21",{"_index":888,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["category.controller.ts:26",{"_index":891,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["category.controller.ts:31",{"_index":889,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["category.dto",{"_index":894,"title":{},"body":{"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"classes/UpdateProductCategoryDto.html":{}}}],["category.dto.ts",{"_index":584,"title":{},"body":{"classes/CreateProductCategoryDto.html":{},"classes/UpdateProductCategoryDto.html":{},"coverage.html":{}}}],["category.entity.ts",{"_index":849,"title":{},"body":{"entities/PaymentTypes.html":{},"coverage.html":{}}}],["category.entity.ts:14",{"_index":850,"title":{},"body":{"entities/PaymentTypes.html":{}}}],["category.entity.ts:7",{"_index":851,"title":{},"body":{"entities/PaymentTypes.html":{}}}],["category.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["category.module.ts",{"_index":903,"title":{},"body":{"modules/ProductCategoryModule.html":{}}}],["category.service",{"_index":893,"title":{},"body":{"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{}}}],["category.service.ts",{"_index":905,"title":{},"body":{"injectables/ProductCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:11",{"_index":907,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["category.service.ts:15",{"_index":908,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["category.service.ts:19",{"_index":910,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["category.service.ts:23",{"_index":909,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["category.service.ts:7",{"_index":906,"title":{},"body":{"injectables/ProductCategoryService.html":{}}}],["category/dto/create",{"_index":583,"title":{},"body":{"classes/CreateProductCategoryDto.html":{},"coverage.html":{}}}],["category/dto/update",{"_index":962,"title":{},"body":{"classes/UpdateProductCategoryDto.html":{},"coverage.html":{}}}],["category/entities/productcategory",{"_index":869,"title":{},"body":{"entities/Product.html":{}}}],["category/entities/productcategory.ts",{"_index":875,"title":{},"body":{"entities/ProductCategory.html":{},"coverage.html":{}}}],["category/entities/productcategory.ts:15",{"_index":877,"title":{},"body":{"entities/ProductCategory.html":{}}}],["category/entities/productcategory.ts:18",{"_index":879,"title":{},"body":{"entities/ProductCategory.html":{}}}],["category/entities/productcategory.ts:8",{"_index":876,"title":{},"body":{"entities/ProductCategory.html":{}}}],["category/product",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"coverage.html":{}}}],["category_id",{"_index":873,"title":{},"body":{"entities/Product.html":{},"entities/ProductCategory.html":{}}}],["categoryid",{"_index":874,"title":{},"body":{"entities/Product.html":{},"entities/ProductCategory.html":{}}}],["cfg",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["cfg.get('database",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["character",{"_index":1224,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["check",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["city",{"_index":67,"title":{},"body":{"entities/Address.html":{}}}],["class",{"_index":18,"title":{"classes/AuthDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/ExampleSeeder.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserSeeder.html":{},"classes/generateStarterTables1677818653265.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["classes",{"_index":335,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/ExampleSeeder.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserSeeder.html":{},"classes/generateStarterTables1677818653265.html":{},"overview.html":{}}}],["cliconfig",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_addressmodule",{"_index":162,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_providers",{"_index":163,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartitemmodule",{"_index":525,"title":{},"body":{"modules/CartItemModule.html":{},"overview.html":{}}}],["cluster_cartitemmodule_providers",{"_index":526,"title":{},"body":{"modules/CartItemModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":535,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":536,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_examplemodule",{"_index":653,"title":{},"body":{"modules/ExampleModule.html":{},"overview.html":{}}}],["cluster_examplemodule_providers",{"_index":654,"title":{},"body":{"modules/ExampleModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":754,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":755,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":809,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_providers",{"_index":810,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymenttypemodule",{"_index":836,"title":{},"body":{"modules/PaymentTypeModule.html":{},"overview.html":{}}}],["cluster_paymenttypemodule_providers",{"_index":837,"title":{},"body":{"modules/PaymentTypeModule.html":{},"overview.html":{}}}],["cluster_productcategorymodule",{"_index":901,"title":{},"body":{"modules/ProductCategoryModule.html":{},"overview.html":{}}}],["cluster_productcategorymodule_providers",{"_index":902,"title":{},"body":{"modules/ProductCategoryModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":928,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":929,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_useraddressmodule",{"_index":1036,"title":{},"body":{"modules/UserAddressModule.html":{},"overview.html":{}}}],["cluster_useraddressmodule_providers",{"_index":1037,"title":{},"body":{"modules/UserAddressModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1070,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1071,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1072,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userpaymentmodule",{"_index":1095,"title":{},"body":{"modules/UserPaymentModule.html":{},"overview.html":{}}}],["cluster_userpaymentmodule_providers",{"_index":1096,"title":{},"body":{"modules/UserPaymentModule.html":{},"overview.html":{}}}],["column",{"_index":103,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Example.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["column('character",{"_index":76,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{}}}],["column('date",{"_index":441,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["column('integer",{"_index":446,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/ProductCategory.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["column('numeric",{"_index":486,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["column({default",{"_index":608,"title":{},"body":{"entities/Example.html":{}}}],["column({nullable",{"_index":611,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{}}}],["column({unique",{"_index":976,"title":{},"body":{"entities/User.html":{}}}],["comm",{"_index":1237,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1244,"title":{},"body":{"index.html":{},"properties.html":{}}}],["common/guards/accesstoken.guard",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["common/guards/refreshtoken.guard",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["config",{"_index":271,"title":{},"body":{"injectables/AppService.html":{}}}],["config/dbconfig",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["configoptions",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":30,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["configservice.get('jwt_refresh_secret",{"_index":943,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["configservice.get('jwt_secret",{"_index":58,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["console.log('req.user",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["const",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":1227,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ExampleService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":29,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(examplerepository",{"_index":681,"title":{},"body":{"injectables/ExampleService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserAddressController.html":{},"controllers/UserController.html":{},"controllers/UserPaymentController.html":{}}}],["constructor(userrepository",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":114,"title":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserAddressController.html":{},"controllers/UserController.html":{},"controllers/UserPaymentController.html":{}},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserAddressController.html":{},"controllers/UserController.html":{},"controllers/UserPaymentController.html":{},"coverage.html":{}}}],["controller('address",{"_index":148,"title":{},"body":{"controllers/AddressController.html":{}}}],["controller('auth",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cart",{"_index":467,"title":{},"body":{"controllers/CartController.html":{},"controllers/CartItemController.html":{}}}],["controller('example",{"_index":640,"title":{},"body":{"controllers/ExampleController.html":{}}}],["controller('order",{"_index":748,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('payment",{"_index":803,"title":{},"body":{"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{}}}],["controller('product",{"_index":895,"title":{},"body":{"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{}}}],["controller('user",{"_index":1035,"title":{},"body":{"controllers/UserAddressController.html":{},"controllers/UserPaymentController.html":{}}}],["controller('users",{"_index":1060,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":116,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"overview.html":{}}}],["cookie",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["country",{"_index":68,"title":{},"body":{"entities/Address.html":{}}}],["coverage",{"_index":1143,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":119,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["create(@body",{"_index":149,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["create(createaddressdto",{"_index":124,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["create(createcartdto",{"_index":456,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["create(createcartitemdto",{"_index":509,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{}}}],["create(createexampledto",{"_index":620,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{}}}],["create(createorderdto",{"_index":738,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["create(createpaymentdto",{"_index":793,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["create(createpaymenttypedto",{"_index":821,"title":{},"body":{"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{}}}],["create(createproductcategorydto",{"_index":885,"title":{},"body":{"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{}}}],["create(createproductdto",{"_index":913,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["create(createuserdto",{"_index":1045,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createaddressdto",{"_index":125,"title":{"classes/CreateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["createcartdto",{"_index":457,"title":{"classes/CreateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateCartDto.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["createcartitemdto",{"_index":510,"title":{"classes/CreateCartItemDto.html":{}},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"classes/CreateCartItemDto.html":{},"classes/UpdateCartItemDto.html":{},"coverage.html":{}}}],["created",{"_index":699,"title":{},"body":{"injectables/ExampleService.html":{},"entities/Payment.html":{},"injectables/UserService.html":{}}}],["created_at",{"_index":600,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["createdatecolumn",{"_index":603,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{}}}],["createexampledto",{"_index":551,"title":{"classes/CreateExampleDto.html":{}},"body":{"classes/CreateExampleDto.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"classes/UpdateExampleDto.html":{},"coverage.html":{}}}],["createorderdto",{"_index":571,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createpaymentdto",{"_index":574,"title":{"classes/CreatePaymentDto.html":{}},"body":{"classes/CreatePaymentDto.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["createpaymenttypedto",{"_index":577,"title":{"classes/CreatePaymentTypeDto.html":{}},"body":{"classes/CreatePaymentTypeDto.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"classes/UpdatePaymentTypeDto.html":{},"coverage.html":{}}}],["createproductcategorydto",{"_index":581,"title":{"classes/CreateProductCategoryDto.html":{}},"body":{"classes/CreateProductCategoryDto.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"classes/UpdateProductCategoryDto.html":{},"coverage.html":{}}}],["createproductdto",{"_index":585,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":300,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.username",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":643,"title":{},"body":{"controllers/ExampleController.html":{}}}],["current_date",{"_index":444,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["data",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["data.password",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":678,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":665,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["datasource(configoptions",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource(options",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getrepository(user",{"_index":1104,"title":{},"body":{"classes/UserSeeder.html":{}}}],["datasourceoptions",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":602,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{}}}],["db/migrations/*.{js,ts",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":75,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserController.html":{},"entities/UserPayment.html":{}}}],["default",{"_index":443,"title":{},"body":{"entities/Cart.html":{},"entities/Example.html":{},"classes/ExampleSeeder.html":{},"entities/Order.html":{},"classes/UserSeeder.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserController.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["delete",{"_index":142,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete('/id/:id",{"_index":628,"title":{},"body":{"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":133,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{}}}],["deletes",{"_index":716,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["denied",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":161,"title":{"dependencies.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployed",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":554,"title":{},"body":{"classes/CreateExampleDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"classes/generateStarterTables1677818653265.html":{},"properties.html":{}}}],["details",{"_index":1247,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1257,"title":{},"body":{"index.html":{}}}],["disable",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExampleController.html":{},"injectables/RefreshTokenGuard.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{}}}],["docker",{"_index":1252,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1144,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["down",{"_index":1212,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["down(queryrunner",{"_index":1216,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["dto/auth.dto",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":145,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":147,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":1236,"title":{},"body":{"index.html":{},"properties.html":{}}}],["email",{"_index":590,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["entities",{"_index":62,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Example.html":{},"classes/ExampleSeeder.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/example.entity",{"_index":657,"title":{},"body":{"modules/ExampleModule.html":{},"injectables/ExampleService.html":{}}}],["entities/user.entity",{"_index":1075,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":60,"title":{"entities/Address.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Example.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}},"body":{"entities/Address.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Example.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"coverage.html":{}}}],["entity('address",{"_index":111,"title":{},"body":{"entities/Address.html":{}}}],["entity('cart",{"_index":453,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{}}}],["entity('order",{"_index":733,"title":{},"body":{"entities/Order.html":{}}}],["entity('payment",{"_index":790,"title":{},"body":{"entities/Payment.html":{}}}],["entity('payment_types",{"_index":853,"title":{},"body":{"entities/PaymentTypes.html":{}}}],["entity('product",{"_index":871,"title":{},"body":{"entities/Product.html":{}}}],["entity('product_category",{"_index":882,"title":{},"body":{"entities/ProductCategory.html":{}}}],["entity('user_address",{"_index":1029,"title":{},"body":{"entities/UserAddress.html":{}}}],["entity('user_payment",{"_index":1088,"title":{},"body":{"entities/UserPayment.html":{}}}],["entity{.ts,.js",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["envfile",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":642,"title":{},"body":{"controllers/ExampleController.html":{}}}],["eslint",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExampleController.html":{},"injectables/RefreshTokenGuard.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{}}}],["example",{"_index":598,"title":{"entities/Example.html":{}},"body":{"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["example.controller",{"_index":656,"title":{},"body":{"modules/ExampleModule.html":{}}}],["example.description",{"_index":711,"title":{},"body":{"injectables/ExampleService.html":{}}}],["example.dto",{"_index":637,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"classes/UpdateExampleDto.html":{}}}],["example.dto.ts",{"_index":553,"title":{},"body":{"classes/CreateExampleDto.html":{},"classes/UpdateExampleDto.html":{},"coverage.html":{}}}],["example.dto.ts:12",{"_index":561,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.dto.ts:15",{"_index":569,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.dto.ts:18",{"_index":568,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.dto.ts:21",{"_index":566,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.dto.ts:24",{"_index":564,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.dto.ts:27",{"_index":565,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.dto.ts:30",{"_index":559,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["example.isactive",{"_index":709,"title":{},"body":{"injectables/ExampleService.html":{}}}],["example.service",{"_index":636,"title":{},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{}}}],["example.testnumber",{"_index":707,"title":{},"body":{"injectables/ExampleService.html":{}}}],["example.teststring",{"_index":705,"title":{},"body":{"injectables/ExampleService.html":{}}}],["example/entities/example.entity",{"_index":670,"title":{},"body":{"classes/ExampleSeeder.html":{}}}],["example/example.module",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["examplecontroller",{"_index":616,"title":{"controllers/ExampleController.html":{}},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"coverage.html":{}}}],["examplefactory",{"_index":671,"title":{},"body":{"classes/ExampleSeeder.html":{}}}],["examplefactory.savemany(numrecords",{"_index":679,"title":{},"body":{"classes/ExampleSeeder.html":{}}}],["examplemodule",{"_index":219,"title":{"modules/ExampleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules.html":{},"overview.html":{}}}],["examplerepository",{"_index":684,"title":{},"body":{"injectables/ExampleService.html":{}}}],["exampleseeder",{"_index":659,"title":{"classes/ExampleSeeder.html":{}},"body":{"classes/ExampleSeeder.html":{},"coverage.html":{}}}],["exampleservice",{"_index":635,"title":{"injectables/ExampleService.html":{}},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"coverage.html":{},"overview.html":{}}}],["exist",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["existing",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["expects",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["exports",{"_index":1074,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":19,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":669,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{},"dependencies.html":{}}}],["extractjwt",{"_index":44,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":56,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["factories",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory",{"_index":676,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["factorymanager",{"_index":666,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["factorymanager.get(example",{"_index":672,"title":{},"body":{"classes/ExampleSeeder.html":{}}}],["factorymanager.get(user",{"_index":1103,"title":{},"body":{"classes/UserSeeder.html":{}}}],["false",{"_index":1015,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["false})@isnotempty()@isstring",{"_index":995,"title":{},"body":{"entities/User.html":{}}}],["fields",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["findall",{"_index":120,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":1043,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid(@param('id",{"_index":1064,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyid(id",{"_index":1049,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyusername",{"_index":1044,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyusername(@param('username",{"_index":1066,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyusername(username",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":121,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findone(@param('id",{"_index":152,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{}}}],["findone(id",{"_index":129,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findonebyid",{"_index":618,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{}}}],["findonebyid(@param('id",{"_index":648,"title":{},"body":{"controllers/ExampleController.html":{}}}],["findonebyid(id",{"_index":623,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{}}}],["first_name",{"_index":87,"title":{},"body":{"entities/Address.html":{}}}],["firstname",{"_index":69,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["forbiddenexception",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('access",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1209,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":677,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["generatestartertables.ts",{"_index":1164,"title":{},"body":{"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["generatestartertables.ts:15",{"_index":1218,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["generatestartertables.ts:4",{"_index":1215,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["generatestartertables.ts:6",{"_index":1220,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["generatestartertables1677818653265",{"_index":1165,"title":{"classes/generateStarterTables1677818653265.html":{}},"body":{"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["generic",{"_index":1243,"title":{},"body":{"index.html":{}}}],["get('/id/:id",{"_index":624,"title":{},"body":{"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["get('/username/:username",{"_index":1052,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":130,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{}}}],["get('logout",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('protected",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/ExampleController.html":{}}}],["get('refresh",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprotected",{"_index":619,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{}}}],["getting",{"_index":1234,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokens(userid",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["google_display_name",{"_index":980,"title":{},"body":{"entities/User.html":{}}}],["google_first_name",{"_index":982,"title":{},"body":{"entities/User.html":{}}}],["google_id",{"_index":984,"title":{},"body":{"entities/User.html":{}}}],["google_image",{"_index":986,"title":{},"body":{"entities/User.html":{}}}],["google_last_name",{"_index":988,"title":{},"body":{"entities/User.html":{}}}],["googledisplayname",{"_index":970,"title":{},"body":{"entities/User.html":{}}}],["googlefirstname",{"_index":971,"title":{},"body":{"entities/User.html":{}}}],["googleid",{"_index":972,"title":{},"body":{"entities/User.html":{}}}],["googleimage",{"_index":973,"title":{},"body":{"entities/User.html":{}}}],["googlelastname",{"_index":974,"title":{},"body":{"entities/User.html":{}}}],["hash",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{}}}],["hash(this.password",{"_index":1014,"title":{},"body":{"entities/User.html":{}}}],["hashdata",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashdata(data",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedrefreshtoken",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword",{"_index":1010,"title":{},"body":{"entities/User.html":{}}}],["hello",{"_index":280,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hosting",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://stackoverflow.com/questions/47792808/typeorm",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["https://www.elvisduru.com/blog/nestjs",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["https://www.youtube.com/watch?v=_l225zpuk0m&list=wl&index=17",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":70,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserController.html":{},"entities/UserPayment.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["identifier",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":864,"title":{},"body":{"entities/Product.html":{}}}],["imageurl",{"_index":856,"title":{},"body":{"entities/Product.html":{}}}],["implementation",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":661,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["import",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["imports",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExampleModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserController.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index('address_pkey",{"_index":109,"title":{},"body":{"entities/Address.html":{}}}],["index('cart",{"_index":502,"title":{},"body":{"entities/CartItem.html":{}}}],["index('cart_pkey",{"_index":452,"title":{},"body":{"entities/Cart.html":{}}}],["index('order_pkey",{"_index":732,"title":{},"body":{"entities/Order.html":{}}}],["index('payment_pkey",{"_index":789,"title":{},"body":{"entities/Payment.html":{}}}],["index('payment_types_pkey",{"_index":852,"title":{},"body":{"entities/PaymentTypes.html":{}}}],["index('product_category_pkey",{"_index":881,"title":{},"body":{"entities/ProductCategory.html":{}}}],["index('product_pkey",{"_index":870,"title":{},"body":{"entities/Product.html":{}}}],["index('user_address_pkey",{"_index":1028,"title":{},"body":{"entities/UserAddress.html":{}}}],["index('user_payment_pkey",{"_index":1087,"title":{},"body":{"entities/UserPayment.html":{}}}],["index('user_pkey",{"_index":1006,"title":{},"body":{"entities/User.html":{}}}],["index('user_user_name_key",{"_index":1007,"title":{},"body":{"entities/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["inject",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["inject(configservice",{"_index":275,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/ExampleService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserAddressService.html":{},"injectables/UserPaymentService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/ExampleService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserAddressService.html":{},"injectables/UserPaymentService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/ExampleService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UserAddressService.html":{},"injectables/UserPaymentService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":691,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["injectrepository(example",{"_index":692,"title":{},"body":{"injectables/ExampleService.html":{}}}],["injectrepository(user",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["insert",{"_index":1009,"title":{},"body":{"entities/User.html":{}}}],["installation",{"_index":1250,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integer",{"_index":91,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["isactive",{"_index":555,"title":{},"body":{"classes/CreateExampleDto.html":{},"entities/Example.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["isboolean",{"_index":563,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["isc",{"_index":1272,"title":{},"body":{"properties.html":{}}}],["isemail",{"_index":591,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":341,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["isnumber",{"_index":567,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["isstring",{"_index":342,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["isstring()@isnotempty",{"_index":338,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":570,"title":{},"body":{"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"entities/User.html":{}}}],["isuuid()@isnotempty",{"_index":560,"title":{},"body":{"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{}}}],["item",{"_index":504,"title":{},"body":{"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/UserService.html":{}}}],["item.controller",{"_index":528,"title":{},"body":{"modules/CartItemModule.html":{}}}],["item.controller.ts",{"_index":508,"title":{},"body":{"controllers/CartItemController.html":{},"coverage.html":{}}}],["item.controller.ts:11",{"_index":511,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.controller.ts:16",{"_index":512,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.controller.ts:21",{"_index":513,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.controller.ts:26",{"_index":516,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.controller.ts:31",{"_index":514,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.dto",{"_index":519,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"classes/UpdateCartItemDto.html":{}}}],["item.dto.ts",{"_index":550,"title":{},"body":{"classes/CreateCartItemDto.html":{},"classes/UpdateCartItemDto.html":{},"coverage.html":{}}}],["item.entity",{"_index":450,"title":{},"body":{"entities/Cart.html":{}}}],["item.entity.ts",{"_index":474,"title":{},"body":{"entities/CartItem.html":{},"coverage.html":{}}}],["item.entity.ts:11",{"_index":494,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:14",{"_index":498,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:17",{"_index":496,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:20",{"_index":492,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:24",{"_index":482,"title":{},"body":{"entities/CartItem.html":{}}}],["item.entity.ts:8",{"_index":485,"title":{},"body":{"entities/CartItem.html":{}}}],["item.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":527,"title":{},"body":{"modules/CartItemModule.html":{}}}],["item.service",{"_index":518,"title":{},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{}}}],["item.service.ts",{"_index":529,"title":{},"body":{"injectables/CartItemService.html":{},"coverage.html":{}}}],["item.service.ts:11",{"_index":531,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:15",{"_index":532,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:19",{"_index":534,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:23",{"_index":533,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:7",{"_index":530,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item/cart",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"coverage.html":{}}}],["item/dto/create",{"_index":549,"title":{},"body":{"classes/CreateCartItemDto.html":{},"coverage.html":{}}}],["item/dto/update",{"_index":952,"title":{},"body":{"classes/UpdateCartItemDto.html":{},"coverage.html":{}}}],["item/entities/cart",{"_index":449,"title":{},"body":{"entities/Cart.html":{},"entities/CartItem.html":{},"coverage.html":{}}}],["item_pkey",{"_index":503,"title":{},"body":{"entities/CartItem.html":{}}}],["joincolumn",{"_index":499,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["jwt",{"_index":47,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":193,"title":{},"body":{"controllers/AppController.html":{}}}],["jwtfromrequest",{"_index":55,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":38,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtservice",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":1229,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["last_name",{"_index":93,"title":{},"body":{"entities/Address.html":{}}}],["lastname",{"_index":71,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["length",{"_index":78,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{}}}],["license",{"_index":1271,"title":{},"body":{"properties.html":{}}}],["line",{"_index":15,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExampleController.html":{},"injectables/RefreshTokenGuard.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{}}}],["line_item_total_price",{"_index":487,"title":{},"body":{"entities/CartItem.html":{}}}],["lineitemtotalprice",{"_index":476,"title":{},"body":{"entities/CartItem.html":{}}}],["literal",{"_index":1280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":272,"title":{},"body":{"injectables/AppService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@request",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["login(data",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@req",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(userid",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["manytoone",{"_index":500,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["manytoone(undefined",{"_index":480,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["matching",{"_index":22,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/generateStarterTables1677818653265.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matt",{"_index":1274,"title":{},"body":{"properties.html":{}}}],["mburnett@tutanota.de",{"_index":1276,"title":{},"body":{"properties.html":{}}}],["metadata",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["migration:run",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":1211,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["migrations",{"_index":1254,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1208,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":158,"title":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{}}}],["modules",{"_index":160,"title":{"modules.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1246,"title":{},"body":{"index.html":{}}}],["msg",{"_index":209,"title":{},"body":{"controllers/AppController.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserController.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1011,"title":{},"body":{"entities/User.html":{}}}],["nestjs",{"_index":1241,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":42,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExampleController.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"injectables/ExampleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":178,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newexample",{"_index":696,"title":{},"body":{"injectables/ExampleService.html":{}}}],["newexample.teststring",{"_index":700,"title":{},"body":{"injectables/ExampleService.html":{}}}],["newuser",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["newuser.id",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExampleController.html":{},"injectables/RefreshTokenGuard.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{}}}],["notes",{"_index":1258,"title":{},"body":{"index.html":{}}}],["now",{"_index":1226,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["null",{"_index":81,"title":{},"body":{"entities/Address.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["nullable",{"_index":82,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Example.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{}}}],["number",{"_index":89,"title":{},"body":{"entities/Address.html":{},"injectables/AddressService.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"entities/Example.html":{},"entities/Order.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["numrecords",{"_index":673,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["object",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["one",{"_index":1110,"title":{},"body":{"classes/UserSeeder.html":{}}}],["onetomany",{"_index":104,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Payment.html":{},"entities/ProductCategory.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":100,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Payment.html":{},"entities/ProductCategory.html":{},"entities/User.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["options",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":432,"title":{"entities/Order.html":{}},"body":{"entities/Cart.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/User.html":{},"coverage.html":{}}}],["order.cart",{"_index":439,"title":{},"body":{"entities/Cart.html":{}}}],["order.controller",{"_index":757,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":747,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":573,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.service",{"_index":746,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order.user",{"_index":993,"title":{},"body":{"entities/User.html":{}}}],["order/entities/order.entity",{"_index":451,"title":{},"body":{"entities/Cart.html":{},"entities/User.html":{}}}],["order/order.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["order_date",{"_index":442,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["ordercontroller",{"_index":736,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderdate",{"_index":433,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{}}}],["ordermodule",{"_index":220,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":745,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":166,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{},"overview.html":{}}}],["overview",{"_index":1263,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1175,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":141,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":650,"title":{},"body":{"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["parser",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["parseuuidpipe",{"_index":634,"title":{},"body":{"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["partialtype",{"_index":948,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaddressdto",{"_index":949,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["partialtype(createcartdto",{"_index":951,"title":{},"body":{"classes/UpdateCartDto.html":{}}}],["partialtype(createcartitemdto",{"_index":953,"title":{},"body":{"classes/UpdateCartItemDto.html":{}}}],["partialtype(createexampledto",{"_index":955,"title":{},"body":{"classes/UpdateExampleDto.html":{}}}],["partialtype(createorderdto",{"_index":957,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["partialtype(createpaymentdto",{"_index":959,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["partialtype(createpaymenttypedto",{"_index":961,"title":{},"body":{"classes/UpdatePaymentTypeDto.html":{}}}],["partialtype(createproductcategorydto",{"_index":963,"title":{},"body":{"classes/UpdateProductCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":965,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createuserdto",{"_index":968,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":46,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":43,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":51,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["passreqtocallback",{"_index":944,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["password",{"_index":337,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/variables.html":{}}}],["passwordmatches",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":140,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["patch('/id/:id",{"_index":632,"title":{},"body":{"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":137,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{}}}],["payload",{"_index":40,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["payment",{"_index":244,"title":{"entities/Payment.html":{}},"body":{"modules/AppModule.html":{},"classes/CreatePaymentTypeDto.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"classes/UpdatePaymentTypeDto.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"coverage.html":{}}}],["payment.controller",{"_index":812,"title":{},"body":{"modules/PaymentModule.html":{},"modules/UserPaymentModule.html":{}}}],["payment.controller.ts",{"_index":1092,"title":{},"body":{"controllers/UserPaymentController.html":{},"coverage.html":{}}}],["payment.dto",{"_index":802,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts",{"_index":576,"title":{},"body":{"classes/CreatePaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["payment.entity",{"_index":788,"title":{},"body":{"entities/Payment.html":{},"entities/User.html":{}}}],["payment.entity.ts",{"_index":1078,"title":{},"body":{"entities/UserPayment.html":{},"coverage.html":{}}}],["payment.entity.ts:16",{"_index":1079,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment.entity.ts:19",{"_index":1085,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment.entity.ts:22",{"_index":1082,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment.entity.ts:26",{"_index":1081,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment.entity.ts:30",{"_index":1084,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment.module",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["payment.module.ts",{"_index":1097,"title":{},"body":{"modules/UserPaymentModule.html":{}}}],["payment.service",{"_index":801,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{}}}],["payment.service.ts",{"_index":1098,"title":{},"body":{"injectables/UserPaymentService.html":{},"coverage.html":{}}}],["payment.userpayment",{"_index":1089,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment.userpayment)@joincolumn(['undefined",{"_index":1080,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment/entities/payment.entity",{"_index":1086,"title":{},"body":{"entities/UserPayment.html":{}}}],["payment/entities/user",{"_index":787,"title":{},"body":{"entities/Payment.html":{},"entities/User.html":{},"entities/UserPayment.html":{},"coverage.html":{}}}],["payment/payment.module",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["payment/user",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"coverage.html":{}}}],["payment_id",{"_index":725,"title":{},"body":{"entities/Order.html":{},"entities/UserPayment.html":{}}}],["payment_method",{"_index":774,"title":{},"body":{"entities/Payment.html":{}}}],["paymentcontroller",{"_index":791,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentid",{"_index":719,"title":{},"body":{"entities/Order.html":{},"entities/UserPayment.html":{}}}],["paymentmethod",{"_index":766,"title":{},"body":{"entities/Payment.html":{}}}],["paymentmodule",{"_index":221,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentservice",{"_index":800,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paymenttype",{"_index":846,"title":{},"body":{"injectables/PaymentTypeService.html":{}}}],["paymenttypecontroller",{"_index":819,"title":{"controllers/PaymentTypeController.html":{}},"body":{"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"coverage.html":{}}}],["paymenttypemodule",{"_index":222,"title":{"modules/PaymentTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["paymenttypes",{"_index":847,"title":{"entities/PaymentTypes.html":{}},"body":{"entities/PaymentTypes.html":{},"coverage.html":{}}}],["paymenttypeservice",{"_index":828,"title":{"injectables/PaymentTypeService.html":{}},"body":{"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["pg",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["pk_608dd5fd6f0783062b07346ed1c",{"_index":1228,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["pk_cace4a159ff9f2512dd42373760",{"_index":1232,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["port",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":126,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["post('signup",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["postal_code",{"_index":95,"title":{},"body":{"entities/Address.html":{}}}],["postalcode",{"_index":72,"title":{},"body":{"entities/Address.html":{}}}],["postgres",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["precision",{"_index":488,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["prefix",{"_index":118,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserAddressController.html":{},"controllers/UserController.html":{},"controllers/UserPaymentController.html":{}}}],["prettier/prettier",{"_index":16,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExampleController.html":{},"injectables/RefreshTokenGuard.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{}}}],["price",{"_index":857,"title":{},"body":{"entities/Product.html":{}}}],["primary",{"_index":483,"title":{},"body":{"entities/CartItem.html":{},"entities/ProductCategory.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["primarygeneratedcolumn",{"_index":105,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Example.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":615,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid')@isuuid",{"_index":606,"title":{},"body":{"entities/Example.html":{}}}],["primarygeneratedcolumn('uuid')@isuuid()@isnotempty",{"_index":990,"title":{},"body":{"entities/User.html":{}}}],["primarygeneratedcolumn({type",{"_index":90,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["private",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["process.env.db_database_name",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user_name",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":247,"title":{"entities/Product.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProductCategoryDto.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductCategoryDto.html":{},"coverage.html":{}}}],["product.category",{"_index":878,"title":{},"body":{"entities/ProductCategory.html":{}}}],["product.controller",{"_index":931,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":922,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":587,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.service",{"_index":921,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/entities/product.entity",{"_index":880,"title":{},"body":{"entities/ProductCategory.html":{}}}],["product/product.module",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["product_id",{"_index":493,"title":{},"body":{"entities/CartItem.html":{}}}],["product_price",{"_index":495,"title":{},"body":{"entities/CartItem.html":{}}}],["product_quantity",{"_index":497,"title":{},"body":{"entities/CartItem.html":{}}}],["productcategory",{"_index":858,"title":{"entities/ProductCategory.html":{}},"body":{"entities/Product.html":{},"entities/ProductCategory.html":{},"injectables/ProductCategoryService.html":{},"coverage.html":{}}}],["productcategory.product",{"_index":872,"title":{},"body":{"entities/Product.html":{}}}],["productcategory.product)@joincolumn(['undefined",{"_index":859,"title":{},"body":{"entities/Product.html":{}}}],["productcategorycontroller",{"_index":883,"title":{"controllers/ProductCategoryController.html":{}},"body":{"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"coverage.html":{}}}],["productcategorymodule",{"_index":223,"title":{"modules/ProductCategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductCategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["productcategoryservice",{"_index":892,"title":{"injectables/ProductCategoryService.html":{}},"body":{"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["productcontroller",{"_index":911,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":477,"title":{},"body":{"entities/CartItem.html":{}}}],["productmodule",{"_index":224,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productprice",{"_index":478,"title":{},"body":{"entities/CartItem.html":{}}}],["productquantity",{"_index":479,"title":{},"body":{"entities/CartItem.html":{}}}],["productservice",{"_index":920,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1239,"title":{},"body":{"index.html":{}}}],["promise",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["promise.all",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":64,"title":{"properties.html":{}},"body":{"entities/Address.html":{},"injectables/AppService.html":{},"classes/AuthDto.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{},"properties.html":{}}}],["protected",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"injectables/ExampleService.html":{}}}],["providers",{"_index":168,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{}}}],["public",{"_index":113,"title":{},"body":{"entities/Address.html":{},"injectables/AppService.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"classes/ExampleSeeder.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["queryrunner",{"_index":1217,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["queryrunner.query",{"_index":1221,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["queryrunner.query(`drop",{"_index":1233,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserAddressController.html":{},"controllers/UserController.html":{},"controllers/UserPaymentController.html":{}}}],["receipt_url",{"_index":776,"title":{},"body":{"entities/Payment.html":{}}}],["receipturl",{"_index":767,"title":{},"body":{"entities/Payment.html":{}}}],["referencedcolumnname",{"_index":506,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Product.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["reflect",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refreshtoken",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["refreshtokenguard",{"_index":305,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokenmatches",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokens",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtokens(@req",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(req",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokens(userid",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokenstrategy",{"_index":346,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["remove",{"_index":122,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":156,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/ExampleController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":132,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removes",{"_index":180,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{}}}],["repository",{"_index":682,"title":{},"body":{"injectables/ExampleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{}}}],["repository.save(testuser",{"_index":1116,"title":{},"body":{"classes/UserSeeder.html":{}}}],["req",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.get('authorization').replace('bearer",{"_index":945,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["req.user",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user['refreshtoken",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user['sub",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["reset",{"_index":165,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{},"overview.html":{}}}],["resource",{"_index":693,"title":{},"body":{"injectables/ExampleService.html":{}}}],["results",{"_index":21,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"classes/generateStarterTables1677818653265.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":41,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/UserController.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["run",{"_index":663,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["run(datasource",{"_index":664,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["rxjs",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":1012,"title":{},"body":{"entities/User.html":{}}}],["save",{"_index":675,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["scale",{"_index":490,"title":{},"body":{"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/Product.html":{}}}],["schema",{"_index":112,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["secret",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":57,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["see",{"_index":694,"title":{},"body":{"injectables/ExampleService.html":{}}}],["seedconfig",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seeder",{"_index":662,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["seederfactorymanager",{"_index":667,"title":{},"body":{"classes/ExampleSeeder.html":{},"classes/UserSeeder.html":{}}}],["seeding",{"_index":1255,"title":{},"body":{"index.html":{}}}],["seeds",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["session",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["setup",{"_index":1251,"title":{},"body":{"index.html":{}}}],["showuser",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["signup",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["site",{"_index":1270,"title":{},"body":{"properties.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCartItemDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreatePaymentTypeDto.html":{},"classes/CreateProductCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCartItemDto.html":{},"classes/UpdateExampleDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"classes/UpdateProductCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["src/**/**.entity{.ts,.js",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accesstoken.strategy.ts",{"_index":1279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app.module.ts",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cliconfig.ts",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seedconfig.ts",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/address/address.controller.ts",{"_index":117,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{}}}],["src/address/address.controller.ts:11",{"_index":127,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:16",{"_index":128,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:21",{"_index":131,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:26",{"_index":138,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:31",{"_index":134,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.module.ts",{"_index":167,"title":{},"body":{"modules/AddressModule.html":{}}}],["src/address/address.service.ts",{"_index":170,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/address/address.service.ts:11",{"_index":172,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:15",{"_index":173,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:19",{"_index":175,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:23",{"_index":174,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:7",{"_index":171,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/dto/create",{"_index":545,"title":{},"body":{"classes/CreateAddressDto.html":{},"coverage.html":{}}}],["src/address/dto/update",{"_index":947,"title":{},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["src/address/entities/address.entity.ts",{"_index":63,"title":{},"body":{"entities/Address.html":{},"coverage.html":{}}}],["src/address/entities/address.entity.ts:14",{"_index":92,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:21",{"_index":88,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:28",{"_index":94,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:31",{"_index":80,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:38",{"_index":84,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:41",{"_index":85,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:44",{"_index":99,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:47",{"_index":97,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:50",{"_index":86,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:53",{"_index":102,"title":{},"body":{"entities/Address.html":{}}}],["src/app.controller.ts",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:29",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":270,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:15",{"_index":274,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":276,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":273,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:18",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:16",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:53",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:61",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":336,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:5",{"_index":340,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:9",{"_index":339,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts",{"_index":24,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts:12",{"_index":32,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts:20",{"_index":39,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts",{"_index":939,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts:12",{"_index":940,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts:21",{"_index":942,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/cart",{"_index":473,"title":{},"body":{"entities/CartItem.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"classes/CreateCartItemDto.html":{},"classes/UpdateCartItemDto.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts",{"_index":455,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:11",{"_index":458,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:16",{"_index":459,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:21",{"_index":460,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:26",{"_index":463,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:31",{"_index":461,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":537,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":539,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:11",{"_index":541,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:15",{"_index":542,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:19",{"_index":544,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:23",{"_index":543,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:7",{"_index":540,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/dto/create",{"_index":547,"title":{},"body":{"classes/CreateCartDto.html":{},"coverage.html":{}}}],["src/cart/dto/update",{"_index":950,"title":{},"body":{"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts",{"_index":430,"title":{},"body":{"entities/Cart.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts:15",{"_index":436,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:18",{"_index":448,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:21",{"_index":438,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:28",{"_index":445,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:31",{"_index":435,"title":{},"body":{"entities/Cart.html":{}}}],["src/cart/entities/cart.entity.ts:34",{"_index":440,"title":{},"body":{"entities/Cart.html":{}}}],["src/common/guards/accesstoken.guard.ts",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/common/guards/refreshtoken.guard.ts",{"_index":938,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/config/cliconfig.ts",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/seedconfig.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/db/factories/**/*{.ts,.js",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/db/migrations/**/*{.ts,.js",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/db/migrations/1677818653265",{"_index":1163,"title":{},"body":{"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["src/db/seeds/**/*{.ts,.js",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/db/seeds/example.seeder.ts",{"_index":660,"title":{},"body":{"classes/ExampleSeeder.html":{},"coverage.html":{}}}],["src/db/seeds/example.seeder.ts:6",{"_index":668,"title":{},"body":{"classes/ExampleSeeder.html":{}}}],["src/db/seeds/user.seeder.ts",{"_index":1100,"title":{},"body":{"classes/UserSeeder.html":{},"coverage.html":{}}}],["src/db/seeds/user.seeder.ts:6",{"_index":1101,"title":{},"body":{"classes/UserSeeder.html":{}}}],["src/example/dto/create",{"_index":552,"title":{},"body":{"classes/CreateExampleDto.html":{},"coverage.html":{}}}],["src/example/dto/update",{"_index":954,"title":{},"body":{"classes/UpdateExampleDto.html":{},"coverage.html":{}}}],["src/example/entities/example.entity.ts",{"_index":599,"title":{},"body":{"entities/Example.html":{},"coverage.html":{}}}],["src/example/entities/example.entity.ts:14",{"_index":607,"title":{},"body":{"entities/Example.html":{}}}],["src/example/entities/example.entity.ts:17",{"_index":612,"title":{},"body":{"entities/Example.html":{}}}],["src/example/entities/example.entity.ts:20",{"_index":610,"title":{},"body":{"entities/Example.html":{}}}],["src/example/entities/example.entity.ts:23",{"_index":609,"title":{},"body":{"entities/Example.html":{}}}],["src/example/entities/example.entity.ts:26",{"_index":605,"title":{},"body":{"entities/Example.html":{}}}],["src/example/entities/example.entity.ts:29",{"_index":604,"title":{},"body":{"entities/Example.html":{}}}],["src/example/entities/example.entity.ts:32",{"_index":614,"title":{},"body":{"entities/Example.html":{}}}],["src/example/example.controller.ts",{"_index":617,"title":{},"body":{"controllers/ExampleController.html":{},"coverage.html":{}}}],["src/example/example.controller.ts:26",{"_index":621,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/example/example.controller.ts:33",{"_index":627,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/example/example.controller.ts:38",{"_index":622,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/example/example.controller.ts:44",{"_index":625,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/example/example.controller.ts:49",{"_index":633,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/example/example.controller.ts:57",{"_index":629,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/example/example.module.ts",{"_index":655,"title":{},"body":{"modules/ExampleModule.html":{}}}],["src/example/example.service.ts",{"_index":680,"title":{},"body":{"injectables/ExampleService.html":{},"coverage.html":{}}}],["src/example/example.service.ts:12",{"_index":683,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/example/example.service.ts:20",{"_index":688,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/example/example.service.ts:24",{"_index":685,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/example/example.service.ts:33",{"_index":686,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/example/example.service.ts:37",{"_index":687,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/example/example.service.ts:41",{"_index":690,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/example/example.service.ts:54",{"_index":689,"title":{},"body":{"injectables/ExampleService.html":{}}}],["src/main.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":572,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":956,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":718,"title":{},"body":{"entities/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:16",{"_index":723,"title":{},"body":{"entities/Order.html":{}}}],["src/order/entities/order.entity.ts:23",{"_index":724,"title":{},"body":{"entities/Order.html":{}}}],["src/order/entities/order.entity.ts:31",{"_index":728,"title":{},"body":{"entities/Order.html":{}}}],["src/order/entities/order.entity.ts:34",{"_index":726,"title":{},"body":{"entities/Order.html":{}}}],["src/order/entities/order.entity.ts:38",{"_index":722,"title":{},"body":{"entities/Order.html":{}}}],["src/order/entities/order.entity.ts:42",{"_index":730,"title":{},"body":{"entities/Order.html":{}}}],["src/order/order.controller.ts",{"_index":737,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:11",{"_index":739,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:16",{"_index":740,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:21",{"_index":741,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:26",{"_index":744,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:31",{"_index":742,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":756,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":758,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":760,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:15",{"_index":761,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:19",{"_index":763,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:23",{"_index":762,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:7",{"_index":759,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/payment",{"_index":578,"title":{},"body":{"classes/CreatePaymentTypeDto.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"classes/UpdatePaymentTypeDto.html":{},"coverage.html":{}}}],["src/payment/dto/create",{"_index":575,"title":{},"body":{"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/dto/update",{"_index":958,"title":{},"body":{"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/entities/payment.entity.ts",{"_index":764,"title":{},"body":{"entities/Payment.html":{},"coverage.html":{}}}],["src/payment/entities/payment.entity.ts:14",{"_index":773,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:17",{"_index":784,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:24",{"_index":780,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:27",{"_index":772,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:34",{"_index":775,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:41",{"_index":778,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:48",{"_index":783,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:51",{"_index":771,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/entities/payment.entity.ts:54",{"_index":786,"title":{},"body":{"entities/Payment.html":{}}}],["src/payment/payment.controller.ts",{"_index":792,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts:11",{"_index":794,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:16",{"_index":795,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:21",{"_index":796,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:26",{"_index":799,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:31",{"_index":797,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.module.ts",{"_index":811,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/payment/payment.service.ts",{"_index":813,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/payment/payment.service.ts:11",{"_index":815,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:15",{"_index":816,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:19",{"_index":818,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:23",{"_index":817,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:7",{"_index":814,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/product",{"_index":582,"title":{},"body":{"classes/CreateProductCategoryDto.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"modules/ProductCategoryModule.html":{},"injectables/ProductCategoryService.html":{},"classes/UpdateProductCategoryDto.html":{},"coverage.html":{}}}],["src/product/dto/create",{"_index":586,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":964,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts",{"_index":854,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:15",{"_index":863,"title":{},"body":{"entities/Product.html":{}}}],["src/product/entities/product.entity.ts:18",{"_index":867,"title":{},"body":{"entities/Product.html":{}}}],["src/product/entities/product.entity.ts:21",{"_index":862,"title":{},"body":{"entities/Product.html":{}}}],["src/product/entities/product.entity.ts:28",{"_index":866,"title":{},"body":{"entities/Product.html":{}}}],["src/product/entities/product.entity.ts:31",{"_index":868,"title":{},"body":{"entities/Product.html":{}}}],["src/product/entities/product.entity.ts:38",{"_index":860,"title":{},"body":{"entities/Product.html":{}}}],["src/product/product.controller.ts",{"_index":912,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:11",{"_index":914,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:16",{"_index":915,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:21",{"_index":916,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:26",{"_index":919,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:31",{"_index":917,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":930,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":932,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:11",{"_index":934,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:15",{"_index":935,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:19",{"_index":937,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:23",{"_index":936,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:7",{"_index":933,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/subscriber/**/*.ts",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/subscriber/**/*{.ts,.js",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/user",{"_index":1016,"title":{},"body":{"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":588,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":967,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":969,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:102",{"_index":998,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:105",{"_index":994,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:108",{"_index":1000,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:111",{"_index":1003,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:34",{"_index":991,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":1001,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":978,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:48",{"_index":996,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:53",{"_index":979,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:58",{"_index":992,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:65",{"_index":985,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:72",{"_index":981,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:79",{"_index":983,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:86",{"_index":989,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:93",{"_index":987,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:96",{"_index":997,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:99",{"_index":975,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":1041,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:26",{"_index":1047,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:31",{"_index":1048,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:36",{"_index":1050,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:41",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:47",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1073,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:12",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:37",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:42",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:54",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1249,"title":{},"body":{"index.html":{}}}],["started",{"_index":1235,"title":{"index.html":{}},"body":{}}],["state_province",{"_index":98,"title":{},"body":{"entities/Address.html":{}}}],["statements",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["stateprovince",{"_index":73,"title":{},"body":{"entities/Address.html":{}}}],["strategies/accesstoken.strategy",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/refreshtoken.strategy",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":45,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":49,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["stripe_id",{"_index":779,"title":{},"body":{"entities/Payment.html":{}}}],["stripeid",{"_index":768,"title":{},"body":{"entities/Payment.html":{}}}],["sub",{"_index":48,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/AuthService.html":{}}}],["subscribers",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successful",{"_index":695,"title":{},"body":{"injectables/ExampleService.html":{}}}],["super",{"_index":54,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["support",{"_index":1260,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1261,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1174,"title":{},"body":{"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":1248,"title":{},"body":{"index.html":{}}}],["template",{"_index":1242,"title":{},"body":{"index.html":{}}}],["test",{"_index":1106,"title":{},"body":{"classes/UserSeeder.html":{}}}],["test@one.com",{"_index":1115,"title":{},"body":{"classes/UserSeeder.html":{}}}],["testboolean",{"_index":556,"title":{},"body":{"classes/CreateExampleDto.html":{}}}],["testing",{"_index":1256,"title":{},"body":{"index.html":{}}}],["testnumber",{"_index":557,"title":{},"body":{"classes/CreateExampleDto.html":{},"entities/Example.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["testone",{"_index":1112,"title":{},"body":{"classes/UserSeeder.html":{}}}],["teststring",{"_index":558,"title":{},"body":{"classes/CreateExampleDto.html":{},"entities/Example.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["testuser",{"_index":1107,"title":{},"body":{"classes/UserSeeder.html":{}}}],["testuser.email",{"_index":1114,"title":{},"body":{"classes/UserSeeder.html":{}}}],["testuser.firstname",{"_index":1108,"title":{},"body":{"classes/UserSeeder.html":{}}}],["testuser.lastname",{"_index":1109,"title":{},"body":{"classes/UserSeeder.html":{}}}],["testuser.password",{"_index":1113,"title":{},"body":{"classes/UserSeeder.html":{}}}],["testuser.username",{"_index":1111,"title":{},"body":{"classes/UserSeeder.html":{}}}],["theuser",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["this.addressservice.create(createaddressdto",{"_index":150,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findall",{"_index":151,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findone(+id",{"_index":153,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.remove(+id",{"_index":157,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.update(+id",{"_index":155,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.appservice.gethello",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.body",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.logout(req.user['sub",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(userid",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(createuserdto",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cartitemservice.create(createcartitemdto",{"_index":520,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartitemservice.findall",{"_index":521,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartitemservice.findone(+id",{"_index":522,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartitemservice.remove(+id",{"_index":524,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartitemservice.update(+id",{"_index":523,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartservice.create(createcartdto",{"_index":468,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findall",{"_index":469,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findone(+id",{"_index":470,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.remove(+id",{"_index":472,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.update(+id",{"_index":471,"title":{},"body":{"controllers/CartController.html":{}}}],["this.configservice.get('jwt_refresh_secret",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.examplerepository.create(createexampledto",{"_index":697,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.examplerepository.find",{"_index":702,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.examplerepository.findonebyid(id",{"_index":703,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.examplerepository.remove(todelete",{"_index":717,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.examplerepository.save(example",{"_index":714,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.examplerepository.save(newexample",{"_index":701,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.exampleservice.create(createexampledto",{"_index":644,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.exampleservice.findall",{"_index":647,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.exampleservice.findonebyid(id",{"_index":649,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.exampleservice.getprotected",{"_index":646,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.exampleservice.remove(id",{"_index":652,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.exampleservice.update(id",{"_index":651,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.findbyid(id",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findonebyid(id",{"_index":704,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.gettokens(newuser.id",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettokens(user.id",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashdata(refreshtoken",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":277,"title":{},"body":{"injectables/AppService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["this.logger.log",{"_index":698,"title":{},"body":{"injectables/ExampleService.html":{}}}],["this.logger.log('gethello",{"_index":278,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.log(`exampleservice",{"_index":713,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["this.logger.log(`userservice",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["this.orderservice.create(createorderdto",{"_index":749,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":750,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(+id",{"_index":751,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(+id",{"_index":753,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(+id",{"_index":752,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.password",{"_index":1013,"title":{},"body":{"entities/User.html":{}}}],["this.paymentservice.create(createpaymentdto",{"_index":804,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findall",{"_index":805,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findone(+id",{"_index":806,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.remove(+id",{"_index":808,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.update(+id",{"_index":807,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymenttypeservice.create(createpaymenttypedto",{"_index":831,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["this.paymenttypeservice.findall",{"_index":832,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["this.paymenttypeservice.findone(+id",{"_index":833,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["this.paymenttypeservice.remove(+id",{"_index":835,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["this.paymenttypeservice.update(+id",{"_index":834,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["this.productcategoryservice.create(createproductcategorydto",{"_index":896,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.findall",{"_index":897,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.findone(+id",{"_index":898,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.remove(+id",{"_index":900,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productcategoryservice.update(+id",{"_index":899,"title":{},"body":{"controllers/ProductCategoryController.html":{}}}],["this.productservice.create(createproductdto",{"_index":923,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":924,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(+id",{"_index":925,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(+id",{"_index":927,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(+id",{"_index":926,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.updaterefreshtoken(newuser.id",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updaterefreshtoken(user.id",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.create(createuserdto",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.remove(todelete",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyid(userid",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyusername",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyusername(data.username",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(userid",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1062,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findall",{"_index":1063,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findbyid(id",{"_index":1065,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findbyusername(username",{"_index":1067,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.remove(id",{"_index":1069,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.update(id",{"_index":1068,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["timestamp",{"_index":1225,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["todelete",{"_index":715,"title":{},"body":{"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["todo",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"entities/User.html":{}}}],["token",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["tokens",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens.refreshtoken",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["total_price",{"_index":727,"title":{},"body":{"entities/Order.html":{}}}],["totalprice",{"_index":720,"title":{},"body":{"entities/Order.html":{}}}],["transaction_status",{"_index":781,"title":{},"body":{"entities/Payment.html":{}}}],["transactionstatus",{"_index":769,"title":{},"body":{"entities/Payment.html":{}}}],["transformer",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["triggered",{"_index":279,"title":{},"body":{"injectables/AppService.html":{}}}],["trim",{"_index":946,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["true",{"_index":83,"title":{},"body":{"entities/Address.html":{},"modules/AppModule.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Example.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/variables.html":{}}}],["true})@isstring",{"_index":977,"title":{},"body":{"entities/User.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"controllers/CartController.html":{},"entities/CartItem.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"controllers/ExampleController.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"entities/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserController.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.controller",{"_index":839,"title":{},"body":{"modules/PaymentTypeModule.html":{}}}],["type.controller.ts",{"_index":820,"title":{},"body":{"controllers/PaymentTypeController.html":{},"coverage.html":{}}}],["type.controller.ts:11",{"_index":822,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["type.controller.ts:16",{"_index":823,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["type.controller.ts:21",{"_index":824,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["type.controller.ts:26",{"_index":827,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["type.controller.ts:31",{"_index":825,"title":{},"body":{"controllers/PaymentTypeController.html":{}}}],["type.dto",{"_index":830,"title":{},"body":{"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"classes/UpdatePaymentTypeDto.html":{}}}],["type.dto.ts",{"_index":580,"title":{},"body":{"classes/CreatePaymentTypeDto.html":{},"classes/UpdatePaymentTypeDto.html":{},"coverage.html":{}}}],["type.module",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["type.module.ts",{"_index":838,"title":{},"body":{"modules/PaymentTypeModule.html":{}}}],["type.service",{"_index":829,"title":{},"body":{"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{}}}],["type.service.ts",{"_index":840,"title":{},"body":{"injectables/PaymentTypeService.html":{},"coverage.html":{}}}],["type.service.ts:11",{"_index":842,"title":{},"body":{"injectables/PaymentTypeService.html":{}}}],["type.service.ts:15",{"_index":843,"title":{},"body":{"injectables/PaymentTypeService.html":{}}}],["type.service.ts:19",{"_index":845,"title":{},"body":{"injectables/PaymentTypeService.html":{}}}],["type.service.ts:23",{"_index":844,"title":{},"body":{"injectables/PaymentTypeService.html":{}}}],["type.service.ts:7",{"_index":841,"title":{},"body":{"injectables/PaymentTypeService.html":{}}}],["type/dto/create",{"_index":579,"title":{},"body":{"classes/CreatePaymentTypeDto.html":{},"coverage.html":{}}}],["type/dto/update",{"_index":960,"title":{},"body":{"classes/UpdatePaymentTypeDto.html":{},"coverage.html":{}}}],["type/entities/product",{"_index":848,"title":{},"body":{"entities/PaymentTypes.html":{},"coverage.html":{}}}],["type/payment",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"controllers/PaymentTypeController.html":{},"modules/PaymentTypeModule.html":{},"injectables/PaymentTypeService.html":{},"coverage.html":{}}}],["typealiases",{"_index":1277,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":106,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Example.html":{},"classes/ExampleSeeder.html":{},"injectables/ExampleService.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"dependencies.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["typeormmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([example",{"_index":658,"title":{},"body":{"modules/ExampleModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1077,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["unique",{"_index":110,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/CartItem.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["unknown",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExampleService.html":{},"injectables/UserService.html":{}}}],["up",{"_index":1213,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["up(queryrunner",{"_index":1219,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["update",{"_index":123,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":154,"title":{},"body":{"controllers/AddressController.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaymentTypeController.html":{},"controllers/ProductCategoryController.html":{},"controllers/ProductController.html":{}}}],["update(id",{"_index":135,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/CartController.html":{},"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateaddressdto",{"_index":136,"title":{"classes/UpdateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["updatecartdto",{"_index":462,"title":{"classes/UpdateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["updatecartitemdto",{"_index":515,"title":{"classes/UpdateCartItemDto.html":{}},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"classes/UpdateCartItemDto.html":{},"coverage.html":{}}}],["updated",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["updated_at",{"_index":601,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["updatedatecolumn",{"_index":613,"title":{},"body":{"entities/Example.html":{},"entities/User.html":{}}}],["updateexampledto",{"_index":631,"title":{"classes/UpdateExampleDto.html":{}},"body":{"controllers/ExampleController.html":{},"injectables/ExampleService.html":{},"classes/UpdateExampleDto.html":{},"coverage.html":{}}}],["updateexampledto.description",{"_index":712,"title":{},"body":{"injectables/ExampleService.html":{}}}],["updateexampledto.isactive",{"_index":710,"title":{},"body":{"injectables/ExampleService.html":{}}}],["updateexampledto.testnumber",{"_index":708,"title":{},"body":{"injectables/ExampleService.html":{}}}],["updateexampledto.teststring",{"_index":706,"title":{},"body":{"injectables/ExampleService.html":{}}}],["updateorderdto",{"_index":743,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updatepaymentdto",{"_index":798,"title":{"classes/UpdatePaymentDto.html":{}},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["updatepaymenttypedto",{"_index":826,"title":{"classes/UpdatePaymentTypeDto.html":{}},"body":{"controllers/PaymentTypeController.html":{},"injectables/PaymentTypeService.html":{},"classes/UpdatePaymentTypeDto.html":{},"coverage.html":{}}}],["updateproductcategorydto",{"_index":890,"title":{"classes/UpdateProductCategoryDto.html":{}},"body":{"controllers/ProductCategoryController.html":{},"injectables/ProductCategoryService.html":{},"classes/UpdateProductCategoryDto.html":{},"coverage.html":{}}}],["updateproductdto",{"_index":918,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updaterefreshtoken",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["updaterefreshtoken(userid",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":179,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CartItemService.html":{},"injectables/CartService.html":{},"injectables/ExampleService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaymentTypeService.html":{},"injectables/ProductCategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["updatetestdto",{"_index":630,"title":{},"body":{"controllers/ExampleController.html":{}}}],["updateuserdto",{"_index":966,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uq_78a916df40e02a9deb1c4b75edb",{"_index":1230,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["uq_e12875dfb3b1d92d7d7c5377e22",{"_index":1231,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["use",{"_index":1253,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExampleController.html":{},"controllers/UserController.html":{}}}],["useguards(accesstokenguard)@delete('/id/:id",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(accesstokenguard)@get('logout",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(accesstokenguard)@get('protected')@apibearerauth('bearerauth",{"_index":626,"title":{},"body":{"controllers/ExampleController.html":{}}}],["useguards(accesstokenguard)@patch('/id/:id",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":205,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(refreshtokenguard",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(refreshtokenguard)@get('refresh",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":107,"title":{"entities/User.html":{}},"body":{"entities/Address.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"entities/UserPayment.html":{},"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["user.controller",{"_index":1076,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":589,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":594,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":597,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":592,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":595,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":596,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":593,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.order",{"_index":735,"title":{},"body":{"entities/Order.html":{}}}],["user.order)@joincolumn(['undefined",{"_index":729,"title":{},"body":{"entities/Order.html":{}}}],["user.refreshtoken",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1058,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.useraddress",{"_index":1031,"title":{},"body":{"entities/UserAddress.html":{}}}],["user.useraddress)@joincolumn(['undefined",{"_index":1024,"title":{},"body":{"entities/UserAddress.html":{}}}],["user.username",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userpayment",{"_index":1090,"title":{},"body":{"entities/UserPayment.html":{}}}],["user.userpayment)@joincolumn(['undefined",{"_index":1083,"title":{},"body":{"entities/UserPayment.html":{}}}],["user/dto/create",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/entities/user.entity",{"_index":731,"title":{},"body":{"entities/Order.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{},"classes/UserSeeder.html":{}}}],["user/user.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":447,"title":{},"body":{"entities/Cart.html":{},"entities/Order.html":{},"entities/Payment.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["useraddress",{"_index":74,"title":{"entities/UserAddress.html":{}},"body":{"entities/Address.html":{},"entities/User.html":{},"entities/UserAddress.html":{},"coverage.html":{}}}],["useraddress.address",{"_index":101,"title":{},"body":{"entities/Address.html":{}}}],["useraddress.user",{"_index":999,"title":{},"body":{"entities/User.html":{}}}],["useraddresscontroller",{"_index":1032,"title":{"controllers/UserAddressController.html":{}},"body":{"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"coverage.html":{}}}],["useraddressmodule",{"_index":225,"title":{"modules/UserAddressModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserAddressModule.html":{},"modules.html":{},"overview.html":{}}}],["useraddressservice",{"_index":1034,"title":{"injectables/UserAddressService.html":{}},"body":{"controllers/UserAddressController.html":{},"modules/UserAddressModule.html":{},"injectables/UserAddressService.html":{},"coverage.html":{},"overview.html":{}}}],["usercontroller",{"_index":1040,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userexists",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["userfactory",{"_index":1102,"title":{},"body":{"classes/UserSeeder.html":{}}}],["userfactory.savemany(numrecords",{"_index":1117,"title":{},"body":{"classes/UserSeeder.html":{}}}],["userid",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Cart.html":{},"entities/Payment.html":{},"entities/UserAddress.html":{},"entities/UserPayment.html":{}}}],["usermodule",{"_index":226,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":50,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/generateStarterTables1677818653265.html":{},"miscellaneous/variables.html":{}}}],["userpayment",{"_index":770,"title":{"entities/UserPayment.html":{}},"body":{"entities/Payment.html":{},"entities/User.html":{},"entities/UserPayment.html":{},"coverage.html":{}}}],["userpayment.payment",{"_index":785,"title":{},"body":{"entities/Payment.html":{}}}],["userpayment.user",{"_index":1002,"title":{},"body":{"entities/User.html":{}}}],["userpaymentcontroller",{"_index":1091,"title":{"controllers/UserPaymentController.html":{}},"body":{"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"coverage.html":{}}}],["userpaymentmodule",{"_index":227,"title":{"modules/UserPaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserPaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["userpaymentservice",{"_index":1093,"title":{"injectables/UserPaymentService.html":{}},"body":{"controllers/UserPaymentController.html":{},"modules/UserPaymentModule.html":{},"injectables/UserPaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["userpaymentsservice",{"_index":1094,"title":{},"body":{"controllers/UserPaymentController.html":{}}}],["userrepository",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1042,"title":{},"body":{"controllers/UserController.html":{}}}],["userseeder",{"_index":1099,"title":{"classes/UserSeeder.html":{}},"body":{"classes/UserSeeder.html":{},"coverage.html":{}}}],["userservice",{"_index":363,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["usersservice",{"_index":1061,"title":{},"body":{"controllers/UserController.html":{}}}],["uuid",{"_index":1222,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["uuid_generate_v4",{"_index":1223,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{}}}],["validate",{"_index":27,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(payload",{"_index":37,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["validate(req",{"_index":941,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["validator",{"_index":343,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExampleDto.html":{},"classes/CreateUserDto.html":{},"entities/Example.html":{},"entities/User.html":{},"dependencies.html":{}}}],["value",{"_index":1214,"title":{},"body":{"classes/generateStarterTables1677818653265.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1281,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":77,"title":{},"body":{"entities/Address.html":{},"entities/Cart.html":{},"entities/Payment.html":{},"entities/PaymentTypes.html":{},"entities/Product.html":{},"entities/ProductCategory.html":{},"entities/User.html":{},"classes/generateStarterTables1677818653265.html":{}}}],["version",{"_index":1268,"title":{},"body":{"properties.html":{}}}],["void",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["world",{"_index":281,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":164,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartItemModule.html":{},"modules/CartModule.html":{},"modules/ExampleModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaymentTypeModule.html":{},"modules/ProductCategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserAddressModule.html":{},"modules/UserModule.html":{},"modules/UserPaymentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/accessToken.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\n// eslint-disable-next-line prettier/prettier\nexport class AccessTokenGuard extends AuthGuard('jwt') { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/accessToken.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/accessToken.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/accessToken.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\n\ntype JwtPayload = {\n  sub: string\n  username: string\n}\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_SECRET')\n    })\n  }\n\n  validate(payload: JwtPayload) {\n    return payload\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Address.html":{"url":"entities/Address.html","title":"entity - Address","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/entities/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address_1\n                            \n                            \n                                address_2\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                postalCode\n                            \n                            \n                                stateProvince\n                            \n                            \n                                userAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'address_1', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'address_2', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'city', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'country', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'first_name', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'last_name', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'postal_code', length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stateProvince\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'state_province', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserAddress[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userAddress => userAddress.address)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { UserAddress } from '../../user-address/entities/user-address'\n\n@Index('address_pkey', ['id'], { unique: true })\n@Entity('address', { schema: 'public' })\nexport class Address {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('character varying', {\n    name: 'first_name',\n    nullable: true,\n    length: 100\n  })\n  firstName: string | null\n\n  @Column('character varying', {\n    name: 'last_name',\n    nullable: true,\n    length: 100\n  })\n  lastName: string | null\n\n  @Column('character varying', { name: 'address_1', length: 100 })\n  address_1: string\n\n  @Column('character varying', {\n    name: 'address_2',\n    nullable: true,\n    length: 100\n  })\n  address_2: string | null\n\n  @Column('character varying', { name: 'city', length: 100 })\n  city: string\n\n  @Column('character varying', { name: 'state_province', length: 100 })\n  stateProvince: string\n\n  @Column('character varying', { name: 'postal_code', length: 20 })\n  postalCode: string\n\n  @Column('character varying', { name: 'country', length: 100 })\n  country: string\n\n  @OneToMany(() => UserAddress, (userAddress) => userAddress.address)\n  userAddress: UserAddress[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressController.html":{"url":"controllers/AddressController.html","title":"controller - AddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                address\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAddressDto: CreateAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/address/address.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAddressDto\n                                    \n                                                CreateAddressDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/address/address.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/address/address.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/address/address.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAddressDto: UpdateAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/address/address.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAddressDto\n                                    \n                                                UpdateAddressDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { CreateAddressDto } from './dto/create-address.dto';\nimport { UpdateAddressDto } from './dto/update-address.dto';\n\n@Controller('address')\nexport class AddressController {\n  constructor(private readonly addressService: AddressService) {}\n\n  @Post()\n  create(@Body() createAddressDto: CreateAddressDto) {\n    return this.addressService.create(createAddressDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.addressService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.addressService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAddressDto: UpdateAddressDto) {\n    return this.addressService.update(+id, updateAddressDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.addressService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressModule.html":{"url":"modules/AddressModule.html","title":"module - AddressModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_providers\n\n\n\n\nAddressService\n\nAddressService\n\n\n\nAddressModule\n\nAddressModule\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/address/address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { AddressController } from './address.controller';\n\n@Module({\n  controllers: [AddressController],\n  providers: [AddressService]\n})\nexport class AddressModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAddressDto: CreateAddressDto)\n                \n            \n\n\n            \n                \n                    Defined in src/address/address.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAddressDto\n                                    \n                                                CreateAddressDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/address/address.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/address/address.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/address/address.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAddressDto: UpdateAddressDto)\n                \n            \n\n\n            \n                \n                    Defined in src/address/address.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAddressDto\n                                    \n                                                UpdateAddressDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAddressDto } from './dto/create-address.dto';\nimport { UpdateAddressDto } from './dto/update-address.dto';\n\n@Injectable()\nexport class AddressService {\n  create(createAddressDto: CreateAddressDto) {\n    return 'This action adds a new address';\n  }\n\n  findAll() {\n    return `This action returns all address`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} address`;\n  }\n\n  update(id: number, updateAddressDto: UpdateAddressDto) {\n    return `This action updates a #${id} address`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} address`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common'\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { AppService } from './app.service'\n// import { AuthService } from './auth_prev/auth.service'\n// import { JwtAuthGuard } from './auth_prev/jwr-auth.guard'\n@ApiTags('root')\n@Controller()\nexport class AppController {\n  // constructor(private readonly appService: AppService) { }\n  // constructor(private readonly authService: AuthService, private readonly appService: AppService) { }\n  // eslint-disable-next-line prettier/prettier\n  constructor(private readonly appService: AppService) { }\n\n  //  auth implementation https://www.youtube.com/watch?v=_L225zpUK0M&list=WL&index=17\n\n  // @Post('login')\n  // login(@Request() req): any {\n  //   return this.authService.login(req.body)\n  // }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Get('protected')\n  // showUser(): object {\n  //   return { msg: 'protected' }\n  // }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartItemModule\n\nCartItemModule\n\nAppModule -->\n\nCartItemModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nAppModule -->\n\nExampleModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaymentTypeModule\n\nPaymentTypeModule\n\nAppModule -->\n\nPaymentTypeModule->AppModule\n\n\n\n\n\nProductCategoryModule\n\nProductCategoryModule\n\nAppModule -->\n\nProductCategoryModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserAddressModule\n\nUserAddressModule\n\nAppModule -->\n\nUserAddressModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserPaymentModule\n\nUserPaymentModule\n\nAppModule -->\n\nUserPaymentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CartItemModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            ExampleModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            PaymentTypeModule\n                        \n                        \n                            ProductCategoryModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserAddressModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            UserPaymentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\n\nimport { ExampleModule } from './example/example.module'\n\nimport { UserModule } from './user/user.module'\nimport { AuthModule } from './auth/auth.module'\nimport { AddressModule } from './address/address.module'\nimport { CartItemModule } from './cart-item/cart-item.module'\nimport { CartModule } from './cart/cart.module'\nimport { OrderModule } from './order/order.module'\nimport { PaymentModule } from './payment/payment.module'\nimport { PaymentTypeModule } from './payment-type/payment-type.module'\nimport { ProductCategoryModule } from './product-category/product-category.module'\nimport { ProductModule } from './product/product.module'\nimport { UserAddressModule } from './user-address/user-address.module'\nimport { UserPaymentModule } from './user-payment/user-payment.module'\n\nimport dbConfig from './config/dbConfig'\n\nconst ENV = process.env.NODE_ENV\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !ENV ? '.env' : `.env.${ENV}`,\n      load: [dbConfig]\n    }),\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (cfg: ConfigService) => cfg.get('database')\n    }),\n    ExampleModule,\n    UserModule,\n    AuthModule,\n    AddressModule,\n    CartItemModule,\n    CartModule,\n    OrderModule,\n    PaymentModule,\n    PaymentTypeModule,\n    ProductCategoryModule,\n    ProductModule,\n    UserAddressModule,\n    UserPaymentModule\n  ],\n  controllers: [AppController],\n  providers: [AppService]\n})\n// eslint-disable-next-line prettier/prettier\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ConfigService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class AppService {\n  @Inject(ConfigService)\n  public config: ConfigService\n\n  logger: Logger\n\n  constructor() {\n    this.logger = new Logger()\n  }\n\n  getHello(): string {\n    this.logger.log('getHello is triggered!')\n    return 'Hello World!'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshTokens\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(data: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Get('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \nrefreshTokens(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Get('refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { Request } from 'express'\nimport { AccessTokenGuard } from '../common/guards/accessToken.guard'\nimport { RefreshTokenGuard } from '../common/guards/refreshToken.guard'\nimport { CreateUserDto } from '../user/dto/create-user.dto'\nimport { AuthService } from './auth.service'\nimport { AuthDto } from './dto/auth.dto'\n\n// https://www.elvisduru.com/blog/nestjs-jwt-authentication-refresh-token\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  // eslint-disable-next-line prettier/prettier\n  constructor(private authService: AuthService) { }\n\n  @Post('signup')\n  signup(@Body() createUserDto: CreateUserDto) {\n    return this.authService.signUp(createUserDto)\n  }\n\n  @Post('login')\n  login(@Body() data: AuthDto) {\n    return this.authService.login(data)\n  }\n\n  @UseGuards(RefreshTokenGuard)\n  @Get('refresh')\n  refreshTokens(@Req() req: Request) {\n    // console.log('req.user: ', req.user)\n\n    const userId = req.user['sub']\n    const refreshToken = req.user['refreshToken']\n    return this.authService.refreshTokens(userId, refreshToken)\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @Get('logout')\n  logout(@Req() req: Request) {\n    this.authService.logout(req.user['sub'])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator'\nexport class AuthDto {\n  @IsString()\n  @IsNotEmpty()\n  username: string\n\n  @IsString()\n  @IsNotEmpty()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccessTokenStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // https://www.elvisduru.com/blog/nestjs-jwt-authentication-refresh-token\n\nimport { Module } from '@nestjs/common'\nimport { JwtModule } from '@nestjs/jwt'\n\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { AccessTokenStrategy } from './strategies/accessToken.strategy'\nimport { RefreshTokenStrategy } from './strategies/refreshToken.strategy'\n\nimport { UsersModule } from '../user/user.module'\n\n// https://www.elvisduru.com/blog/nestjs-jwt-authentication-refresh-token\n\n@Module({\n  // TODO: JwtModule.register options?\n  imports: [UsersModule, JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [AuthService, AccessTokenStrategy, RefreshTokenStrategy]\n})\n// eslint-disable-next-line prettier/prettier\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTokens\n                            \n                            \n                                hashData\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refreshTokens\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokens(userId: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashData\n                        \n                    \n                \n            \n            \n                \nhashData(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshTokens\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshTokens(userId: string, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  Injectable\n} from '@nestjs/common'\nimport { CreateUserDto } from '../user/dto/create-user.dto'\nimport { UserService } from '../user/user.service'\nimport * as argon2 from 'argon2'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\nimport { AuthDto } from './dto/auth.dto'\n\n// https://www.elvisduru.com/blog/nestjs-jwt-authentication-refresh-token\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n    private configService: ConfigService\n  ) { }\n  async signUp(createUserDto: CreateUserDto): Promise {\n    // Check if user exists\n    const userExists = await this.userService.findByUsername(\n      createUserDto.username\n    )\n\n    if (userExists) {\n      throw new BadRequestException('User already exists')\n    }\n\n    // Hash password in the user entity\n    const newUser = await this.userService.create(createUserDto)\n\n    const tokens = await this.getTokens(newUser.id, newUser.username)\n    await this.updateRefreshToken(newUser.id, tokens.refreshToken)\n    return tokens\n  }\n\n  async login(data: AuthDto) {\n    // Check if user exists\n    const user = await this.userService.findByUsername(data.username)\n    if (!user) throw new BadRequestException('User does not exist')\n\n    const passwordMatches = await argon2.verify(user.password, data.password)\n    if (!passwordMatches) throw new BadRequestException('Password is incorrect')\n\n    const tokens = await this.getTokens(user.id, user.username)\n    await this.updateRefreshToken(user.id, tokens.refreshToken)\n    return tokens\n  }\n\n  async logout(userId: string) {\n    return this.userService.update(userId, { refreshToken: null })\n  }\n\n  hashData(data: string) {\n    return argon2.hash(data)\n  }\n\n  async updateRefreshToken(userId: string, refreshToken: string) {\n    const hashedRefreshToken = await this.hashData(refreshToken)\n    await this.userService.update(userId, {\n      refreshToken: hashedRefreshToken\n    })\n  }\n\n  async getTokens(userId: string, username: string) {\n    const [accessToken, refreshToken] = await Promise.all([\n      this.jwtService.signAsync(\n        {\n          sub: userId,\n          username\n        },\n        {\n          secret: this.configService.get('JWT_SECRET'),\n          expiresIn: '15m'\n        }\n      ),\n      this.jwtService.signAsync(\n        {\n          sub: userId,\n          username\n        },\n        {\n          secret: this.configService.get('JWT_REFRESH_SECRET'),\n          expiresIn: '7d'\n        }\n      )\n    ])\n\n    return {\n      accessToken,\n      refreshToken\n    }\n  }\n\n  async refreshTokens(userId: string, refreshToken: string) {\n    const user = await this.userService.findById(userId)\n    if (!user || !user.refreshToken)\n      throw new ForbiddenException('Access Denied')\n\n    const refreshTokenMatches = await argon2.verify(\n      user.refreshToken,\n      refreshToken\n    )\n\n    if (!refreshTokenMatches) throw new ForbiddenException('Access Denied')\n    const tokens = await this.getTokens(user.id, user.username)\n    await this.updateRefreshToken(user.id, tokens.refreshToken)\n\n    return tokens\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cart.html":{"url":"entities/Cart.html","title":"entity - Cart","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItem\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                order\n                            \n                            \n                                orderDate\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cartItem => cartItem.cart)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'name', nullable: true, length: 150})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, order => order.cart)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('date', {name: 'order_date', nullable: true, default: () => CURRENT_DATE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/entities/cart.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { CartItem } from '../../cart-item/entities/cart-item.entity'\nimport { Order } from '../../order/entities/order.entity'\n\n@Index('cart_pkey', ['id'], { unique: true })\n@Entity('cart', { schema: 'public' })\nexport class Cart {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('integer', { name: 'user_id' })\n  userId: number\n\n  @Column('character varying', { name: 'name', nullable: true, length: 150 })\n  name: string | null\n\n  @Column('date', {\n    name: 'order_date',\n    nullable: true,\n    default: () => 'CURRENT_DATE'\n  })\n  orderDate: string | null\n\n  @OneToMany(() => CartItem, (cartItem) => cartItem.cart)\n  cartItem: CartItem[]\n\n  @OneToMany(() => Order, (order) => order.cart)\n  order: Order[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCartDto: CreateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCartDto\n                                    \n                                                CreateCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCartDto: UpdateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCartDto\n                                    \n                                                UpdateCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { UpdateCartDto } from './dto/update-cart.dto';\n\n@Controller('cart')\nexport class CartController {\n  constructor(private readonly cartService: CartService) {}\n\n  @Post()\n  create(@Body() createCartDto: CreateCartDto) {\n    return this.cartService.create(createCartDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.cartService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.cartService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCartDto: UpdateCartDto) {\n    return this.cartService.update(+id, updateCartDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.cartService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CartItem.html":{"url":"entities/CartItem.html","title":"entity - CartItem","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart-item/entities/cart-item.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                cartId\n                            \n                            \n                                lineItemTotalPrice\n                            \n                            \n                                productId\n                            \n                            \n                                productPrice\n                            \n                            \n                                productQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cart => cart.cartItem)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart-item/entities/cart-item.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'cart_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart-item/entities/cart-item.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineItemTotalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('numeric', {name: 'line_item_total_price', precision: 6, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart-item/entities/cart-item.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'product_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart-item/entities/cart-item.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('numeric', {name: 'product_price', precision: 6, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart-item/entities/cart-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'product_quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart-item/entities/cart-item.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, JoinColumn, ManyToOne } from 'typeorm'\nimport { Cart } from '../../cart/entities/cart.entity'\n\n@Index('cart-item_pkey', ['cartId', 'productId'], { unique: true })\n@Entity('cart-item', { schema: 'public' })\nexport class CartItem {\n  @Column('integer', { primary: true, name: 'cart_id' })\n  cartId: number\n\n  @Column('integer', { primary: true, name: 'product_id' })\n  productId: number\n\n  @Column('integer', { name: 'product_quantity' })\n  productQuantity: number\n\n  @Column('numeric', { name: 'product_price', precision: 6, scale: 2 })\n  productPrice: string\n\n  @Column('numeric', { name: 'line_item_total_price', precision: 6, scale: 2 })\n  lineItemTotalPrice: string\n\n  @ManyToOne(() => Cart, (cart) => cart.cartItem)\n  @JoinColumn([{ name: 'cart_id', referencedColumnName: 'id' }])\n  cart: Cart\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartItemController.html":{"url":"controllers/CartItemController.html","title":"controller - CartItemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartItemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart-item/cart-item.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart-item\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCartItemDto: CreateCartItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cart-item/cart-item.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCartItemDto\n                                    \n                                                CreateCartItemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cart-item/cart-item.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart-item/cart-item.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart-item/cart-item.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCartItemDto: UpdateCartItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart-item/cart-item.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCartItemDto\n                                    \n                                                UpdateCartItemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CartItemService } from './cart-item.service';\nimport { CreateCartItemDto } from './dto/create-cart-item.dto';\nimport { UpdateCartItemDto } from './dto/update-cart-item.dto';\n\n@Controller('cart-item')\nexport class CartItemController {\n  constructor(private readonly cartItemService: CartItemService) {}\n\n  @Post()\n  create(@Body() createCartItemDto: CreateCartItemDto) {\n    return this.cartItemService.create(createCartItemDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.cartItemService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.cartItemService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCartItemDto: UpdateCartItemDto) {\n    return this.cartItemService.update(+id, updateCartItemDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.cartItemService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartItemModule.html":{"url":"modules/CartItemModule.html","title":"module - CartItemModule","body":"\n                   \n\n\n\n\n    Modules\n    CartItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartItemModule\n\n\n\ncluster_CartItemModule_providers\n\n\n\n\nCartItemService\n\nCartItemService\n\n\n\nCartItemModule\n\nCartItemModule\n\nCartItemModule -->\n\nCartItemService->CartItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart-item/cart-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartItemService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartItemController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartItemService } from './cart-item.service';\nimport { CartItemController } from './cart-item.controller';\n\n@Module({\n  controllers: [CartItemController],\n  providers: [CartItemService]\n})\nexport class CartItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartItemService.html":{"url":"injectables/CartItemService.html","title":"injectable - CartItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart-item/cart-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCartItemDto: CreateCartItemDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cart-item/cart-item.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCartItemDto\n                                    \n                                                CreateCartItemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cart-item/cart-item.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cart-item/cart-item.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cart-item/cart-item.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCartItemDto: UpdateCartItemDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cart-item/cart-item.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCartItemDto\n                                    \n                                                UpdateCartItemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCartItemDto } from './dto/create-cart-item.dto';\nimport { UpdateCartItemDto } from './dto/update-cart-item.dto';\n\n@Injectable()\nexport class CartItemService {\n  create(createCartItemDto: CreateCartItemDto) {\n    return 'This action adds a new cartItem';\n  }\n\n  findAll() {\n    return `This action returns all cartItem`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} cartItem`;\n  }\n\n  update(id: number, updateCartItemDto: UpdateCartItemDto) {\n    return `This action updates a #${id} cartItem`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} cartItem`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCartService\n\nCartService\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CartController } from './cart.controller';\n\n@Module({\n  controllers: [CartController],\n  providers: [CartService]\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCartDto: CreateCartDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCartDto\n                                    \n                                                CreateCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCartDto: UpdateCartDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCartDto\n                                    \n                                                UpdateCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { UpdateCartDto } from './dto/update-cart.dto';\n\n@Injectable()\nexport class CartService {\n  create(createCartDto: CreateCartDto) {\n    return 'This action adds a new cart';\n  }\n\n  findAll() {\n    return `This action returns all cart`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} cart`;\n  }\n\n  update(id: number, updateCartDto: UpdateCartDto) {\n    return `This action updates a #${id} cart`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} cart`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDto.html":{"url":"classes/CreateAddressDto.html","title":"class - CreateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/dto/create-address.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAddressDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartDto.html":{"url":"classes/CreateCartDto.html","title":"class - CreateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/create-cart.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCartDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartItemDto.html":{"url":"classes/CreateCartItemDto.html","title":"class - CreateCartItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart-item/dto/create-cart-item.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCartItemDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExampleDto.html":{"url":"classes/CreateExampleDto.html","title":"class - CreateExampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/example/dto/create-example.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                isActive\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                testBoolean\n                            \n                            \n                                    Optional\n                                testNumber\n                            \n                            \n                                    Optional\n                                testString\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        testBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        testNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        testString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/dto/create-example.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  IsUUID\n} from 'class-validator'\n\nexport class CreateExampleDto {\n  @IsUUID()\n  @IsNotEmpty()\n  id: string\n\n  @IsString()\n  testString?: string\n\n  @IsNumber()\n  testNumber?: number\n\n  @IsBoolean()\n  testBoolean?: boolean\n\n  @IsBoolean()\n  isActive?: boolean\n\n  @IsString()\n  name?: string\n\n  @IsString()\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOrderDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/create-payment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePaymentDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentTypeDto.html":{"url":"classes/CreatePaymentTypeDto.html","title":"class - CreatePaymentTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment-type/dto/create-payment-type.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePaymentTypeDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductCategoryDto.html":{"url":"classes/CreateProductCategoryDto.html","title":"class - CreateProductCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-category/dto/create-product-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProductCategoryDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProductDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                refreshToken\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, IsUUID } from 'class-validator'\n\nexport class CreateUserDto {\n  @IsUUID()\n  @IsNotEmpty()\n  id: string\n\n  @IsString()\n  @IsNotEmpty()\n  name: string\n\n  @IsString()\n  @IsNotEmpty()\n  username: string\n\n  @IsEmail()\n  email: string\n\n  @IsString()\n  @IsNotEmpty()\n  password: string\n\n  @IsString()\n  refreshToken: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Example.html":{"url":"entities/Example.html","title":"entity - Example","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Example\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/example/entities/example.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                testNumber\n                            \n                            \n                                testString\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/example/entities/example.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { IsUUID } from 'class-validator'\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn\n} from 'typeorm'\n\n@Entity()\nexport class Example {\n  @PrimaryGeneratedColumn('uuid')\n  @IsUUID()\n  id: string\n\n  @Column({ nullable: true })\n  testString: string\n\n  @Column()\n  testNumber: number\n\n  @Column({ default: true })\n  isActive: boolean\n\n  @Column()\n  description: string\n\n  @CreateDateColumn()\n  created_at: Date\n\n  @UpdateDateColumn()\n  updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExampleController.html":{"url":"controllers/ExampleController.html","title":"controller - ExampleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/example/example.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                example\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOneById\n                            \n                            \n                                getProtected\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createExampleDto: CreateExampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/example/example.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExampleDto\n                                    \n                                                CreateExampleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/example/example.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/id/:id')\n                \n            \n\n            \n                \n                    Defined in src/example/example.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProtected\n                        \n                    \n                \n            \n            \n                \ngetProtected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Get('protected')@ApiBearerAuth('bearerAuth')\n                \n            \n\n            \n                \n                    Defined in src/example/example.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/id/:id')\n                \n            \n\n            \n                \n                    Defined in src/example/example.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTestDto: UpdateExampleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/id/:id')\n                \n            \n\n            \n                \n                    Defined in src/example/example.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTestDto\n                                    \n                                                UpdateExampleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseUUIDPipe,\n  UseGuards\n} from '@nestjs/common'\nimport { ExampleService } from './example.service'\nimport { CreateExampleDto } from './dto/create-example.dto'\nimport { UpdateExampleDto } from './dto/update-example.dto'\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger'\nimport { AccessTokenGuard } from '../common/guards/accessToken.guard'\n\n@ApiTags('example')\n@Controller('example')\nexport class ExampleController {\n  // eslint-disable-next-line prettier/prettier\n  constructor(private readonly exampleService: ExampleService) { }\n\n  @Post()\n  // @ApiBadRequestResponse({ description: 'Error creating new example.' })\n  create(@Body() createExampleDto: CreateExampleDto) {\n    return this.exampleService.create(createExampleDto)\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @Get('protected')\n  @ApiBearerAuth('bearerAuth')\n  getProtected(): string {\n    return this.exampleService.getProtected()\n  }\n\n  @Get()\n  findAll() {\n    return this.exampleService.findAll()\n  }\n\n  @Get('/id/:id')\n  // @ApiBadRequestResponse()\n  findOneById(@Param('id', new ParseUUIDPipe()) id: string) {\n    return this.exampleService.findOneById(id)\n  }\n\n  @Patch('/id/:id')\n  update(\n    @Param('id', new ParseUUIDPipe()) id: string,\n    @Body() updateTestDto: UpdateExampleDto\n  ) {\n    return this.exampleService.update(id, updateTestDto)\n  }\n\n  @Delete('/id/:id')\n  remove(@Param('id', new ParseUUIDPipe()) id: string) {\n    return this.exampleService.remove(id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_providers\n\n\n\n\nExampleService\n\nExampleService\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nExampleService->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/example/example.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExampleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExampleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { ExampleService } from './example.service'\nimport { ExampleController } from './example.controller'\n\nimport { Example } from './entities/example.entity'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Example])],\n  controllers: [ExampleController],\n  providers: [ExampleService]\n})\nexport class ExampleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleSeeder.html":{"url":"classes/ExampleSeeder.html","title":"class - ExampleSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/seeds/example.seeder.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Seeder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run(dataSource: DataSource, factoryManager: SeederFactoryManager)\n                \n            \n\n\n            \n                \n                    Defined in src/db/seeds/example.seeder.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataSource\n                                    \n                                            DataSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    factoryManager\n                                    \n                                            SeederFactoryManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Seeder, SeederFactoryManager } from 'typeorm-extension'\nimport { DataSource } from 'typeorm'\nimport { Example } from '../../example/entities/example.entity'\n\nexport default class ExampleSeeder implements Seeder {\n  public async run(\n    dataSource: DataSource,\n    factoryManager: SeederFactoryManager\n  ): Promise {\n    const exampleFactory = await factoryManager.get(Example)\n    const numRecords = 5\n\n    // save numRecords factory generated entities, to the database\n    await exampleFactory.saveMany(numRecords)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExampleService.html":{"url":"injectables/ExampleService.html","title":"injectable - ExampleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/example/example.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOneById\n                            \n                            \n                                getProtected\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(exampleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/example/example.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        exampleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createExampleDto: CreateExampleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/example/example.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExampleDto\n                                    \n                                                CreateExampleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/example/example.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneById\n                        \n                    \n                \n            \n            \n                \nfindOneById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/example/example.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProtected\n                        \n                    \n                \n            \n            \n                \ngetProtected()\n                \n            \n\n\n            \n                \n                    Defined in src/example/example.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/example/example.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateExampleDto: UpdateExampleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/example/example.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExampleDto\n                                    \n                                                UpdateExampleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/example/example.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from 'typeorm'\n\nimport { CreateExampleDto } from './dto/create-example.dto'\nimport { UpdateExampleDto } from './dto/update-example.dto'\n\nimport { Example } from './entities/example.entity'\n\n@Injectable()\nexport class ExampleService {\n  logger: Logger\n\n  constructor(\n    @InjectRepository(Example) private exampleRepository: Repository\n  ) {\n    this.logger = new Logger()\n  }\n\n  getProtected(): string {\n    return 'This is a protected resource. If you see this, authentication was successful.'\n  }\n\n  create(createExampleDto: CreateExampleDto) {\n    const newExample = this.exampleRepository.create(createExampleDto)\n\n    this.logger.log(\n      `ExampleService created a new Example: ${newExample.testString}`\n    )\n    return this.exampleRepository.save(newExample)\n  }\n\n  findAll() {\n    return this.exampleRepository.find()\n  }\n\n  findOneById(id: string) {\n    return this.exampleRepository.findOneById(id)\n  }\n\n  async update(id: string, updateExampleDto: UpdateExampleDto) {\n    const example = await this.findOneById(id)\n\n    example.testString = updateExampleDto.testString\n    example.testNumber = updateExampleDto.testNumber\n    example.isActive = updateExampleDto.isActive\n    example.description = updateExampleDto.description\n\n    this.logger.log(`ExampleService updates an Example: ${id}`)\n\n    return this.exampleRepository.save(example)\n  }\n\n  async remove(id: string) {\n    const toDelete = await this.findOneById(id)\n\n    this.logger.log(`ExampleService deletes an Example: ${id}`)\n\n    return this.exampleRepository.remove(toDelete)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Order.html":{"url":"entities/Order.html","title":"entity - Order","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                id\n                            \n                            \n                                orderDate\n                            \n                            \n                                paymentId\n                            \n                            \n                                totalPrice\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cart => cart.order)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('date', {name: 'order_date', nullable: true, default: () => CURRENT_DATE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'payment_id', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('numeric', {name: 'total_price', nullable: true, precision: 6, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.order)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { Cart } from '../../cart/entities/cart.entity'\nimport { User } from '../../user/entities/user.entity'\n\n@Index('order_pkey', ['id'], { unique: true })\n@Entity('order', { schema: 'public' })\nexport class Order {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('date', {\n    name: 'order_date',\n    nullable: true,\n    default: () => 'CURRENT_DATE'\n  })\n  orderDate: string | null\n\n  @Column('numeric', {\n    name: 'total_price',\n    nullable: true,\n    precision: 6,\n    scale: 2\n  })\n  totalPrice: string | null\n\n  @Column('integer', { name: 'payment_id', nullable: true })\n  paymentId: number | null\n\n  @ManyToOne(() => Cart, (cart) => cart.order)\n  @JoinColumn([{ name: 'cart_id', referencedColumnName: 'id' }])\n  cart: Cart\n\n  @ManyToOne(() => User, (user) => user.order)\n  @JoinColumn([{ name: 'user_id', referencedColumnName: 'id' }])\n  user: User\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateOrderDto: UpdateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { UpdateOrderDto } from './dto/update-order.dto';\n\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  create(@Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(createOrderDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateOrderDto: UpdateOrderDto) {\n    return this.orderService.update(+id, updateOrderDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.orderService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\n\n@Module({\n  controllers: [OrderController],\n  providers: [OrderService]\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateOrderDto: UpdateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrderDto\n                                    \n                                                UpdateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { UpdateOrderDto } from './dto/update-order.dto';\n\n@Injectable()\nexport class OrderService {\n  create(createOrderDto: CreateOrderDto) {\n    return 'This action adds a new order';\n  }\n\n  findAll() {\n    return `This action returns all order`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} order`;\n  }\n\n  update(id: number, updateOrderDto: UpdateOrderDto) {\n    return `This action updates a #${id} order`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} order`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Payment.html":{"url":"entities/Payment.html","title":"entity - Payment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/entities/payment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                created\n                            \n                            \n                                id\n                            \n                            \n                                paymentMethod\n                            \n                            \n                                receiptUrl\n                            \n                            \n                                stripeId\n                            \n                            \n                                transactionStatus\n                            \n                            \n                                userId\n                            \n                            \n                                userPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('numeric', {name: 'amount', precision: 6, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'created', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'payment_method', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receiptUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'receipt_url', nullable: true, length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stripeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'stripe_id', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'transaction_status', nullable: true, length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPayment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserPayment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userPayment => userPayment.payment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/entities/payment.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { UserPayment } from '../../user-payment/entities/user-payment.entity'\n\n@Index('payment_pkey', ['id'], { unique: true })\n@Entity('payment', { schema: 'public' })\nexport class Payment {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('integer', { name: 'user_id' })\n  userId: number\n\n  @Column('character varying', {\n    name: 'stripe_id',\n    nullable: true,\n    length: 100\n  })\n  stripeId: string | null\n\n  @Column('integer', { name: 'created', nullable: true })\n  created: number | null\n\n  @Column('character varying', {\n    name: 'payment_method',\n    nullable: true,\n    length: 100\n  })\n  paymentMethod: string | null\n\n  @Column('character varying', {\n    name: 'receipt_url',\n    nullable: true,\n    length: 200\n  })\n  receiptUrl: string | null\n\n  @Column('character varying', {\n    name: 'transaction_status',\n    nullable: true,\n    length: 50\n  })\n  transactionStatus: string | null\n\n  @Column('numeric', { name: 'amount', precision: 6, scale: 2 })\n  amount: string\n\n  @OneToMany(() => UserPayment, (userPayment) => userPayment.payment)\n  userPayment: UserPayment[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPaymentDto: CreatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/payment/payment.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaymentDto\n                                    \n                                                CreatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/payment/payment.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/payment/payment.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/payment/payment.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePaymentDto: UpdatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/payment/payment.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaymentDto\n                                    \n                                                UpdatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\n\n@Controller('payment')\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @Post()\n  create(@Body() createPaymentDto: CreatePaymentDto) {\n    return this.paymentService.create(createPaymentDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.paymentService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.paymentService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePaymentDto: UpdatePaymentDto) {\n    return this.paymentService.update(+id, updatePaymentDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.paymentService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nPaymentService\n\nPaymentService\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { PaymentController } from './payment.controller';\n\n@Module({\n  controllers: [PaymentController],\n  providers: [PaymentService]\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPaymentDto: CreatePaymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/payment/payment.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaymentDto\n                                    \n                                                CreatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/payment/payment.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/payment/payment.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/payment/payment.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePaymentDto: UpdatePaymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/payment/payment.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaymentDto\n                                    \n                                                UpdatePaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\n\n@Injectable()\nexport class PaymentService {\n  create(createPaymentDto: CreatePaymentDto) {\n    return 'This action adds a new payment';\n  }\n\n  findAll() {\n    return `This action returns all payment`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} payment`;\n  }\n\n  update(id: number, updatePaymentDto: UpdatePaymentDto) {\n    return `This action updates a #${id} payment`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} payment`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentTypeController.html":{"url":"controllers/PaymentTypeController.html","title":"controller - PaymentTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment-type/payment-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment-type\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPaymentTypeDto: CreatePaymentTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/payment-type/payment-type.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaymentTypeDto\n                                    \n                                                CreatePaymentTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/payment-type/payment-type.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/payment-type/payment-type.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/payment-type/payment-type.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePaymentTypeDto: UpdatePaymentTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/payment-type/payment-type.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaymentTypeDto\n                                    \n                                                UpdatePaymentTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PaymentTypeService } from './payment-type.service';\nimport { CreatePaymentTypeDto } from './dto/create-payment-type.dto';\nimport { UpdatePaymentTypeDto } from './dto/update-payment-type.dto';\n\n@Controller('payment-type')\nexport class PaymentTypeController {\n  constructor(private readonly paymentTypeService: PaymentTypeService) {}\n\n  @Post()\n  create(@Body() createPaymentTypeDto: CreatePaymentTypeDto) {\n    return this.paymentTypeService.create(createPaymentTypeDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.paymentTypeService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.paymentTypeService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePaymentTypeDto: UpdatePaymentTypeDto) {\n    return this.paymentTypeService.update(+id, updatePaymentTypeDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.paymentTypeService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentTypeModule.html":{"url":"modules/PaymentTypeModule.html","title":"module - PaymentTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentTypeModule\n\n\n\ncluster_PaymentTypeModule_providers\n\n\n\n\nPaymentTypeService\n\nPaymentTypeService\n\n\n\nPaymentTypeModule\n\nPaymentTypeModule\n\nPaymentTypeModule -->\n\nPaymentTypeService->PaymentTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment-type/payment-type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentTypeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentTypeService } from './payment-type.service';\nimport { PaymentTypeController } from './payment-type.controller';\n\n@Module({\n  controllers: [PaymentTypeController],\n  providers: [PaymentTypeService]\n})\nexport class PaymentTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentTypeService.html":{"url":"injectables/PaymentTypeService.html","title":"injectable - PaymentTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment-type/payment-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPaymentTypeDto: CreatePaymentTypeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/payment-type/payment-type.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPaymentTypeDto\n                                    \n                                                CreatePaymentTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/payment-type/payment-type.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/payment-type/payment-type.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/payment-type/payment-type.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updatePaymentTypeDto: UpdatePaymentTypeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/payment-type/payment-type.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePaymentTypeDto\n                                    \n                                                UpdatePaymentTypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePaymentTypeDto } from './dto/create-payment-type.dto';\nimport { UpdatePaymentTypeDto } from './dto/update-payment-type.dto';\n\n@Injectable()\nexport class PaymentTypeService {\n  create(createPaymentTypeDto: CreatePaymentTypeDto) {\n    return 'This action adds a new paymentType';\n  }\n\n  findAll() {\n    return `This action returns all paymentType`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} paymentType`;\n  }\n\n  update(id: number, updatePaymentTypeDto: UpdatePaymentTypeDto) {\n    return `This action updates a #${id} paymentType`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} paymentType`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PaymentTypes.html":{"url":"entities/PaymentTypes.html","title":"entity - PaymentTypes","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PaymentTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment-type/entities/product-category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'description', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment-type/entities/product-category.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment-type/entities/product-category.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm'\n\n@Index('payment_types_pkey', ['id'], { unique: true })\n@Entity('payment_types', { schema: 'public' })\nexport class PaymentTypes {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('character varying', {\n    name: 'description',\n    nullable: true,\n    length: 100\n  })\n  description: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, productCategory => productCategory.product)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'description', length: 1000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'image_url', nullable: true, length: 250})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'name', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('numeric', {name: 'price', nullable: true, precision: 6, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { ProductCategory } from '../../product-category/entities/ProductCategory'\n\n@Index('product_pkey', ['id'], { unique: true })\n@Entity('product', { schema: 'public' })\nexport class Product {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('character varying', { name: 'name', length: 100 })\n  name: string\n\n  @Column('character varying', { name: 'description', length: 1000 })\n  description: string\n\n  @Column('character varying', {\n    name: 'image_url',\n    nullable: true,\n    length: 250\n  })\n  imageUrl: string | null\n\n  @Column('numeric', { name: 'price', nullable: true, precision: 6, scale: 2 })\n  price: string | null\n\n  @ManyToOne(\n    () => ProductCategory,\n    (productCategory) => productCategory.product\n  )\n  @JoinColumn([{ name: 'category_id', referencedColumnName: 'categoryId' }])\n  category: ProductCategory\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductCategory.html":{"url":"entities/ProductCategory.html","title":"entity - ProductCategory","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-category/entities/ProductCategory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                description\n                            \n                            \n                                product\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'category_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-category/entities/ProductCategory.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'description', nullable: true, length: 200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-category/entities/ProductCategory.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.category)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product-category/entities/ProductCategory.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, OneToMany } from 'typeorm'\nimport { Product } from '../../product/entities/product.entity'\n\n@Index('product_category_pkey', ['categoryId'], { unique: true })\n@Entity('product_category', { schema: 'public' })\nexport class ProductCategory {\n  @Column('integer', { primary: true, name: 'category_id' })\n  categoryId: number\n\n  @Column('character varying', {\n    name: 'description',\n    nullable: true,\n    length: 200\n  })\n  description: string | null\n\n  @OneToMany(() => Product, (product) => product.category)\n  product: Product[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductCategoryController.html":{"url":"controllers/ProductCategoryController.html","title":"controller - ProductCategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductCategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-category/product-category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product-category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductCategoryDto: CreateProductCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/product-category/product-category.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductCategoryDto\n                                    \n                                                CreateProductCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product-category/product-category.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product-category/product-category.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product-category/product-category.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductCategoryDto: UpdateProductCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product-category/product-category.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductCategoryDto\n                                    \n                                                UpdateProductCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ProductCategoryService } from './product-category.service';\nimport { CreateProductCategoryDto } from './dto/create-product-category.dto';\nimport { UpdateProductCategoryDto } from './dto/update-product-category.dto';\n\n@Controller('product-category')\nexport class ProductCategoryController {\n  constructor(private readonly productCategoryService: ProductCategoryService) {}\n\n  @Post()\n  create(@Body() createProductCategoryDto: CreateProductCategoryDto) {\n    return this.productCategoryService.create(createProductCategoryDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.productCategoryService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.productCategoryService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProductCategoryDto: UpdateProductCategoryDto) {\n    return this.productCategoryService.update(+id, updateProductCategoryDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.productCategoryService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductCategoryModule.html":{"url":"modules/ProductCategoryModule.html","title":"module - ProductCategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductCategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductCategoryModule\n\n\n\ncluster_ProductCategoryModule_providers\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\n\n\nProductCategoryModule\n\nProductCategoryModule\n\nProductCategoryModule -->\n\nProductCategoryService->ProductCategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product-category/product-category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductCategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductCategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductCategoryService } from './product-category.service';\nimport { ProductCategoryController } from './product-category.controller';\n\n@Module({\n  controllers: [ProductCategoryController],\n  providers: [ProductCategoryService]\n})\nexport class ProductCategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductCategoryService.html":{"url":"injectables/ProductCategoryService.html","title":"injectable - ProductCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-category/product-category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductCategoryDto: CreateProductCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product-category/product-category.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductCategoryDto\n                                    \n                                                CreateProductCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product-category/product-category.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product-category/product-category.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product-category/product-category.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProductCategoryDto: UpdateProductCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product-category/product-category.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductCategoryDto\n                                    \n                                                UpdateProductCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductCategoryDto } from './dto/create-product-category.dto';\nimport { UpdateProductCategoryDto } from './dto/update-product-category.dto';\n\n@Injectable()\nexport class ProductCategoryService {\n  create(createProductCategoryDto: CreateProductCategoryDto) {\n    return 'This action adds a new productCategory';\n  }\n\n  findAll() {\n    return `This action returns all productCategory`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} productCategory`;\n  }\n\n  update(id: number, updateProductCategoryDto: UpdateProductCategoryDto) {\n    return `This action updates a #${id} productCategory`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} productCategory`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\n\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(+id, updateProductDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.productService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\n\n@Module({\n  controllers: [ProductController],\n  providers: [ProductService]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProductDto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\n\n@Injectable()\nexport class ProductService {\n  create(createProductDto: CreateProductDto) {\n    return 'This action adds a new product';\n  }\n\n  findAll() {\n    return `This action returns all product`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} product`;\n  }\n\n  update(id: number, updateProductDto: UpdateProductDto) {\n    return `This action updates a #${id} product`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} product`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/refreshToken.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\n// eslint-disable-next-line prettier/prettier\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refreshToken.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refreshToken.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(req: Request, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/refreshToken.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\n\nimport { Request } from 'express'\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh'\n) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_REFRESH_SECRET'),\n      passReqToCallback: true\n    })\n  }\n\n  validate(req: Request, payload: any) {\n    const refreshToken = req.get('Authorization').replace('Bearer', '').trim()\n    return { ...payload, refreshToken }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAddressDto.html":{"url":"classes/UpdateAddressDto.html","title":"class - UpdateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/dto/update-address.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAddressDto } from './create-address.dto';\n\nexport class UpdateAddressDto extends PartialType(CreateAddressDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartDto.html":{"url":"classes/UpdateCartDto.html","title":"class - UpdateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/update-cart.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCartDto } from './create-cart.dto';\n\nexport class UpdateCartDto extends PartialType(CreateCartDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartItemDto.html":{"url":"classes/UpdateCartItemDto.html","title":"class - UpdateCartItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart-item/dto/update-cart-item.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCartItemDto } from './create-cart-item.dto';\n\nexport class UpdateCartItemDto extends PartialType(CreateCartItemDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExampleDto.html":{"url":"classes/UpdateExampleDto.html","title":"class - UpdateExampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/example/dto/update-example.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\nimport { CreateExampleDto } from './create-example.dto'\n\nexport class UpdateExampleDto extends PartialType(CreateExampleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOrderDto } from './create-order.dto';\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentDto.html":{"url":"classes/UpdatePaymentDto.html","title":"class - UpdatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/update-payment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePaymentDto } from './create-payment.dto';\n\nexport class UpdatePaymentDto extends PartialType(CreatePaymentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentTypeDto.html":{"url":"classes/UpdatePaymentTypeDto.html","title":"class - UpdatePaymentTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment-type/dto/update-payment-type.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePaymentTypeDto } from './create-payment-type.dto';\n\nexport class UpdatePaymentTypeDto extends PartialType(CreatePaymentTypeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductCategoryDto.html":{"url":"classes/UpdateProductCategoryDto.html","title":"class - UpdateProductCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product-category/dto/update-product-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductCategoryDto } from './create-product-category.dto';\n\nexport class UpdateProductCategoryDto extends PartialType(CreateProductCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\nimport { CreateUserDto } from './create-user.dto'\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                googleDisplayName\n                            \n                            \n                                googleFirstName\n                            \n                            \n                                googleId\n                            \n                            \n                                googleImage\n                            \n                            \n                                googleLastName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                order\n                            \n                            \n                                password\n                            \n                            \n                                refreshToken\n                            \n                            \n                                updated_at\n                            \n                            \n                                userAddress\n                            \n                            \n                                username\n                            \n                            \n                                userPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleDisplayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'google_display_name', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleFirstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'google_first_name', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'google_id', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'google_image', nullable: true, length: 250})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleLastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('character varying', {name: 'google_last_name', nullable: true, length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@IsUUID()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, order => order.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserAddress[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userAddress => userAddress.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPayment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserPayment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userPayment => userPayment.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  Index,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  BeforeInsert,\n  BeforeUpdate\n} from 'typeorm'\n\nimport { hash } from 'argon2'\nimport { IsNotEmpty, IsString, IsUUID } from 'class-validator'\n\nimport { Order } from '../../order/entities/order.entity'\nimport { UserAddress } from '../../user-address/entities/user-address'\nimport { UserPayment } from '../../user-payment/entities/user-payment.entity'\n@Index('user_pkey', ['id'], { unique: true })\n@Index('user_user_name_key', ['username'], { unique: true })\n@Entity()\nexport class User {\n  // hash the password before insert / update\n  @BeforeInsert()\n  @BeforeUpdate()\n  async hashPassword() {\n    // TODO: this needs a salt\n    this.password = await hash(this.password)\n  }\n\n  @PrimaryGeneratedColumn('uuid')\n  @IsUUID()\n  @IsNotEmpty()\n  id: string\n\n  @Column({ unique: true, nullable: false })\n  @IsNotEmpty()\n  @IsString()\n  username: string\n\n  @Column({ unique: true, nullable: true })\n  @IsString()\n  email: string\n\n  @Column({ nullable: false })\n  @IsNotEmpty()\n  @IsString()\n  password: string\n\n  @Column({ nullable: true })\n  // @IsNotEmpty()\n  @IsString()\n  firstName: string | null\n\n  @Column({ nullable: true })\n  // @IsNotEmpty()\n  @IsString()\n  lastName: string\n\n  @Column('character varying', {\n    name: 'google_id',\n    nullable: true,\n    length: 100\n  })\n  googleId: string | null\n\n  @Column('character varying', {\n    name: 'google_display_name',\n    nullable: true,\n    length: 100\n  })\n  googleDisplayName: string | null\n\n  @Column('character varying', {\n    name: 'google_first_name',\n    nullable: true,\n    length: 100\n  })\n  googleFirstName: string | null\n\n  @Column('character varying', {\n    name: 'google_last_name',\n    nullable: true,\n    length: 100\n  })\n  googleLastName: string | null\n\n  @Column('character varying', {\n    name: 'google_image',\n    nullable: true,\n    length: 250\n  })\n  googleImage: string | null\n\n  @Column({ nullable: true })\n  refreshToken: string | null\n\n  @CreateDateColumn()\n  created_at: Date\n\n  @UpdateDateColumn()\n  updated_at: Date\n\n  @OneToMany(() => Order, (order) => order.user)\n  order: Order[]\n\n  @OneToMany(() => UserAddress, (userAddress) => userAddress.user)\n  userAddress: UserAddress[]\n\n  @OneToMany(() => UserPayment, (userPayment) => userPayment.user)\n  userPayment: UserPayment[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserAddress.html":{"url":"entities/UserAddress.html","title":"entity - UserAddress","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-address/entities/user-address.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                addressId\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, address => address.userAddress)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-address/entities/user-address.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addressId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'address_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-address/entities/user-address.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-address/entities/user-address.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.userAddress)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-address/entities/user-address.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-address/entities/user-address.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { Address } from '../../address/entities/address.entity'\nimport { User } from '../../user/entities/user.entity'\n\n@Index('user_address_pkey', ['addressId', 'userId'], { unique: true })\n@Entity('user_address', { schema: 'public' })\nexport class UserAddress {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('integer', { primary: true, name: 'user_id' })\n  userId: number\n\n  @Column('integer', { primary: true, name: 'address_id' })\n  addressId: number\n\n  @ManyToOne(() => Address, (address) => address.userAddress)\n  @JoinColumn([{ name: 'address_id', referencedColumnName: 'id' }])\n  address: Address\n\n  @ManyToOne(() => User, (user) => user.userAddress)\n  @JoinColumn([{ name: 'user_id', referencedColumnName: 'id' }])\n  user: User\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserAddressController.html":{"url":"controllers/UserAddressController.html","title":"controller - UserAddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserAddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-address/user-address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-address\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { UserAddressService } from './user-address.service'\n\n@Controller('user-address')\nexport class UserAddressController {\n  // eslint-disable-next-line prettier/prettier\n  constructor(private readonly userAddressService: UserAddressService) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAddressModule.html":{"url":"modules/UserAddressModule.html","title":"module - UserAddressModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserAddressModule\n\n\n\ncluster_UserAddressModule_providers\n\n\n\n\nUserAddressService\n\nUserAddressService\n\n\n\nUserAddressModule\n\nUserAddressModule\n\nUserAddressModule -->\n\nUserAddressService->UserAddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-address/user-address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserAddressService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserAddressController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserAddressService } from './user-address.service'\nimport { UserAddressController } from './user-address.controller'\n\n@Module({\n  controllers: [UserAddressController],\n  providers: [UserAddressService]\n})\n// eslint-disable-next-line prettier/prettier\nexport class UserAddressModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAddressService.html":{"url":"injectables/UserAddressService.html","title":"injectable - UserAddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-address/user-address.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\n// eslint-disable-next-line prettier/prettier\nexport class UserAddressService { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByUsername\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBadRequestResponse()@Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/id/:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUsername\n                        \n                    \n                \n            \n            \n                \nfindByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/username/:username')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Delete('/id/:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AccessTokenGuard)@Patch('/id/:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  ParseUUIDPipe\n} from '@nestjs/common'\nimport { UserService } from './user.service'\nimport { CreateUserDto } from './dto/create-user.dto'\nimport { UpdateUserDto } from './dto/update-user.dto'\nimport { AccessTokenGuard } from '../common/guards/accessToken.guard'\nimport { ApiBadRequestResponse, ApiTags } from '@nestjs/swagger'\n\n@ApiTags('users')\n@Controller('users')\nexport class UserController {\n  // eslint-disable-next-line prettier/prettier\n  constructor(private readonly usersService: UserService) { }\n\n  @ApiBadRequestResponse()\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto)\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll()\n  }\n\n  @Get('/id/:id')\n  findById(@Param('id', new ParseUUIDPipe()) id: string) {\n    return this.usersService.findById(id)\n  }\n\n  @Get('/username/:username')\n  findByUsername(@Param('username') username: string) {\n    return this.usersService.findByUsername(username)\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @Patch('/id/:id')\n  update(\n    @Param('id', new ParseUUIDPipe()) id: string,\n    @Body() updateUserDto: UpdateUserDto\n  ) {\n    return this.usersService.update(id, updateUserDto)\n  }\n\n  @UseGuards(AccessTokenGuard)\n  @Delete('/id/:id')\n  remove(@Param('id', new ParseUUIDPipe()) id: string) {\n    return this.usersService.remove(id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { User } from './entities/user.entity'\nimport { UserService } from './user.service'\nimport { UserController } from './user.controller'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService]\n})\n// eslint-disable-next-line prettier/prettier\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserPayment.html":{"url":"entities/UserPayment.html","title":"entity - UserPayment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-payment/entities/user-payment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                payment\n                            \n                            \n                                paymentId\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'integer', name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-payment/entities/user-payment.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, payment => payment.userPayment)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-payment/entities/user-payment.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'payment_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-payment/entities/user-payment.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.userPayment)@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-payment/entities/user-payment.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('integer', {primary: true, name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-payment/entities/user-payment.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn\n} from 'typeorm'\nimport { Payment } from '../../payment/entities/payment.entity'\nimport { User } from '../../user/entities/user.entity'\n\n@Index('user_payment_pkey', ['paymentId', 'userId'], { unique: true })\n@Entity('user_payment', { schema: 'public' })\nexport class UserPayment {\n  @PrimaryGeneratedColumn({ type: 'integer', name: 'id' })\n  id: number\n\n  @Column('integer', { primary: true, name: 'user_id' })\n  userId: number\n\n  @Column('integer', { primary: true, name: 'payment_id' })\n  paymentId: number\n\n  @ManyToOne(() => Payment, (payment) => payment.userPayment)\n  @JoinColumn([{ name: 'payment_id', referencedColumnName: 'id' }])\n  payment: Payment\n\n  @ManyToOne(() => User, (user) => user.userPayment)\n  @JoinColumn([{ name: 'user_id', referencedColumnName: 'id' }])\n  user: User\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserPaymentController.html":{"url":"controllers/UserPaymentController.html","title":"controller - UserPaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserPaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-payment/user-payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-payment\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { UserPaymentService } from './user-payment.service'\n\n@Controller('user-payment')\nexport class UserPaymentController {\n  // eslint-disable-next-line prettier/prettier\n  constructor(private readonly userPaymentsService: UserPaymentService) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserPaymentModule.html":{"url":"modules/UserPaymentModule.html","title":"module - UserPaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    UserPaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserPaymentModule\n\n\n\ncluster_UserPaymentModule_providers\n\n\n\n\nUserPaymentService\n\nUserPaymentService\n\n\n\nUserPaymentModule\n\nUserPaymentModule\n\nUserPaymentModule -->\n\nUserPaymentService->UserPaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-payment/user-payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserPaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserPaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserPaymentService } from './user-payment.service'\nimport { UserPaymentController } from './user-payment.controller'\n\n@Module({\n  controllers: [UserPaymentController],\n  providers: [UserPaymentService]\n})\n// eslint-disable-next-line prettier/prettier\nexport class UserPaymentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPaymentService.html":{"url":"injectables/UserPaymentService.html","title":"injectable - UserPaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-payment/user-payment.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\n// eslint-disable-next-line prettier/prettier\nexport class UserPaymentService { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSeeder.html":{"url":"classes/UserSeeder.html","title":"class - UserSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/seeds/user.seeder.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Seeder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run(dataSource: DataSource, factoryManager: SeederFactoryManager)\n                \n            \n\n\n            \n                \n                    Defined in src/db/seeds/user.seeder.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataSource\n                                    \n                                            DataSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    factoryManager\n                                    \n                                            SeederFactoryManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Seeder, SeederFactoryManager } from 'typeorm-extension'\nimport { DataSource } from 'typeorm'\nimport { User } from '../../user/entities/user.entity'\n\nexport default class UserSeeder implements Seeder {\n  public async run(\n    dataSource: DataSource,\n    factoryManager: SeederFactoryManager\n  ): Promise {\n    const userFactory = await factoryManager.get(User)\n    const repository = dataSource.getRepository(User)\n\n    const numRecords = 3\n\n    //  create test user\n    const testUser = new User()\n\n    testUser.firstName = 'Test'\n    testUser.lastName = 'One'\n    testUser.username = 'testOne'\n    testUser.password = 'testOne'\n    testUser.email = 'test@one.com'\n\n    await repository.save(testUser)\n\n    // save numRecords factory generated entities, to the database\n    await userFactory.saveMany(numRecords)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from 'typeorm'\n\nimport { CreateUserDto } from './dto/create-user.dto'\nimport { UpdateUserDto } from './dto/update-user.dto'\n\nimport { User } from './entities/user.entity'\n\n@Injectable()\nexport class UserService {\n  logger: Logger\n\n  constructor(\n    @InjectRepository(User) private userRepository: Repository\n  ) {\n    this.logger = new Logger()\n  }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    const newUser = this.userRepository.create(createUserDto)\n\n    this.logger.log(`UserService created new user: ${newUser.id}`)\n    return this.userRepository.save(newUser)\n  }\n\n  async findAll(): Promise {\n    this.logger.log(`UserService findAll`)\n    return this.userRepository.find()\n  }\n\n  async findById(id: string): Promise {\n    this.logger.log(`UserService findById: ${id}`)\n    return this.userRepository.findOne({ where: { id } })\n  }\n\n  async findByUsername(username: string): Promise {\n    this.logger.log(`UserService findByUsername: ${username}`)\n    return this.userRepository.findOne({ where: { username } })\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto) {\n    const theUser = await this.findById(id)\n\n    this.logger.log(`UserService updates User: ${id}`)\n\n    // https://stackoverflow.com/questions/47792808/typeorm-update-item-and-return-it\n    return this.userRepository.save({\n      ...theUser, // existing fields\n      ...updateUserDto // updated fields\n    })\n  }\n\n  async remove(id: string) {\n    const toDelete = await this.findById(id)\n\n    this.logger.log(`ExampleService deletes a User: ${id}`)\n\n    return this.userRepository.remove(toDelete)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/address/address.controller.ts\n            \n            controller\n            AddressController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/address/dto/create-address.dto.ts\n            \n            class\n            CreateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/address/dto/update-address.dto.ts\n            \n            class\n            UpdateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/address/entities/address.entity.ts\n            \n            entity\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/address/entities/address.entity.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/accessToken.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/refreshToken.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart-item/cart-item.controller.ts\n            \n            controller\n            CartItemController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart-item/cart-item.service.ts\n            \n            injectable\n            CartItemService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart-item/dto/create-cart-item.dto.ts\n            \n            class\n            CreateCartItemDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart-item/dto/update-cart-item.dto.ts\n            \n            class\n            UpdateCartItemDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart-item/entities/cart-item.entity.ts\n            \n            entity\n            CartItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart-item/entities/cart-item.entity.ts\n            \n            class\n            CartItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/dto/create-cart.dto.ts\n            \n            class\n            CreateCartDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/dto/update-cart.dto.ts\n            \n            class\n            UpdateCartDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/entities/cart.entity.ts\n            \n            entity\n            Cart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/entities/cart.entity.ts\n            \n            class\n            Cart\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/guards/accessToken.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guards/refreshToken.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cliConfig.ts\n            \n            variable\n            cliConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cliConfig.ts\n            \n            variable\n            configOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cliConfig.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cliConfig.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/seedConfig.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/seedConfig.ts\n            \n            variable\n            envFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/seedConfig.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/seedConfig.ts\n            \n            variable\n            seedConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/migrations/1677818653265-generateStarterTables.ts\n            \n            class\n            generateStarterTables1677818653265\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/seeds/example.seeder.ts\n            \n            class\n            ExampleSeeder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/seeds/user.seeder.ts\n            \n            class\n            UserSeeder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/example/dto/create-example.dto.ts\n            \n            class\n            CreateExampleDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/example/dto/update-example.dto.ts\n            \n            class\n            UpdateExampleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/example/entities/example.entity.ts\n            \n            entity\n            Example\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/example/example.controller.ts\n            \n            controller\n            ExampleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/example/example.service.ts\n            \n            injectable\n            ExampleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            entity\n            Order\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment-type/dto/create-payment-type.dto.ts\n            \n            class\n            CreatePaymentTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment-type/dto/update-payment-type.dto.ts\n            \n            class\n            UpdatePaymentTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment-type/entities/product-category.entity.ts\n            \n            entity\n            PaymentTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment-type/entities/product-category.entity.ts\n            \n            class\n            PaymentTypes\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/payment-type/payment-type.controller.ts\n            \n            controller\n            PaymentTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment-type/payment-type.service.ts\n            \n            injectable\n            PaymentTypeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/dto/create-payment.dto.ts\n            \n            class\n            CreatePaymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/dto/update-payment.dto.ts\n            \n            class\n            UpdatePaymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/entities/payment.entity.ts\n            \n            entity\n            Payment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/entities/payment.entity.ts\n            \n            class\n            Payment\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product-category/dto/create-product-category.dto.ts\n            \n            class\n            CreateProductCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-category/dto/update-product-category.dto.ts\n            \n            class\n            UpdateProductCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-category/entities/ProductCategory.ts\n            \n            entity\n            ProductCategory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product-category/entities/ProductCategory.ts\n            \n            class\n            ProductCategory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/product-category/product-category.controller.ts\n            \n            controller\n            ProductCategoryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product-category/product-category.service.ts\n            \n            injectable\n            ProductCategoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            entity\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user-address/entities/user-address.ts\n            \n            entity\n            UserAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-address/entities/user-address.ts\n            \n            class\n            UserAddress\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user-address/user-address.controller.ts\n            \n            controller\n            UserAddressController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-address/user-address.service.ts\n            \n            injectable\n            UserAddressService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-payment/entities/user-payment.entity.ts\n            \n            entity\n            UserPayment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-payment/entities/user-payment.entity.ts\n            \n            class\n            UserPayment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user-payment/user-payment.controller.ts\n            \n            controller\n            UserPaymentController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-payment/user-payment.service.ts\n            \n            injectable\n            UserPaymentService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            argon2 : ^0.30.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            express-basic-auth : ^1.2.1\n        \n            express-session : ^1.17.3\n        \n            helmet : ^6.0.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.12\n        \n            typeorm-extension : ^2.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/generateStarterTables1677818653265.html":{"url":"classes/generateStarterTables1677818653265.html","title":"class - generateStarterTables1677818653265","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  generateStarterTables1677818653265\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/migrations/1677818653265-generateStarterTables.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'generateStarterTables1677818653265'\n                    \n                \n                    \n                        \n                                Defined in src/db/migrations/1677818653265-generateStarterTables.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/db/migrations/1677818653265-generateStarterTables.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/db/migrations/1677818653265-generateStarterTables.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm'\n\nexport class generateStarterTables1677818653265 implements MigrationInterface {\n  name = 'generateStarterTables1677818653265'\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"example\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"testString\" character varying, \"testNumber\" integer NOT NULL, \"isActive\" boolean NOT NULL DEFAULT true, \"description\" character varying NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT \"PK_608dd5fd6f0783062b07346ed1c\" PRIMARY KEY (\"id\"))`\n    )\n    await queryRunner.query(\n      `CREATE TABLE \"user\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" character varying NOT NULL, \"username\" character varying NOT NULL, \"password\" character varying NOT NULL, \"email\" character varying, \"refreshToken\" character varying, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT \"UQ_78a916df40e02a9deb1c4b75edb\" UNIQUE (\"username\"), CONSTRAINT \"UQ_e12875dfb3b1d92d7d7c5377e22\" UNIQUE (\"email\"), CONSTRAINT \"PK_cace4a159ff9f2512dd42373760\" PRIMARY KEY (\"id\"))`\n    )\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\"`)\n    await queryRunner.query(`DROP TABLE \"example\"`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nE-Comm API\nThis project was built with the NestJS Template.\nThis is an API for a generic e-commerce application.\nMore details\n\nTech stack\nInstallation and setup\nDocker\nHow to use\nMigrations / Seeding\nTesting\nDocumentation\nDev notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductCategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserPaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartItemModule\n\n\n\ncluster_CartItemModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PaymentTypeModule\n\n\n\ncluster_PaymentTypeModule_providers\n\n\n\ncluster_ProductCategoryModule\n\n\n\ncluster_ProductCategoryModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserAddressModule\n\n\n\ncluster_UserAddressModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserPaymentModule\n\n\n\ncluster_UserPaymentModule_providers\n\n\n\n\nAddressService\n\nAddressService\n\n\n\nAddressModule\n\nAddressModule\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartItemModule\n\nCartItemModule\n\nAppModule -->\n\nCartItemModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nAppModule -->\n\nExampleModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaymentTypeModule\n\nPaymentTypeModule\n\nAppModule -->\n\nPaymentTypeModule->AppModule\n\n\n\n\n\nProductCategoryModule\n\nProductCategoryModule\n\nAppModule -->\n\nProductCategoryModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserAddressModule\n\nUserAddressModule\n\nAppModule -->\n\nUserAddressModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserPaymentModule\n\nUserPaymentModule\n\nAppModule -->\n\nUserPaymentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthModule -->\n\nAccessTokenStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\nCartItemService\n\nCartItemService\n\nCartItemModule -->\n\nCartItemService->CartItemModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nExampleService\n\nExampleService\n\nExampleModule -->\n\nExampleService->ExampleModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPaymentTypeService\n\nPaymentTypeService\n\nPaymentTypeModule -->\n\nPaymentTypeService->PaymentTypeModule\n\n\n\n\n\nProductCategoryService\n\nProductCategoryService\n\nProductCategoryModule -->\n\nProductCategoryService->ProductCategoryModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserAddressService\n\nUserAddressService\n\nUserAddressModule -->\n\nUserAddressService->UserAddressModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserPaymentService\n\nUserPaymentService\n\nUserPaymentModule -->\n\nUserPaymentService->UserPaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : API for e-commerce site\n        \n            License : ISC\n        \n            Author : Matt Burnett mburnett@tutanota.de\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtPayload   (src/.../accessToken.strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/strategies/accessToken.strategy.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cliConfig   (src/.../cliConfig.ts)\n                        \n                        \n                            configOptions   (src/.../cliConfig.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            ENV   (src/.../cliConfig.ts)\n                        \n                        \n                            ENV   (src/.../seedConfig.ts)\n                        \n                        \n                            envFile   (src/.../cliConfig.ts)\n                        \n                        \n                            envFile   (src/.../seedConfig.ts)\n                        \n                        \n                            options   (src/.../seedConfig.ts)\n                        \n                        \n                            seedConfig   (src/.../seedConfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/cliConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cliConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(configOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: process.env.DB_HOST,\n  port: +process.env.DB_PORT,\n  username: process.env.DB_USER_NAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE_NAME,\n  logging: true,\n  // don't update database here. use migration:run instead.\n  synchronize: false,\n  migrationsRun: false,\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrations: [__dirname + '/../db/migrations/*.{js,ts}'],\n  migrationsTableName: 'migrations',\n  // Postgres database hosting expects SSL, but localhost doesn't.\n  ssl: process.env.NODE_ENV === 'deployed' ? true : false\n  // subscribers: ['src/subscriber/**/*.ts']\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !ENV ? '.env' : `.env.${ENV}`\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n\n    src/config/seedConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        envFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !ENV ? '.env' : `.env.${ENV}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  migrationsTableName: 'migrations',\n  type: 'postgres',\n  host: process.env.DB_HOST,\n  port: +process.env.DB_PORT,\n  username: process.env.DB_USER_NAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE_NAME,\n  logging: false,\n  // don't update database here. use migration:run instead.\n  synchronize: false,\n  // name: 'default',\n  entities: ['src/**/**.entity{.ts,.js}'],\n  migrations: ['src/db/migrations/**/*{.ts,.js}'],\n  subscribers: ['src/subscriber/**/*{.ts,.js}'],\n  seeds: ['src/db/seeds/**/*{.ts,.js}'],\n  factories: ['src/db/factories/**/*{.ts,.js}'],\n  // Postgres database hosting expects SSL, but localhost doesn't.\n  ssl: process.env.NODE_ENV === 'deployed' ? true : false\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seedConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(options)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
